"use strict";
(self.webpackChunkapp = self.webpackChunkapp || []).push([
  [179],
  {
    715: () => {
      function _e(i) {
        return "function" == typeof i;
      }
      function js(i) {
        const e = i((n) => {
          Error.call(n), (n.stack = new Error().stack);
        });
        return (
          (e.prototype = Object.create(Error.prototype)),
          (e.prototype.constructor = e),
          e
        );
      }
      const Bl = js(
        (i) =>
          function (e) {
            i(this),
              (this.message = e
                ? `${e.length} errors occurred during unsubscription:\n${e
                    .map((n, r) => `${r + 1}) ${n.toString()}`)
                    .join("\n  ")}`
                : ""),
              (this.name = "UnsubscriptionError"),
              (this.errors = e);
          }
      );
      function go(i, t) {
        if (i) {
          const e = i.indexOf(t);
          0 <= e && i.splice(e, 1);
        }
      }
      class ut {
        constructor(t) {
          (this.initialTeardown = t),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let t;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: e } = this;
            if (e)
              if (((this._parentage = null), Array.isArray(e)))
                for (const o of e) o.remove(this);
              else e.remove(this);
            const { initialTeardown: n } = this;
            if (_e(n))
              try {
                n();
              } catch (o) {
                t = o instanceof Bl ? o.errors : [o];
              }
            const { _finalizers: r } = this;
            if (r) {
              this._finalizers = null;
              for (const o of r)
                try {
                  rv(o);
                } catch (s) {
                  (t = t ?? []),
                    s instanceof Bl ? (t = [...t, ...s.errors]) : t.push(s);
                }
            }
            if (t) throw new Bl(t);
          }
        }
        add(t) {
          var e;
          if (t && t !== this)
            if (this.closed) rv(t);
            else {
              if (t instanceof ut) {
                if (t.closed || t._hasParent(this)) return;
                t._addParent(this);
              }
              (this._finalizers =
                null !== (e = this._finalizers) && void 0 !== e ? e : []).push(
                t
              );
            }
        }
        _hasParent(t) {
          const { _parentage: e } = this;
          return e === t || (Array.isArray(e) && e.includes(t));
        }
        _addParent(t) {
          const { _parentage: e } = this;
          this._parentage = Array.isArray(e) ? (e.push(t), e) : e ? [e, t] : t;
        }
        _removeParent(t) {
          const { _parentage: e } = this;
          e === t ? (this._parentage = null) : Array.isArray(e) && go(e, t);
        }
        remove(t) {
          const { _finalizers: e } = this;
          e && go(e, t), t instanceof ut && t._removeParent(this);
        }
      }
      ut.EMPTY = (() => {
        const i = new ut();
        return (i.closed = !0), i;
      })();
      const iv = ut.EMPTY;
      function nv(i) {
        return (
          i instanceof ut ||
          (i && "closed" in i && _e(i.remove) && _e(i.add) && _e(i.unsubscribe))
        );
      }
      function rv(i) {
        _e(i) ? i() : i.unsubscribe();
      }
      const wr = {
          onUnhandledError: null,
          onStoppedNotification: null,
          Promise: void 0,
          useDeprecatedSynchronousErrorHandling: !1,
          useDeprecatedNextContext: !1,
        },
        Vl = {
          setTimeout(i, t, ...e) {
            const { delegate: n } = Vl;
            return n?.setTimeout
              ? n.setTimeout(i, t, ...e)
              : setTimeout(i, t, ...e);
          },
          clearTimeout(i) {
            const { delegate: t } = Vl;
            return (t?.clearTimeout || clearTimeout)(i);
          },
          delegate: void 0,
        };
      function ov(i) {
        Vl.setTimeout(() => {
          const { onUnhandledError: t } = wr;
          if (!t) throw i;
          t(i);
        });
      }
      function bh() {}
      const nR = vh("C", void 0, void 0);
      function vh(i, t, e) {
        return { kind: i, value: t, error: e };
      }
      let xr = null;
      function jl(i) {
        if (wr.useDeprecatedSynchronousErrorHandling) {
          const t = !xr;
          if ((t && (xr = { errorThrown: !1, error: null }), i(), t)) {
            const { errorThrown: e, error: n } = xr;
            if (((xr = null), e)) throw n;
          }
        } else i();
      }
      class yh extends ut {
        constructor(t) {
          super(),
            (this.isStopped = !1),
            t
              ? ((this.destination = t), nv(t) && t.add(this))
              : (this.destination = dR);
        }
        static create(t, e, n) {
          return new Hs(t, e, n);
        }
        next(t) {
          this.isStopped
            ? xh(
                (function oR(i) {
                  return vh("N", i, void 0);
                })(t),
                this
              )
            : this._next(t);
        }
        error(t) {
          this.isStopped
            ? xh(
                (function rR(i) {
                  return vh("E", void 0, i);
                })(t),
                this
              )
            : ((this.isStopped = !0), this._error(t));
        }
        complete() {
          this.isStopped
            ? xh(nR, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(t) {
          this.destination.next(t);
        }
        _error(t) {
          try {
            this.destination.error(t);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const aR = Function.prototype.bind;
      function wh(i, t) {
        return aR.call(i, t);
      }
      class lR {
        constructor(t) {
          this.partialObserver = t;
        }
        next(t) {
          const { partialObserver: e } = this;
          if (e.next)
            try {
              e.next(t);
            } catch (n) {
              Hl(n);
            }
        }
        error(t) {
          const { partialObserver: e } = this;
          if (e.error)
            try {
              e.error(t);
            } catch (n) {
              Hl(n);
            }
          else Hl(t);
        }
        complete() {
          const { partialObserver: t } = this;
          if (t.complete)
            try {
              t.complete();
            } catch (e) {
              Hl(e);
            }
        }
      }
      class Hs extends yh {
        constructor(t, e, n) {
          let r;
          if ((super(), _e(t) || !t))
            r = {
              next: t ?? void 0,
              error: e ?? void 0,
              complete: n ?? void 0,
            };
          else {
            let o;
            this && wr.useDeprecatedNextContext
              ? ((o = Object.create(t)),
                (o.unsubscribe = () => this.unsubscribe()),
                (r = {
                  next: t.next && wh(t.next, o),
                  error: t.error && wh(t.error, o),
                  complete: t.complete && wh(t.complete, o),
                }))
              : (r = t);
          }
          this.destination = new lR(r);
        }
      }
      function Hl(i) {
        wr.useDeprecatedSynchronousErrorHandling
          ? (function sR(i) {
              wr.useDeprecatedSynchronousErrorHandling &&
                xr &&
                ((xr.errorThrown = !0), (xr.error = i));
            })(i)
          : ov(i);
      }
      function xh(i, t) {
        const { onStoppedNotification: e } = wr;
        e && Vl.setTimeout(() => e(i, t));
      }
      const dR = {
          closed: !0,
          next: bh,
          error: function cR(i) {
            throw i;
          },
          complete: bh,
        },
        zl =
          ("function" == typeof Symbol && Symbol.observable) || "@@observable";
      function Yn(i) {
        return i;
      }
      function sv(i) {
        return 0 === i.length
          ? Yn
          : 1 === i.length
          ? i[0]
          : function (e) {
              return i.reduce((n, r) => r(n), e);
            };
      }
      let be = (() => {
        class i {
          constructor(e) {
            e && (this._subscribe = e);
          }
          lift(e) {
            const n = new i();
            return (n.source = this), (n.operator = e), n;
          }
          subscribe(e, n, r) {
            const o = (function fR(i) {
              return (
                (i && i instanceof yh) ||
                ((function hR(i) {
                  return i && _e(i.next) && _e(i.error) && _e(i.complete);
                })(i) &&
                  nv(i))
              );
            })(e)
              ? e
              : new Hs(e, n, r);
            return (
              jl(() => {
                const { operator: s, source: a } = this;
                o.add(
                  s
                    ? s.call(o, a)
                    : a
                    ? this._subscribe(o)
                    : this._trySubscribe(o)
                );
              }),
              o
            );
          }
          _trySubscribe(e) {
            try {
              return this._subscribe(e);
            } catch (n) {
              e.error(n);
            }
          }
          forEach(e, n) {
            return new (n = av(n))((r, o) => {
              const s = new Hs({
                next: (a) => {
                  try {
                    e(a);
                  } catch (l) {
                    o(l), s.unsubscribe();
                  }
                },
                error: o,
                complete: r,
              });
              this.subscribe(s);
            });
          }
          _subscribe(e) {
            var n;
            return null === (n = this.source) || void 0 === n
              ? void 0
              : n.subscribe(e);
          }
          [zl]() {
            return this;
          }
          pipe(...e) {
            return sv(e)(this);
          }
          toPromise(e) {
            return new (e = av(e))((n, r) => {
              let o;
              this.subscribe(
                (s) => (o = s),
                (s) => r(s),
                () => n(o)
              );
            });
          }
        }
        return (i.create = (t) => new i(t)), i;
      })();
      function av(i) {
        var t;
        return null !== (t = i ?? wr.Promise) && void 0 !== t ? t : Promise;
      }
      const mR = js(
        (i) =>
          function () {
            i(this),
              (this.name = "ObjectUnsubscribedError"),
              (this.message = "object unsubscribed");
          }
      );
      let se = (() => {
        class i extends be {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(e) {
            const n = new lv(this, this);
            return (n.operator = e), n;
          }
          _throwIfClosed() {
            if (this.closed) throw new mR();
          }
          next(e) {
            jl(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const n of this.currentObservers) n.next(e);
              }
            });
          }
          error(e) {
            jl(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = e);
                const { observers: n } = this;
                for (; n.length; ) n.shift().error(e);
              }
            });
          }
          complete() {
            jl(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: e } = this;
                for (; e.length; ) e.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var e;
            return (
              (null === (e = this.observers) || void 0 === e
                ? void 0
                : e.length) > 0
            );
          }
          _trySubscribe(e) {
            return this._throwIfClosed(), super._trySubscribe(e);
          }
          _subscribe(e) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(e),
              this._innerSubscribe(e)
            );
          }
          _innerSubscribe(e) {
            const { hasError: n, isStopped: r, observers: o } = this;
            return n || r
              ? iv
              : ((this.currentObservers = null),
                o.push(e),
                new ut(() => {
                  (this.currentObservers = null), go(o, e);
                }));
          }
          _checkFinalizedStatuses(e) {
            const { hasError: n, thrownError: r, isStopped: o } = this;
            n ? e.error(r) : o && e.complete();
          }
          asObservable() {
            const e = new be();
            return (e.source = this), e;
          }
        }
        return (i.create = (t, e) => new lv(t, e)), i;
      })();
      class lv extends se {
        constructor(t, e) {
          super(), (this.destination = t), (this.source = e);
        }
        next(t) {
          var e, n;
          null ===
            (n =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.next) ||
            void 0 === n ||
            n.call(e, t);
        }
        error(t) {
          var e, n;
          null ===
            (n =
              null === (e = this.destination) || void 0 === e
                ? void 0
                : e.error) ||
            void 0 === n ||
            n.call(e, t);
        }
        complete() {
          var t, e;
          null ===
            (e =
              null === (t = this.destination) || void 0 === t
                ? void 0
                : t.complete) ||
            void 0 === e ||
            e.call(t);
        }
        _subscribe(t) {
          var e, n;
          return null !==
            (n =
              null === (e = this.source) || void 0 === e
                ? void 0
                : e.subscribe(t)) && void 0 !== n
            ? n
            : iv;
        }
      }
      function cv(i) {
        return _e(i?.lift);
      }
      function tt(i) {
        return (t) => {
          if (cv(t))
            return t.lift(function (e) {
              try {
                return i(e, this);
              } catch (n) {
                this.error(n);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
      function Ge(i, t, e, n, r) {
        return new pR(i, t, e, n, r);
      }
      class pR extends yh {
        constructor(t, e, n, r, o, s) {
          super(t),
            (this.onFinalize = o),
            (this.shouldUnsubscribe = s),
            (this._next = e
              ? function (a) {
                  try {
                    e(a);
                  } catch (l) {
                    t.error(l);
                  }
                }
              : super._next),
            (this._error = r
              ? function (a) {
                  try {
                    r(a);
                  } catch (l) {
                    t.error(l);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = n
              ? function () {
                  try {
                    n();
                  } catch (a) {
                    t.error(a);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var t;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: e } = this;
            super.unsubscribe(),
              !e &&
                (null === (t = this.onFinalize) ||
                  void 0 === t ||
                  t.call(this));
          }
        }
      }
      function $(i, t) {
        return tt((e, n) => {
          let r = 0;
          e.subscribe(
            Ge(n, (o) => {
              n.next(i.call(t, o, r++));
            })
          );
        });
      }
      var Ch = function (i, t) {
        return (Ch =
          Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array &&
            function (e, n) {
              e.__proto__ = n;
            }) ||
          function (e, n) {
            for (var r in n)
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
          })(i, t);
      };
      function xi(i, t) {
        if ("function" != typeof t && null !== t)
          throw new TypeError(
            "Class extends value " + String(t) + " is not a constructor or null"
          );
        function e() {
          this.constructor = i;
        }
        Ch(i, t),
          (i.prototype =
            null === t
              ? Object.create(t)
              : ((e.prototype = t.prototype), new e()));
      }
      var C = function () {
        return (
          (C =
            Object.assign ||
            function (t) {
              for (var e, n = 1, r = arguments.length; n < r; n++)
                for (var o in (e = arguments[n]))
                  Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
              return t;
            }),
          C.apply(this, arguments)
        );
      };
      function Cr(i, t) {
        var e = {};
        for (var n in i)
          Object.prototype.hasOwnProperty.call(i, n) &&
            t.indexOf(n) < 0 &&
            (e[n] = i[n]);
        if (null != i && "function" == typeof Object.getOwnPropertySymbols) {
          var r = 0;
          for (n = Object.getOwnPropertySymbols(i); r < n.length; r++)
            t.indexOf(n[r]) < 0 &&
              Object.prototype.propertyIsEnumerable.call(i, n[r]) &&
              (e[n[r]] = i[n[r]]);
        }
        return e;
      }
      function xn(i, t, e, n) {
        return new (e || (e = Promise))(function (o, s) {
          function a(d) {
            try {
              c(n.next(d));
            } catch (u) {
              s(u);
            }
          }
          function l(d) {
            try {
              c(n.throw(d));
            } catch (u) {
              s(u);
            }
          }
          function c(d) {
            d.done
              ? o(d.value)
              : (function r(o) {
                  return o instanceof e
                    ? o
                    : new e(function (s) {
                        s(o);
                      });
                })(d.value).then(a, l);
          }
          c((n = n.apply(i, t || [])).next());
        });
      }
      function Kn(i, t) {
        var n,
          r,
          o,
          s,
          e = {
            label: 0,
            sent: function () {
              if (1 & o[0]) throw o[1];
              return o[1];
            },
            trys: [],
            ops: [],
          };
        return (
          (s = { next: a(0), throw: a(1), return: a(2) }),
          "function" == typeof Symbol &&
            (s[Symbol.iterator] = function () {
              return this;
            }),
          s
        );
        function a(c) {
          return function (d) {
            return (function l(c) {
              if (n) throw new TypeError("Generator is already executing.");
              for (; s && ((s = 0), c[0] && (e = 0)), e; )
                try {
                  if (
                    ((n = 1),
                    r &&
                      (o =
                        2 & c[0]
                          ? r.return
                          : c[0]
                          ? r.throw || ((o = r.return) && o.call(r), 0)
                          : r.next) &&
                      !(o = o.call(r, c[1])).done)
                  )
                    return o;
                  switch (((r = 0), o && (c = [2 & c[0], o.value]), c[0])) {
                    case 0:
                    case 1:
                      o = c;
                      break;
                    case 4:
                      return e.label++, { value: c[1], done: !1 };
                    case 5:
                      e.label++, (r = c[1]), (c = [0]);
                      continue;
                    case 7:
                      (c = e.ops.pop()), e.trys.pop();
                      continue;
                    default:
                      if (
                        !(o = (o = e.trys).length > 0 && o[o.length - 1]) &&
                        (6 === c[0] || 2 === c[0])
                      ) {
                        e = 0;
                        continue;
                      }
                      if (3 === c[0] && (!o || (c[1] > o[0] && c[1] < o[3]))) {
                        e.label = c[1];
                        break;
                      }
                      if (6 === c[0] && e.label < o[1]) {
                        (e.label = o[1]), (o = c);
                        break;
                      }
                      if (o && e.label < o[2]) {
                        (e.label = o[2]), e.ops.push(c);
                        break;
                      }
                      o[2] && e.ops.pop(), e.trys.pop();
                      continue;
                  }
                  c = t.call(i, e);
                } catch (d) {
                  (c = [6, d]), (r = 0);
                } finally {
                  n = o = 0;
                }
              if (5 & c[0]) throw c[1];
              return { value: c[0] ? c[1] : void 0, done: !0 };
            })([c, d]);
          };
        }
      }
      function Ul(i, t, e) {
        if (e || 2 === arguments.length)
          for (var o, n = 0, r = t.length; n < r; n++)
            (o || !(n in t)) &&
              (o || (o = Array.prototype.slice.call(t, 0, n)), (o[n] = t[n]));
        return i.concat(o || Array.prototype.slice.call(t));
      }
      function Dr(i) {
        return this instanceof Dr ? ((this.v = i), this) : new Dr(i);
      }
      function _R(i, t, e) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var r,
          n = e.apply(i, t || []),
          o = [];
        return (
          (r = {}),
          s("next"),
          s("throw"),
          s("return"),
          (r[Symbol.asyncIterator] = function () {
            return this;
          }),
          r
        );
        function s(h) {
          n[h] &&
            (r[h] = function (f) {
              return new Promise(function (m, p) {
                o.push([h, f, m, p]) > 1 || a(h, f);
              });
            });
        }
        function a(h, f) {
          try {
            !(function l(h) {
              h.value instanceof Dr
                ? Promise.resolve(h.value.v).then(c, d)
                : u(o[0][2], h);
            })(n[h](f));
          } catch (m) {
            u(o[0][3], m);
          }
        }
        function c(h) {
          a("next", h);
        }
        function d(h) {
          a("throw", h);
        }
        function u(h, f) {
          h(f), o.shift(), o.length && a(o[0][0], o[0][1]);
        }
      }
      function bR(i) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var e,
          t = i[Symbol.asyncIterator];
        return t
          ? t.call(i)
          : ((i = (function uv(i) {
              var t = "function" == typeof Symbol && Symbol.iterator,
                e = t && i[t],
                n = 0;
              if (e) return e.call(i);
              if (i && "number" == typeof i.length)
                return {
                  next: function () {
                    return (
                      i && n >= i.length && (i = void 0),
                      { value: i && i[n++], done: !i }
                    );
                  },
                };
              throw new TypeError(
                t
                  ? "Object is not iterable."
                  : "Symbol.iterator is not defined."
              );
            })(i)),
            (e = {}),
            n("next"),
            n("throw"),
            n("return"),
            (e[Symbol.asyncIterator] = function () {
              return this;
            }),
            e);
        function n(o) {
          e[o] =
            i[o] &&
            function (s) {
              return new Promise(function (a, l) {
                !(function r(o, s, a, l) {
                  Promise.resolve(l).then(function (c) {
                    o({ value: c, done: a });
                  }, s);
                })(a, l, (s = i[o](s)).done, s.value);
              });
            };
        }
      }
      const Dh = (i) =>
        i && "number" == typeof i.length && "function" != typeof i;
      function hv(i) {
        return _e(i?.then);
      }
      function fv(i) {
        return _e(i[zl]);
      }
      function mv(i) {
        return Symbol.asyncIterator && _e(i?.[Symbol.asyncIterator]);
      }
      function pv(i) {
        return new TypeError(
          `You provided ${
            null !== i && "object" == typeof i ? "an invalid object" : `'${i}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      const gv = (function yR() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      })();
      function _v(i) {
        return _e(i?.[gv]);
      }
      function bv(i) {
        return _R(this, arguments, function* () {
          const e = i.getReader();
          try {
            for (;;) {
              const { value: n, done: r } = yield Dr(e.read());
              if (r) return yield Dr(void 0);
              yield yield Dr(n);
            }
          } finally {
            e.releaseLock();
          }
        });
      }
      function vv(i) {
        return _e(i?.getReader);
      }
      function Gt(i) {
        if (i instanceof be) return i;
        if (null != i) {
          if (fv(i))
            return (function wR(i) {
              return new be((t) => {
                const e = i[zl]();
                if (_e(e.subscribe)) return e.subscribe(t);
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              });
            })(i);
          if (Dh(i))
            return (function xR(i) {
              return new be((t) => {
                for (let e = 0; e < i.length && !t.closed; e++) t.next(i[e]);
                t.complete();
              });
            })(i);
          if (hv(i))
            return (function CR(i) {
              return new be((t) => {
                i.then(
                  (e) => {
                    t.closed || (t.next(e), t.complete());
                  },
                  (e) => t.error(e)
                ).then(null, ov);
              });
            })(i);
          if (mv(i)) return yv(i);
          if (_v(i))
            return (function DR(i) {
              return new be((t) => {
                for (const e of i) if ((t.next(e), t.closed)) return;
                t.complete();
              });
            })(i);
          if (vv(i))
            return (function ER(i) {
              return yv(bv(i));
            })(i);
        }
        throw pv(i);
      }
      function yv(i) {
        return new be((t) => {
          (function MR(i, t) {
            var e, n, r, o;
            return xn(this, void 0, void 0, function* () {
              try {
                for (e = bR(i); !(n = yield e.next()).done; )
                  if ((t.next(n.value), t.closed)) return;
              } catch (s) {
                r = { error: s };
              } finally {
                try {
                  n && !n.done && (o = e.return) && (yield o.call(e));
                } finally {
                  if (r) throw r.error;
                }
              }
              t.complete();
            });
          })(i, t).catch((e) => t.error(e));
        });
      }
      function Cn(i, t, e, n = 0, r = !1) {
        const o = t.schedule(function () {
          e(), r ? i.add(this.schedule(null, n)) : this.unsubscribe();
        }, n);
        if ((i.add(o), !r)) return o;
      }
      function Dt(i, t, e = 1 / 0) {
        return _e(t)
          ? Dt((n, r) => $((o, s) => t(n, o, r, s))(Gt(i(n, r))), e)
          : ("number" == typeof t && (e = t),
            tt((n, r) =>
              (function SR(i, t, e, n, r, o, s, a) {
                const l = [];
                let c = 0,
                  d = 0,
                  u = !1;
                const h = () => {
                    u && !l.length && !c && t.complete();
                  },
                  f = (p) => (c < n ? m(p) : l.push(p)),
                  m = (p) => {
                    o && t.next(p), c++;
                    let g = !1;
                    Gt(e(p, d++)).subscribe(
                      Ge(
                        t,
                        (b) => {
                          r?.(b), o ? f(b) : t.next(b);
                        },
                        () => {
                          g = !0;
                        },
                        void 0,
                        () => {
                          if (g)
                            try {
                              for (c--; l.length && c < n; ) {
                                const b = l.shift();
                                s ? Cn(t, s, () => m(b)) : m(b);
                              }
                              h();
                            } catch (b) {
                              t.error(b);
                            }
                        }
                      )
                    );
                  };
                return (
                  i.subscribe(
                    Ge(t, f, () => {
                      (u = !0), h();
                    })
                  ),
                  () => {
                    a?.();
                  }
                );
              })(n, r, i, e)
            ));
      }
      function _o(i = 1 / 0) {
        return Dt(Yn, i);
      }
      const Ji = new be((i) => i.complete());
      function wv(i) {
        return i && _e(i.schedule);
      }
      function Eh(i) {
        return i[i.length - 1];
      }
      function xv(i) {
        return _e(Eh(i)) ? i.pop() : void 0;
      }
      function zs(i) {
        return wv(Eh(i)) ? i.pop() : void 0;
      }
      function Mh(i, t = 0) {
        return tt((e, n) => {
          e.subscribe(
            Ge(
              n,
              (r) => Cn(n, i, () => n.next(r), t),
              () => Cn(n, i, () => n.complete(), t),
              (r) => Cn(n, i, () => n.error(r), t)
            )
          );
        });
      }
      function Cv(i, t = 0) {
        return tt((e, n) => {
          n.add(i.schedule(() => e.subscribe(n), t));
        });
      }
      function Dv(i, t) {
        if (!i) throw new Error("Iterable cannot be null");
        return new be((e) => {
          Cn(e, t, () => {
            const n = i[Symbol.asyncIterator]();
            Cn(
              e,
              t,
              () => {
                n.next().then((r) => {
                  r.done ? e.complete() : e.next(r.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      function Ye(i, t) {
        return t
          ? (function PR(i, t) {
              if (null != i) {
                if (fv(i))
                  return (function IR(i, t) {
                    return Gt(i).pipe(Cv(t), Mh(t));
                  })(i, t);
                if (Dh(i))
                  return (function RR(i, t) {
                    return new be((e) => {
                      let n = 0;
                      return t.schedule(function () {
                        n === i.length
                          ? e.complete()
                          : (e.next(i[n++]), e.closed || this.schedule());
                      });
                    });
                  })(i, t);
                if (hv(i))
                  return (function AR(i, t) {
                    return Gt(i).pipe(Cv(t), Mh(t));
                  })(i, t);
                if (mv(i)) return Dv(i, t);
                if (_v(i))
                  return (function OR(i, t) {
                    return new be((e) => {
                      let n;
                      return (
                        Cn(e, t, () => {
                          (n = i[gv]()),
                            Cn(
                              e,
                              t,
                              () => {
                                let r, o;
                                try {
                                  ({ value: r, done: o } = n.next());
                                } catch (s) {
                                  return void e.error(s);
                                }
                                o ? e.complete() : e.next(r);
                              },
                              0,
                              !0
                            );
                        }),
                        () => _e(n?.return) && n.return()
                      );
                    });
                  })(i, t);
                if (vv(i))
                  return (function FR(i, t) {
                    return Dv(bv(i), t);
                  })(i, t);
              }
              throw pv(i);
            })(i, t)
          : Gt(i);
      }
      function Sh(...i) {
        const t = zs(i),
          e = (function kR(i, t) {
            return "number" == typeof Eh(i) ? i.pop() : t;
          })(i, 1 / 0),
          n = i;
        return n.length ? (1 === n.length ? Gt(n[0]) : _o(e)(Ye(n, t))) : Ji;
      }
      function Ev(i = {}) {
        const {
          connector: t = () => new se(),
          resetOnError: e = !0,
          resetOnComplete: n = !0,
          resetOnRefCountZero: r = !0,
        } = i;
        return (o) => {
          let s,
            a,
            l,
            c = 0,
            d = !1,
            u = !1;
          const h = () => {
              a?.unsubscribe(), (a = void 0);
            },
            f = () => {
              h(), (s = l = void 0), (d = u = !1);
            },
            m = () => {
              const p = s;
              f(), p?.unsubscribe();
            };
          return tt((p, g) => {
            c++, !u && !d && h();
            const b = (l = l ?? t());
            g.add(() => {
              c--, 0 === c && !u && !d && (a = Th(m, r));
            }),
              b.subscribe(g),
              !s &&
                c > 0 &&
                ((s = new Hs({
                  next: (y) => b.next(y),
                  error: (y) => {
                    (u = !0), h(), (a = Th(f, e, y)), b.error(y);
                  },
                  complete: () => {
                    (d = !0), h(), (a = Th(f, n)), b.complete();
                  },
                })),
                Gt(p).subscribe(s));
          })(o);
        };
      }
      function Th(i, t, ...e) {
        if (!0 === t) return void i();
        if (!1 === t) return;
        const n = new Hs({
          next: () => {
            n.unsubscribe(), i();
          },
        });
        return Gt(t(...e)).subscribe(n);
      }
      function Le(i) {
        for (let t in i) if (i[t] === Le) return t;
        throw Error("Could not find renamed property on target object.");
      }
      function kh(i, t) {
        for (const e in t)
          t.hasOwnProperty(e) && !i.hasOwnProperty(e) && (i[e] = t[e]);
      }
      function Ve(i) {
        if ("string" == typeof i) return i;
        if (Array.isArray(i)) return "[" + i.map(Ve).join(", ") + "]";
        if (null == i) return "" + i;
        if (i.overriddenName) return `${i.overriddenName}`;
        if (i.name) return `${i.name}`;
        const t = i.toString();
        if (null == t) return "" + t;
        const e = t.indexOf("\n");
        return -1 === e ? t : t.substring(0, e);
      }
      function Ih(i, t) {
        return null == i || "" === i
          ? null === t
            ? ""
            : t
          : null == t || "" === t
          ? i
          : i + " " + t;
      }
      const NR = Le({ __forward_ref__: Le });
      function Ee(i) {
        return (
          (i.__forward_ref__ = Ee),
          (i.toString = function () {
            return Ve(this());
          }),
          i
        );
      }
      function G(i) {
        return Ah(i) ? i() : i;
      }
      function Ah(i) {
        return (
          "function" == typeof i &&
          i.hasOwnProperty(NR) &&
          i.__forward_ref__ === Ee
        );
      }
      function Rh(i) {
        return i && !!i.ɵproviders;
      }
      const $l = "https://g.co/ng/security#xss";
      class D extends Error {
        constructor(t, e) {
          super(
            (function Gl(i, t) {
              return `NG0${Math.abs(i)}${t ? ": " + t.trim() : ""}`;
            })(t, e)
          ),
            (this.code = t);
        }
      }
      function J(i) {
        return "string" == typeof i ? i : null == i ? "" : String(i);
      }
      function ql(i, t) {
        throw new D(-201, !1);
      }
      function Ci(i, t) {
        null == i &&
          (function Se(i, t, e, n) {
            throw new Error(
              `ASSERTION ERROR: ${i}` +
                (null == n ? "" : ` [Expected=> ${e} ${n} ${t} <=Actual]`)
            );
          })(t, i, null, "!=");
      }
      function k(i) {
        return {
          token: i.token,
          providedIn: i.providedIn || null,
          factory: i.factory,
          value: void 0,
        };
      }
      function Q(i) {
        return { providers: i.providers || [], imports: i.imports || [] };
      }
      function Wl(i) {
        return Mv(i, Ql) || Mv(i, Tv);
      }
      function Mv(i, t) {
        return i.hasOwnProperty(t) ? i[t] : null;
      }
      function Sv(i) {
        return i && (i.hasOwnProperty(Oh) || i.hasOwnProperty(GR))
          ? i[Oh]
          : null;
      }
      const Ql = Le({ ɵprov: Le }),
        Oh = Le({ ɵinj: Le }),
        Tv = Le({ ngInjectableDef: Le }),
        GR = Le({ ngInjectorDef: Le });
      var q = (() => (
        ((q = q || {})[(q.Default = 0)] = "Default"),
        (q[(q.Host = 1)] = "Host"),
        (q[(q.Self = 2)] = "Self"),
        (q[(q.SkipSelf = 4)] = "SkipSelf"),
        (q[(q.Optional = 8)] = "Optional"),
        q
      ))();
      let Fh;
      function Di(i) {
        const t = Fh;
        return (Fh = i), t;
      }
      function kv(i, t, e) {
        const n = Wl(i);
        return n && "root" == n.providedIn
          ? void 0 === n.value
            ? (n.value = n.factory())
            : n.value
          : e & q.Optional
          ? null
          : void 0 !== t
          ? t
          : void ql(Ve(i));
      }
      const je = (() =>
          (typeof globalThis < "u" && globalThis) ||
          (typeof global < "u" && global) ||
          (typeof window < "u" && window) ||
          (typeof self < "u" &&
            typeof WorkerGlobalScope < "u" &&
            self instanceof WorkerGlobalScope &&
            self))(),
        Us = {},
        Ph = "__NG_DI_FLAG__",
        Yl = "ngTempTokenPath",
        QR = /\n/gm,
        Iv = "__source";
      let $s;
      function bo(i) {
        const t = $s;
        return ($s = i), t;
      }
      function KR(i, t = q.Default) {
        if (void 0 === $s) throw new D(-203, !1);
        return null === $s
          ? kv(i, void 0, t)
          : $s.get(i, t & q.Optional ? null : void 0, t);
      }
      function w(i, t = q.Default) {
        return (
          (function qR() {
            return Fh;
          })() || KR
        )(G(i), t);
      }
      function Y(i, t = q.Default) {
        return w(i, Kl(t));
      }
      function Kl(i) {
        return typeof i > "u" || "number" == typeof i
          ? i
          : 0 |
              (i.optional && 8) |
              (i.host && 1) |
              (i.self && 2) |
              (i.skipSelf && 4);
      }
      function Nh(i) {
        const t = [];
        for (let e = 0; e < i.length; e++) {
          const n = G(i[e]);
          if (Array.isArray(n)) {
            if (0 === n.length) throw new D(900, !1);
            let r,
              o = q.Default;
            for (let s = 0; s < n.length; s++) {
              const a = n[s],
                l = XR(a);
              "number" == typeof l
                ? -1 === l
                  ? (r = a.token)
                  : (o |= l)
                : (r = a);
            }
            t.push(w(r, o));
          } else t.push(w(n));
        }
        return t;
      }
      function Gs(i, t) {
        return (i[Ph] = t), (i.prototype[Ph] = t), i;
      }
      function XR(i) {
        return i[Ph];
      }
      function Zn(i) {
        return { toString: i }.toString();
      }
      var Bi = (() => (
          ((Bi = Bi || {})[(Bi.OnPush = 0)] = "OnPush"),
          (Bi[(Bi.Default = 1)] = "Default"),
          Bi
        ))(),
        Vi = (() => {
          return (
            ((i = Vi || (Vi = {}))[(i.Emulated = 0)] = "Emulated"),
            (i[(i.None = 2)] = "None"),
            (i[(i.ShadowDom = 3)] = "ShadowDom"),
            Vi
          );
          var i;
        })();
      const Dn = {},
        we = [],
        Xl = Le({ ɵcmp: Le }),
        Lh = Le({ ɵdir: Le }),
        Bh = Le({ ɵpipe: Le }),
        Rv = Le({ ɵmod: Le }),
        En = Le({ ɵfac: Le }),
        qs = Le({ __NG_ELEMENT_ID__: Le });
      let eO = 0;
      function Te(i) {
        return Zn(() => {
          const e = !0 === i.standalone,
            n = {},
            r = {
              type: i.type,
              providersResolver: null,
              decls: i.decls,
              vars: i.vars,
              factory: null,
              template: i.template || null,
              consts: i.consts || null,
              ngContentSelectors: i.ngContentSelectors,
              hostBindings: i.hostBindings || null,
              hostVars: i.hostVars || 0,
              hostAttrs: i.hostAttrs || null,
              contentQueries: i.contentQueries || null,
              declaredInputs: n,
              inputs: null,
              outputs: null,
              exportAs: i.exportAs || null,
              onPush: i.changeDetection === Bi.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              standalone: e,
              dependencies: (e && i.dependencies) || null,
              getStandaloneInjector: null,
              selectors: i.selectors || we,
              viewQuery: i.viewQuery || null,
              features: i.features || null,
              data: i.data || {},
              encapsulation: i.encapsulation || Vi.Emulated,
              id: "c" + eO++,
              styles: i.styles || we,
              _: null,
              setInput: null,
              schemas: i.schemas || null,
              tView: null,
              findHostDirectiveDefs: null,
              hostDirectives: null,
            },
            o = i.dependencies,
            s = i.features;
          return (
            (r.inputs = Pv(i.inputs, n)),
            (r.outputs = Pv(i.outputs)),
            s && s.forEach((a) => a(r)),
            (r.directiveDefs = o
              ? () => ("function" == typeof o ? o() : o).map(Ov).filter(Fv)
              : null),
            (r.pipeDefs = o
              ? () => ("function" == typeof o ? o() : o).map(qt).filter(Fv)
              : null),
            r
          );
        });
      }
      function Ov(i) {
        return ke(i) || Ft(i);
      }
      function Fv(i) {
        return null !== i;
      }
      function K(i) {
        return Zn(() => ({
          type: i.type,
          bootstrap: i.bootstrap || we,
          declarations: i.declarations || we,
          imports: i.imports || we,
          exports: i.exports || we,
          transitiveCompileScopes: null,
          schemas: i.schemas || null,
          id: i.id || null,
        }));
      }
      function Pv(i, t) {
        if (null == i) return Dn;
        const e = {};
        for (const n in i)
          if (i.hasOwnProperty(n)) {
            let r = i[n],
              o = r;
            Array.isArray(r) && ((o = r[1]), (r = r[0])),
              (e[r] = n),
              t && (t[r] = o);
          }
        return e;
      }
      const M = Te;
      function ke(i) {
        return i[Xl] || null;
      }
      function Ft(i) {
        return i[Lh] || null;
      }
      function qt(i) {
        return i[Bh] || null;
      }
      function li(i, t) {
        const e = i[Rv] || null;
        if (!e && !0 === t)
          throw new Error(`Type ${Ve(i)} does not have '\u0275mod' property.`);
        return e;
      }
      function ci(i) {
        return Array.isArray(i) && "object" == typeof i[1];
      }
      function Hi(i) {
        return Array.isArray(i) && !0 === i[1];
      }
      function Hh(i) {
        return 0 != (4 & i.flags);
      }
      function Ks(i) {
        return i.componentOffset > -1;
      }
      function ic(i) {
        return 1 == (1 & i.flags);
      }
      function zi(i) {
        return null !== i.template;
      }
      function nO(i) {
        return 0 != (256 & i[2]);
      }
      function Mr(i, t) {
        return i.hasOwnProperty(En) ? i[En] : null;
      }
      class sO {
        constructor(t, e, n) {
          (this.previousValue = t),
            (this.currentValue = e),
            (this.firstChange = n);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Lt() {
        return Hv;
      }
      function Hv(i) {
        return i.type.prototype.ngOnChanges && (i.setInput = lO), aO;
      }
      function aO() {
        const i = Uv(this),
          t = i?.current;
        if (t) {
          const e = i.previous;
          if (e === Dn) i.previous = t;
          else for (let n in t) e[n] = t[n];
          (i.current = null), this.ngOnChanges(t);
        }
      }
      function lO(i, t, e, n) {
        const r = this.declaredInputs[e],
          o =
            Uv(i) ||
            (function cO(i, t) {
              return (i[zv] = t);
            })(i, { previous: Dn, current: null }),
          s = o.current || (o.current = {}),
          a = o.previous,
          l = a[r];
        (s[r] = new sO(l && l.currentValue, t, a === Dn)), (i[n] = t);
      }
      Lt.ngInherit = !0;
      const zv = "__ngSimpleChanges__";
      function Uv(i) {
        return i[zv] || null;
      }
      function St(i) {
        for (; Array.isArray(i); ) i = i[0];
        return i;
      }
      function nc(i, t) {
        return St(t[i]);
      }
      function di(i, t) {
        return St(t[i.index]);
      }
      function qv(i, t) {
        return i.data[t];
      }
      function ui(i, t) {
        const e = t[i];
        return ci(e) ? e : e[0];
      }
      function rc(i) {
        return 64 == (64 & i[2]);
      }
      function Jn(i, t) {
        return null == t ? null : i[t];
      }
      function Wv(i) {
        i[18] = 0;
      }
      function Uh(i, t) {
        i[5] += t;
        let e = i,
          n = i[3];
        for (
          ;
          null !== n && ((1 === t && 1 === e[5]) || (-1 === t && 0 === e[5]));

        )
          (n[5] += t), (e = n), (n = n[3]);
      }
      const ee = { lFrame: ny(null), bindingsEnabled: !0 };
      function Yv() {
        return ee.bindingsEnabled;
      }
      function S() {
        return ee.lFrame.lView;
      }
      function ye() {
        return ee.lFrame.tView;
      }
      function $h(i) {
        return (ee.lFrame.contextLView = i), i[8];
      }
      function Gh(i) {
        return (ee.lFrame.contextLView = null), i;
      }
      function Tt() {
        let i = Kv();
        for (; null !== i && 64 === i.type; ) i = i.parent;
        return i;
      }
      function Kv() {
        return ee.lFrame.currentTNode;
      }
      function tn(i, t) {
        const e = ee.lFrame;
        (e.currentTNode = i), (e.isParent = t);
      }
      function qh() {
        return ee.lFrame.isParent;
      }
      function Wh() {
        ee.lFrame.isParent = !1;
      }
      function Eo() {
        return ee.lFrame.bindingIndex++;
      }
      function xO(i, t) {
        const e = ee.lFrame;
        (e.bindingIndex = e.bindingRootIndex = i), Qh(t);
      }
      function Qh(i) {
        ee.lFrame.currentDirectiveIndex = i;
      }
      function Yh(i) {
        const t = ee.lFrame.currentDirectiveIndex;
        return -1 === t ? null : i[t];
      }
      function ey() {
        return ee.lFrame.currentQueryIndex;
      }
      function Kh(i) {
        ee.lFrame.currentQueryIndex = i;
      }
      function DO(i) {
        const t = i[1];
        return 2 === t.type ? t.declTNode : 1 === t.type ? i[6] : null;
      }
      function ty(i, t, e) {
        if (e & q.SkipSelf) {
          let r = t,
            o = i;
          for (
            ;
            !((r = r.parent),
            null !== r ||
              e & q.Host ||
              ((r = DO(o)), null === r || ((o = o[15]), 10 & r.type)));

          );
          if (null === r) return !1;
          (t = r), (i = o);
        }
        const n = (ee.lFrame = iy());
        return (n.currentTNode = t), (n.lView = i), !0;
      }
      function Xh(i) {
        const t = iy(),
          e = i[1];
        (ee.lFrame = t),
          (t.currentTNode = e.firstChild),
          (t.lView = i),
          (t.tView = e),
          (t.contextLView = i),
          (t.bindingIndex = e.bindingStartIndex),
          (t.inI18n = !1);
      }
      function iy() {
        const i = ee.lFrame,
          t = null === i ? null : i.child;
        return null === t ? ny(i) : t;
      }
      function ny(i) {
        const t = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: i,
          child: null,
          inI18n: !1,
        };
        return null !== i && (i.child = t), t;
      }
      function ry() {
        const i = ee.lFrame;
        return (
          (ee.lFrame = i.parent), (i.currentTNode = null), (i.lView = null), i
        );
      }
      const oy = ry;
      function Zh() {
        const i = ry();
        (i.isParent = !0),
          (i.tView = null),
          (i.selectedIndex = -1),
          (i.contextLView = null),
          (i.elementDepthCount = 0),
          (i.currentDirectiveIndex = -1),
          (i.currentNamespace = null),
          (i.bindingRootIndex = -1),
          (i.bindingIndex = -1),
          (i.currentQueryIndex = 0);
      }
      function Yt() {
        return ee.lFrame.selectedIndex;
      }
      function Sr(i) {
        ee.lFrame.selectedIndex = i;
      }
      function Ke() {
        const i = ee.lFrame;
        return qv(i.tView, i.selectedIndex);
      }
      function oc(i, t) {
        for (let e = t.directiveStart, n = t.directiveEnd; e < n; e++) {
          const o = i.data[e].type.prototype,
            {
              ngAfterContentInit: s,
              ngAfterContentChecked: a,
              ngAfterViewInit: l,
              ngAfterViewChecked: c,
              ngOnDestroy: d,
            } = o;
          s && (i.contentHooks || (i.contentHooks = [])).push(-e, s),
            a &&
              ((i.contentHooks || (i.contentHooks = [])).push(e, a),
              (i.contentCheckHooks || (i.contentCheckHooks = [])).push(e, a)),
            l && (i.viewHooks || (i.viewHooks = [])).push(-e, l),
            c &&
              ((i.viewHooks || (i.viewHooks = [])).push(e, c),
              (i.viewCheckHooks || (i.viewCheckHooks = [])).push(e, c)),
            null != d && (i.destroyHooks || (i.destroyHooks = [])).push(e, d);
        }
      }
      function sc(i, t, e) {
        sy(i, t, 3, e);
      }
      function ac(i, t, e, n) {
        (3 & i[2]) === e && sy(i, t, e, n);
      }
      function tf(i, t) {
        let e = i[2];
        (3 & e) === t && ((e &= 2047), (e += 1), (i[2] = e));
      }
      function sy(i, t, e, n) {
        const o = n ?? -1,
          s = t.length - 1;
        let a = 0;
        for (let l = void 0 !== n ? 65535 & i[18] : 0; l < s; l++)
          if ("number" == typeof t[l + 1]) {
            if (((a = t[l]), null != n && a >= n)) break;
          } else
            t[l] < 0 && (i[18] += 65536),
              (a < o || -1 == o) &&
                (AO(i, e, t, l), (i[18] = (4294901760 & i[18]) + l + 2)),
              l++;
      }
      function AO(i, t, e, n) {
        const r = e[n] < 0,
          o = e[n + 1],
          a = i[r ? -e[n] : e[n]];
        if (r) {
          if (i[2] >> 11 < i[18] >> 16 && (3 & i[2]) === t) {
            i[2] += 2048;
            try {
              o.call(a);
            } finally {
            }
          }
        } else
          try {
            o.call(a);
          } finally {
          }
      }
      class Zs {
        constructor(t, e, n) {
          (this.factory = t),
            (this.resolving = !1),
            (this.canSeeViewProviders = e),
            (this.injectImpl = n);
        }
      }
      function rf(i, t, e) {
        let n = 0;
        for (; n < e.length; ) {
          const r = e[n];
          if ("number" == typeof r) {
            if (0 !== r) break;
            n++;
            const o = e[n++],
              s = e[n++],
              a = e[n++];
            i.setAttribute(t, s, a, o);
          } else {
            const o = r,
              s = e[++n];
            ly(o) ? i.setProperty(t, o, s) : i.setAttribute(t, o, s), n++;
          }
        }
        return n;
      }
      function ay(i) {
        return 3 === i || 4 === i || 6 === i;
      }
      function ly(i) {
        return 64 === i.charCodeAt(0);
      }
      function Js(i, t) {
        if (null !== t && 0 !== t.length)
          if (null === i || 0 === i.length) i = t.slice();
          else {
            let e = -1;
            for (let n = 0; n < t.length; n++) {
              const r = t[n];
              "number" == typeof r
                ? (e = r)
                : 0 === e ||
                  cy(i, e, r, null, -1 === e || 2 === e ? t[++n] : null);
            }
          }
        return i;
      }
      function cy(i, t, e, n, r) {
        let o = 0,
          s = i.length;
        if (-1 === t) s = -1;
        else
          for (; o < i.length; ) {
            const a = i[o++];
            if ("number" == typeof a) {
              if (a === t) {
                s = -1;
                break;
              }
              if (a > t) {
                s = o - 1;
                break;
              }
            }
          }
        for (; o < i.length; ) {
          const a = i[o];
          if ("number" == typeof a) break;
          if (a === e) {
            if (null === n) return void (null !== r && (i[o + 1] = r));
            if (n === i[o + 1]) return void (i[o + 2] = r);
          }
          o++, null !== n && o++, null !== r && o++;
        }
        -1 !== s && (i.splice(s, 0, t), (o = s + 1)),
          i.splice(o++, 0, e),
          null !== n && i.splice(o++, 0, n),
          null !== r && i.splice(o++, 0, r);
      }
      function dy(i) {
        return -1 !== i;
      }
      function lc(i) {
        return 32767 & i;
      }
      function cc(i, t) {
        let e = (function PO(i) {
            return i >> 16;
          })(i),
          n = t;
        for (; e > 0; ) (n = n[15]), e--;
        return n;
      }
      let sf = !0;
      function dc(i) {
        const t = sf;
        return (sf = i), t;
      }
      let NO = 0;
      const nn = {};
      function uc(i, t) {
        const e = fy(i, t);
        if (-1 !== e) return e;
        const n = t[1];
        n.firstCreatePass &&
          ((i.injectorIndex = t.length),
          af(n.data, i),
          af(t, null),
          af(n.blueprint, null));
        const r = lf(i, t),
          o = i.injectorIndex;
        if (dy(r)) {
          const s = lc(r),
            a = cc(r, t),
            l = a[1].data;
          for (let c = 0; c < 8; c++) t[o + c] = a[s + c] | l[s + c];
        }
        return (t[o + 8] = r), o;
      }
      function af(i, t) {
        i.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function fy(i, t) {
        return -1 === i.injectorIndex ||
          (i.parent && i.parent.injectorIndex === i.injectorIndex) ||
          null === t[i.injectorIndex + 8]
          ? -1
          : i.injectorIndex;
      }
      function lf(i, t) {
        if (i.parent && -1 !== i.parent.injectorIndex)
          return i.parent.injectorIndex;
        let e = 0,
          n = null,
          r = t;
        for (; null !== r; ) {
          if (((n = yy(r)), null === n)) return -1;
          if ((e++, (r = r[15]), -1 !== n.injectorIndex))
            return n.injectorIndex | (e << 16);
        }
        return -1;
      }
      function cf(i, t, e) {
        !(function LO(i, t, e) {
          let n;
          "string" == typeof e
            ? (n = e.charCodeAt(0) || 0)
            : e.hasOwnProperty(qs) && (n = e[qs]),
            null == n && (n = e[qs] = NO++);
          const r = 255 & n;
          t.data[i + (r >> 5)] |= 1 << r;
        })(i, t, e);
      }
      function my(i, t, e) {
        if (e & q.Optional || void 0 !== i) return i;
        ql();
      }
      function py(i, t, e, n) {
        if (
          (e & q.Optional && void 0 === n && (n = null),
          !(e & (q.Self | q.Host)))
        ) {
          const r = i[9],
            o = Di(void 0);
          try {
            return r ? r.get(t, n, e & q.Optional) : kv(t, n, e & q.Optional);
          } finally {
            Di(o);
          }
        }
        return my(n, 0, e);
      }
      function gy(i, t, e, n = q.Default, r) {
        if (null !== i) {
          if (1024 & t[2]) {
            const s = (function zO(i, t, e, n, r) {
              let o = i,
                s = t;
              for (
                ;
                null !== o && null !== s && 1024 & s[2] && !(256 & s[2]);

              ) {
                const a = _y(o, s, e, n | q.Self, nn);
                if (a !== nn) return a;
                let l = o.parent;
                if (!l) {
                  const c = s[21];
                  if (c) {
                    const d = c.get(e, nn, n);
                    if (d !== nn) return d;
                  }
                  (l = yy(s)), (s = s[15]);
                }
                o = l;
              }
              return r;
            })(i, t, e, n, nn);
            if (s !== nn) return s;
          }
          const o = _y(i, t, e, n, nn);
          if (o !== nn) return o;
        }
        return py(t, e, n, r);
      }
      function _y(i, t, e, n, r) {
        const o = (function jO(i) {
          if ("string" == typeof i) return i.charCodeAt(0) || 0;
          const t = i.hasOwnProperty(qs) ? i[qs] : void 0;
          return "number" == typeof t ? (t >= 0 ? 255 & t : HO) : t;
        })(e);
        if ("function" == typeof o) {
          if (!ty(t, i, n)) return n & q.Host ? my(r, 0, n) : py(t, e, n, r);
          try {
            const s = o(n);
            if (null != s || n & q.Optional) return s;
            ql();
          } finally {
            oy();
          }
        } else if ("number" == typeof o) {
          let s = null,
            a = fy(i, t),
            l = -1,
            c = n & q.Host ? t[16][6] : null;
          for (
            (-1 === a || n & q.SkipSelf) &&
            ((l = -1 === a ? lf(i, t) : t[a + 8]),
            -1 !== l && vy(n, !1)
              ? ((s = t[1]), (a = lc(l)), (t = cc(l, t)))
              : (a = -1));
            -1 !== a;

          ) {
            const d = t[1];
            if (by(o, a, d.data)) {
              const u = VO(a, t, e, s, n, c);
              if (u !== nn) return u;
            }
            (l = t[a + 8]),
              -1 !== l && vy(n, t[1].data[a + 8] === c) && by(o, a, t)
                ? ((s = d), (a = lc(l)), (t = cc(l, t)))
                : (a = -1);
          }
        }
        return r;
      }
      function VO(i, t, e, n, r, o) {
        const s = t[1],
          a = s.data[i + 8],
          d = hc(
            a,
            s,
            e,
            null == n ? Ks(a) && sf : n != s && 0 != (3 & a.type),
            r & q.Host && o === a
          );
        return null !== d ? Tr(t, s, d, a) : nn;
      }
      function hc(i, t, e, n, r) {
        const o = i.providerIndexes,
          s = t.data,
          a = 1048575 & o,
          l = i.directiveStart,
          d = o >> 20,
          h = r ? a + d : i.directiveEnd;
        for (let f = n ? a : a + d; f < h; f++) {
          const m = s[f];
          if ((f < l && e === m) || (f >= l && m.type === e)) return f;
        }
        if (r) {
          const f = s[l];
          if (f && zi(f) && f.type === e) return l;
        }
        return null;
      }
      function Tr(i, t, e, n) {
        let r = i[e];
        const o = t.data;
        if (
          (function RO(i) {
            return i instanceof Zs;
          })(r)
        ) {
          const s = r;
          s.resolving &&
            (function LR(i, t) {
              const e = t ? `. Dependency path: ${t.join(" > ")} > ${i}` : "";
              throw new D(
                -200,
                `Circular dependency in DI detected for ${i}${e}`
              );
            })(
              (function Me(i) {
                return "function" == typeof i
                  ? i.name || i.toString()
                  : "object" == typeof i &&
                    null != i &&
                    "function" == typeof i.type
                  ? i.type.name || i.type.toString()
                  : J(i);
              })(o[e])
            );
          const a = dc(s.canSeeViewProviders);
          s.resolving = !0;
          const l = s.injectImpl ? Di(s.injectImpl) : null;
          ty(i, n, q.Default);
          try {
            (r = i[e] = s.factory(void 0, o, i, n)),
              t.firstCreatePass &&
                e >= n.directiveStart &&
                (function IO(i, t, e) {
                  const {
                    ngOnChanges: n,
                    ngOnInit: r,
                    ngDoCheck: o,
                  } = t.type.prototype;
                  if (n) {
                    const s = Hv(t);
                    (e.preOrderHooks || (e.preOrderHooks = [])).push(i, s),
                      (
                        e.preOrderCheckHooks || (e.preOrderCheckHooks = [])
                      ).push(i, s);
                  }
                  r &&
                    (e.preOrderHooks || (e.preOrderHooks = [])).push(0 - i, r),
                    o &&
                      ((e.preOrderHooks || (e.preOrderHooks = [])).push(i, o),
                      (
                        e.preOrderCheckHooks || (e.preOrderCheckHooks = [])
                      ).push(i, o));
                })(e, o[e], t);
          } finally {
            null !== l && Di(l), dc(a), (s.resolving = !1), oy();
          }
        }
        return r;
      }
      function by(i, t, e) {
        return !!(e[t + (i >> 5)] & (1 << i));
      }
      function vy(i, t) {
        return !(i & q.Self || (i & q.Host && t));
      }
      class So {
        constructor(t, e) {
          (this._tNode = t), (this._lView = e);
        }
        get(t, e, n) {
          return gy(this._tNode, this._lView, t, Kl(n), e);
        }
      }
      function HO() {
        return new So(Tt(), S());
      }
      function ue(i) {
        return Zn(() => {
          const t = i.prototype.constructor,
            e = t[En] || df(t),
            n = Object.prototype;
          let r = Object.getPrototypeOf(i.prototype).constructor;
          for (; r && r !== n; ) {
            const o = r[En] || df(r);
            if (o && o !== e) return o;
            r = Object.getPrototypeOf(r);
          }
          return (o) => new o();
        });
      }
      function df(i) {
        return Ah(i)
          ? () => {
              const t = df(G(i));
              return t && t();
            }
          : Mr(i);
      }
      function yy(i) {
        const t = i[1],
          e = t.type;
        return 2 === e ? t.declTNode : 1 === e ? i[6] : null;
      }
      const ko = "__parameters__";
      function Ao(i, t, e) {
        return Zn(() => {
          const n = (function uf(i) {
            return function (...e) {
              if (i) {
                const n = i(...e);
                for (const r in n) this[r] = n[r];
              }
            };
          })(t);
          function r(...o) {
            if (this instanceof r) return n.apply(this, o), this;
            const s = new r(...o);
            return (a.annotation = s), a;
            function a(l, c, d) {
              const u = l.hasOwnProperty(ko)
                ? l[ko]
                : Object.defineProperty(l, ko, { value: [] })[ko];
              for (; u.length <= d; ) u.push(null);
              return (u[d] = u[d] || []).push(s), l;
            }
          }
          return (
            e && (r.prototype = Object.create(e.prototype)),
            (r.prototype.ngMetadataName = i),
            (r.annotationCls = r),
            r
          );
        });
      }
      class E {
        constructor(t, e) {
          (this._desc = t),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = k({
                  token: this,
                  providedIn: e.providedIn || "root",
                  factory: e.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      function kr(i, t) {
        i.forEach((e) => (Array.isArray(e) ? kr(e, t) : t(e)));
      }
      function xy(i, t, e) {
        t >= i.length ? i.push(e) : i.splice(t, 0, e);
      }
      function fc(i, t) {
        return t >= i.length - 1 ? i.pop() : i.splice(t, 1)[0];
      }
      function ia(i, t) {
        const e = [];
        for (let n = 0; n < i; n++) e.push(t);
        return e;
      }
      function hi(i, t, e) {
        let n = Ro(i, t);
        return (
          n >= 0
            ? (i[1 | n] = e)
            : ((n = ~n),
              (function qO(i, t, e, n) {
                let r = i.length;
                if (r == t) i.push(e, n);
                else if (1 === r) i.push(n, i[0]), (i[0] = e);
                else {
                  for (r--, i.push(i[r - 1], i[r]); r > t; )
                    (i[r] = i[r - 2]), r--;
                  (i[t] = e), (i[t + 1] = n);
                }
              })(i, n, t, e)),
          n
        );
      }
      function ff(i, t) {
        const e = Ro(i, t);
        if (e >= 0) return i[1 | e];
      }
      function Ro(i, t) {
        return (function Cy(i, t, e) {
          let n = 0,
            r = i.length >> e;
          for (; r !== n; ) {
            const o = n + ((r - n) >> 1),
              s = i[o << e];
            if (t === s) return o << e;
            s > t ? (r = o) : (n = o + 1);
          }
          return ~(r << e);
        })(i, t, 1);
      }
      const pc = Gs(
          Ao("Inject", (i) => ({ token: i })),
          -1
        ),
        rn = Gs(Ao("Optional"), 8),
        Ir = Gs(Ao("SkipSelf"), 4);
      var ni = (() => (
        ((ni = ni || {})[(ni.Important = 1)] = "Important"),
        (ni[(ni.DashCase = 2)] = "DashCase"),
        ni
      ))();
      const bf = new Map();
      let p1 = 0;
      const yf = "__ngContext__";
      function Bt(i, t) {
        ci(t)
          ? ((i[yf] = t[20]),
            (function _1(i) {
              bf.set(i[20], i);
            })(t))
          : (i[yf] = t);
      }
      function xf(i, t) {
        return undefined(i, t);
      }
      function sa(i) {
        const t = i[3];
        return Hi(t) ? t[3] : t;
      }
      function Cf(i) {
        return Uy(i[13]);
      }
      function Df(i) {
        return Uy(i[4]);
      }
      function Uy(i) {
        for (; null !== i && !Hi(i); ) i = i[4];
        return i;
      }
      function Fo(i, t, e, n, r) {
        if (null != n) {
          let o,
            s = !1;
          Hi(n) ? (o = n) : ci(n) && ((s = !0), (n = n[0]));
          const a = St(n);
          0 === i && null !== e
            ? null == r
              ? Yy(t, e, a)
              : Ar(t, e, a, r || null, !0)
            : 1 === i && null !== e
            ? Ar(t, e, a, r || null, !0)
            : 2 === i
            ? (function Af(i, t, e) {
                const n = bc(i, t);
                n &&
                  (function L1(i, t, e, n) {
                    i.removeChild(t, e, n);
                  })(i, n, t, e);
              })(t, a, s)
            : 3 === i && t.destroyNode(a),
            null != o &&
              (function j1(i, t, e, n, r) {
                const o = e[7];
                o !== St(e) && Fo(t, i, n, o, r);
                for (let a = 10; a < e.length; a++) {
                  const l = e[a];
                  aa(l[1], l, i, t, n, o);
                }
              })(t, i, o, e, r);
        }
      }
      function Mf(i, t, e) {
        return i.createElement(t, e);
      }
      function Gy(i, t) {
        const e = i[9],
          n = e.indexOf(t),
          r = t[3];
        512 & t[2] && ((t[2] &= -513), Uh(r, -1)), e.splice(n, 1);
      }
      function Sf(i, t) {
        if (i.length <= 10) return;
        const e = 10 + t,
          n = i[e];
        if (n) {
          const r = n[17];
          null !== r && r !== i && Gy(r, n), t > 0 && (i[e - 1][4] = n[4]);
          const o = fc(i, 10 + t);
          !(function k1(i, t) {
            aa(i, t, t[11], 2, null, null), (t[0] = null), (t[6] = null);
          })(n[1], n);
          const s = o[19];
          null !== s && s.detachView(o[1]),
            (n[3] = null),
            (n[4] = null),
            (n[2] &= -65);
        }
        return n;
      }
      function qy(i, t) {
        if (!(128 & t[2])) {
          const e = t[11];
          e.destroyNode && aa(i, t, e, 3, null, null),
            (function R1(i) {
              let t = i[13];
              if (!t) return Tf(i[1], i);
              for (; t; ) {
                let e = null;
                if (ci(t)) e = t[13];
                else {
                  const n = t[10];
                  n && (e = n);
                }
                if (!e) {
                  for (; t && !t[4] && t !== i; )
                    ci(t) && Tf(t[1], t), (t = t[3]);
                  null === t && (t = i), ci(t) && Tf(t[1], t), (e = t && t[4]);
                }
                t = e;
              }
            })(t);
        }
      }
      function Tf(i, t) {
        if (!(128 & t[2])) {
          (t[2] &= -65),
            (t[2] |= 128),
            (function N1(i, t) {
              let e;
              if (null != i && null != (e = i.destroyHooks))
                for (let n = 0; n < e.length; n += 2) {
                  const r = t[e[n]];
                  if (!(r instanceof Zs)) {
                    const o = e[n + 1];
                    if (Array.isArray(o))
                      for (let s = 0; s < o.length; s += 2) {
                        const a = r[o[s]],
                          l = o[s + 1];
                        try {
                          l.call(a);
                        } finally {
                        }
                      }
                    else
                      try {
                        o.call(r);
                      } finally {
                      }
                  }
                }
            })(i, t),
            (function P1(i, t) {
              const e = i.cleanup,
                n = t[7];
              let r = -1;
              if (null !== e)
                for (let o = 0; o < e.length - 1; o += 2)
                  if ("string" == typeof e[o]) {
                    const s = e[o + 3];
                    s >= 0 ? n[(r = s)]() : n[(r = -s)].unsubscribe(), (o += 2);
                  } else {
                    const s = n[(r = e[o + 1])];
                    e[o].call(s);
                  }
              if (null !== n) {
                for (let o = r + 1; o < n.length; o++) (0, n[o])();
                t[7] = null;
              }
            })(i, t),
            1 === t[1].type && t[11].destroy();
          const e = t[17];
          if (null !== e && Hi(t[3])) {
            e !== t[3] && Gy(e, t);
            const n = t[19];
            null !== n && n.detachView(i);
          }
          !(function b1(i) {
            bf.delete(i[20]);
          })(t);
        }
      }
      function Wy(i, t, e) {
        return (function Qy(i, t, e) {
          let n = t;
          for (; null !== n && 40 & n.type; ) n = (t = n).parent;
          if (null === n) return e[0];
          {
            const { componentOffset: r } = n;
            if (r > -1) {
              const { encapsulation: o } = i.data[n.directiveStart + r];
              if (o === Vi.None || o === Vi.Emulated) return null;
            }
            return di(n, e);
          }
        })(i, t.parent, e);
      }
      function Ar(i, t, e, n, r) {
        i.insertBefore(t, e, n, r);
      }
      function Yy(i, t, e) {
        i.appendChild(t, e);
      }
      function Ky(i, t, e, n, r) {
        null !== n ? Ar(i, t, e, n, r) : Yy(i, t, e);
      }
      function bc(i, t) {
        return i.parentNode(t);
      }
      function Xy(i, t, e) {
        return Jy(i, t, e);
      }
      let wc,
        Ff,
        Jy = function Zy(i, t, e) {
          return 40 & i.type ? di(i, e) : null;
        };
      function vc(i, t, e, n) {
        const r = Wy(i, n, t),
          o = t[11],
          a = Xy(n.parent || t[6], n, t);
        if (null != r)
          if (Array.isArray(e))
            for (let l = 0; l < e.length; l++) Ky(o, r, e[l], a, !1);
          else Ky(o, r, e, a, !1);
      }
      function yc(i, t) {
        if (null !== t) {
          const e = t.type;
          if (3 & e) return di(t, i);
          if (4 & e) return If(-1, i[t.index]);
          if (8 & e) {
            const n = t.child;
            if (null !== n) return yc(i, n);
            {
              const r = i[t.index];
              return Hi(r) ? If(-1, r) : St(r);
            }
          }
          if (32 & e) return xf(t, i)() || St(i[t.index]);
          {
            const n = t0(i, t);
            return null !== n
              ? Array.isArray(n)
                ? n[0]
                : yc(sa(i[16]), n)
              : yc(i, t.next);
          }
        }
        return null;
      }
      function t0(i, t) {
        return null !== t ? i[16][6].projection[t.projection] : null;
      }
      function If(i, t) {
        const e = 10 + i + 1;
        if (e < t.length) {
          const n = t[e],
            r = n[1].firstChild;
          if (null !== r) return yc(n, r);
        }
        return t[7];
      }
      function Rf(i, t, e, n, r, o, s) {
        for (; null != e; ) {
          const a = n[e.index],
            l = e.type;
          if (
            (s && 0 === t && (a && Bt(St(a), n), (e.flags |= 2)),
            32 != (32 & e.flags))
          )
            if (8 & l) Rf(i, t, e.child, n, r, o, !1), Fo(t, i, r, a, o);
            else if (32 & l) {
              const c = xf(e, n);
              let d;
              for (; (d = c()); ) Fo(t, i, r, d, o);
              Fo(t, i, r, a, o);
            } else 16 & l ? n0(i, t, n, e, r, o) : Fo(t, i, r, a, o);
          e = s ? e.projectionNext : e.next;
        }
      }
      function aa(i, t, e, n, r, o) {
        Rf(e, n, i.firstChild, t, r, o, !1);
      }
      function n0(i, t, e, n, r, o) {
        const s = e[16],
          l = s[6].projection[n.projection];
        if (Array.isArray(l))
          for (let c = 0; c < l.length; c++) Fo(t, i, r, l[c], o);
        else Rf(i, t, l, s[3], r, o, !0);
      }
      function r0(i, t, e) {
        "" === e
          ? i.removeAttribute(t, "class")
          : i.setAttribute(t, "class", e);
      }
      function o0(i, t, e) {
        const { mergedAttrs: n, classes: r, styles: o } = e;
        null !== n && rf(i, t, n),
          null !== r && r0(i, t, r),
          null !== o &&
            (function z1(i, t, e) {
              i.setAttribute(t, "style", e);
            })(i, t, o);
      }
      function Rr(i) {
        return (
          (function Of() {
            if (void 0 === wc && ((wc = null), je.trustedTypes))
              try {
                wc = je.trustedTypes.createPolicy("angular", {
                  createHTML: (i) => i,
                  createScript: (i) => i,
                  createScriptURL: (i) => i,
                });
              } catch {}
            return wc;
          })()?.createHTML(i) || i
        );
      }
      class Or {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${$l})`;
        }
      }
      class W1 extends Or {
        getTypeName() {
          return "HTML";
        }
      }
      class Q1 extends Or {
        getTypeName() {
          return "Style";
        }
      }
      class Y1 extends Or {
        getTypeName() {
          return "Script";
        }
      }
      class K1 extends Or {
        getTypeName() {
          return "URL";
        }
      }
      class X1 extends Or {
        getTypeName() {
          return "ResourceURL";
        }
      }
      function fi(i) {
        return i instanceof Or ? i.changingThisBreaksApplicationSecurity : i;
      }
      function on(i, t) {
        const e = (function Z1(i) {
          return (i instanceof Or && i.getTypeName()) || null;
        })(i);
        if (null != e && e !== t) {
          if ("ResourceURL" === e && "URL" === t) return !0;
          throw new Error(`Required a safe ${t}, got a ${e} (see ${$l})`);
        }
        return e === t;
      }
      class rF {
        constructor(t) {
          this.inertDocumentHelper = t;
        }
        getInertBodyElement(t) {
          t = "<body><remove></remove>" + t;
          try {
            const e = new window.DOMParser().parseFromString(
              Rr(t),
              "text/html"
            ).body;
            return null === e
              ? this.inertDocumentHelper.getInertBodyElement(t)
              : (e.removeChild(e.firstChild), e);
          } catch {
            return null;
          }
        }
      }
      class oF {
        constructor(t) {
          if (
            ((this.defaultDoc = t),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                "sanitization-inert"
              )),
            null == this.inertDocument.body)
          ) {
            const e = this.inertDocument.createElement("html");
            this.inertDocument.appendChild(e);
            const n = this.inertDocument.createElement("body");
            e.appendChild(n);
          }
        }
        getInertBodyElement(t) {
          const e = this.inertDocument.createElement("template");
          if ("content" in e) return (e.innerHTML = Rr(t)), e;
          const n = this.inertDocument.createElement("body");
          return (
            (n.innerHTML = Rr(t)),
            this.defaultDoc.documentMode && this.stripCustomNsAttrs(n),
            n
          );
        }
        stripCustomNsAttrs(t) {
          const e = t.attributes;
          for (let r = e.length - 1; 0 < r; r--) {
            const s = e.item(r).name;
            ("xmlns:ns1" === s || 0 === s.indexOf("ns1:")) &&
              t.removeAttribute(s);
          }
          let n = t.firstChild;
          for (; n; )
            n.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(n),
              (n = n.nextSibling);
        }
      }
      const aF =
        /^(?:(?:https?|mailto|data|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi;
      function Cc(i) {
        return (i = String(i)).match(aF) ? i : "unsafe:" + i;
      }
      function kn(i) {
        const t = {};
        for (const e of i.split(",")) t[e] = !0;
        return t;
      }
      function la(...i) {
        const t = {};
        for (const e of i)
          for (const n in e) e.hasOwnProperty(n) && (t[n] = !0);
        return t;
      }
      const u0 = kn("area,br,col,hr,img,wbr"),
        h0 = kn("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
        f0 = kn("rp,rt"),
        Nf = la(
          u0,
          la(
            h0,
            kn(
              "address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul"
            )
          ),
          la(
            f0,
            kn(
              "a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video"
            )
          ),
          la(f0, h0)
        ),
        Lf = kn("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
        m0 = la(
          Lf,
          kn(
            "abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"
          ),
          kn(
            "aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext"
          )
        ),
        lF = kn("script,style,template");
      class cF {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(t) {
          let e = t.firstChild,
            n = !0;
          for (; e; )
            if (
              (e.nodeType === Node.ELEMENT_NODE
                ? (n = this.startElement(e))
                : e.nodeType === Node.TEXT_NODE
                ? this.chars(e.nodeValue)
                : (this.sanitizedSomething = !0),
              n && e.firstChild)
            )
              e = e.firstChild;
            else
              for (; e; ) {
                e.nodeType === Node.ELEMENT_NODE && this.endElement(e);
                let r = this.checkClobberedElement(e, e.nextSibling);
                if (r) {
                  e = r;
                  break;
                }
                e = this.checkClobberedElement(e, e.parentNode);
              }
          return this.buf.join("");
        }
        startElement(t) {
          const e = t.nodeName.toLowerCase();
          if (!Nf.hasOwnProperty(e))
            return (this.sanitizedSomething = !0), !lF.hasOwnProperty(e);
          this.buf.push("<"), this.buf.push(e);
          const n = t.attributes;
          for (let r = 0; r < n.length; r++) {
            const o = n.item(r),
              s = o.name,
              a = s.toLowerCase();
            if (!m0.hasOwnProperty(a)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let l = o.value;
            Lf[a] && (l = Cc(l)), this.buf.push(" ", s, '="', p0(l), '"');
          }
          return this.buf.push(">"), !0;
        }
        endElement(t) {
          const e = t.nodeName.toLowerCase();
          Nf.hasOwnProperty(e) &&
            !u0.hasOwnProperty(e) &&
            (this.buf.push("</"), this.buf.push(e), this.buf.push(">"));
        }
        chars(t) {
          this.buf.push(p0(t));
        }
        checkClobberedElement(t, e) {
          if (
            e &&
            (t.compareDocumentPosition(e) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${t.outerHTML}`
            );
          return e;
        }
      }
      const dF = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        uF = /([^\#-~ |!])/g;
      function p0(i) {
        return i
          .replace(/&/g, "&amp;")
          .replace(dF, function (t) {
            return (
              "&#" +
              (1024 * (t.charCodeAt(0) - 55296) +
                (t.charCodeAt(1) - 56320) +
                65536) +
              ";"
            );
          })
          .replace(uF, function (t) {
            return "&#" + t.charCodeAt(0) + ";";
          })
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
      }
      let Dc;
      function g0(i, t) {
        let e = null;
        try {
          Dc =
            Dc ||
            (function d0(i) {
              const t = new oF(i);
              return (function sF() {
                try {
                  return !!new window.DOMParser().parseFromString(
                    Rr(""),
                    "text/html"
                  );
                } catch {
                  return !1;
                }
              })()
                ? new rF(t)
                : t;
            })(i);
          let n = t ? String(t) : "";
          e = Dc.getInertBodyElement(n);
          let r = 5,
            o = n;
          do {
            if (0 === r)
              throw new Error(
                "Failed to sanitize html because the input is unstable"
              );
            r--, (n = o), (o = e.innerHTML), (e = Dc.getInertBodyElement(n));
          } while (n !== o);
          return Rr(new cF().sanitizeChildren(Bf(e) || e));
        } finally {
          if (e) {
            const n = Bf(e) || e;
            for (; n.firstChild; ) n.removeChild(n.firstChild);
          }
        }
      }
      function Bf(i) {
        return "content" in i &&
          (function hF(i) {
            return (
              i.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === i.nodeName
            );
          })(i)
          ? i.content
          : null;
      }
      var xe = (() => (
        ((xe = xe || {})[(xe.NONE = 0)] = "NONE"),
        (xe[(xe.HTML = 1)] = "HTML"),
        (xe[(xe.STYLE = 2)] = "STYLE"),
        (xe[(xe.SCRIPT = 3)] = "SCRIPT"),
        (xe[(xe.URL = 4)] = "URL"),
        (xe[(xe.RESOURCE_URL = 5)] = "RESOURCE_URL"),
        xe
      ))();
      const Ec = new E("ENVIRONMENT_INITIALIZER"),
        y0 = new E("INJECTOR", -1),
        w0 = new E("INJECTOR_DEF_TYPES");
      class x0 {
        get(t, e = Us) {
          if (e === Us) {
            const n = new Error(`NullInjectorError: No provider for ${Ve(t)}!`);
            throw ((n.name = "NullInjectorError"), n);
          }
          return e;
        }
      }
      function yF(...i) {
        return { ɵproviders: C0(0, i), ɵfromNgModule: !0 };
      }
      function C0(i, ...t) {
        const e = [],
          n = new Set();
        let r;
        return (
          kr(t, (o) => {
            const s = o;
            Vf(s, e, [], n) && (r || (r = []), r.push(s));
          }),
          void 0 !== r && D0(r, e),
          e
        );
      }
      function D0(i, t) {
        for (let e = 0; e < i.length; e++) {
          const { providers: r } = i[e];
          jf(r, (o) => {
            t.push(o);
          });
        }
      }
      function Vf(i, t, e, n) {
        if (!(i = G(i))) return !1;
        let r = null,
          o = Sv(i);
        const s = !o && ke(i);
        if (o || s) {
          if (s && !s.standalone) return !1;
          r = i;
        } else {
          const l = i.ngModule;
          if (((o = Sv(l)), !o)) return !1;
          r = l;
        }
        const a = n.has(r);
        if (s) {
          if (a) return !1;
          if ((n.add(r), s.dependencies)) {
            const l =
              "function" == typeof s.dependencies
                ? s.dependencies()
                : s.dependencies;
            for (const c of l) Vf(c, t, e, n);
          }
        } else {
          if (!o) return !1;
          {
            if (null != o.imports && !a) {
              let c;
              n.add(r);
              try {
                kr(o.imports, (d) => {
                  Vf(d, t, e, n) && (c || (c = []), c.push(d));
                });
              } finally {
              }
              void 0 !== c && D0(c, t);
            }
            if (!a) {
              const c = Mr(r) || (() => new r());
              t.push(
                { provide: r, useFactory: c, deps: we },
                { provide: w0, useValue: r, multi: !0 },
                { provide: Ec, useValue: () => w(r), multi: !0 }
              );
            }
            const l = o.providers;
            null == l ||
              a ||
              jf(l, (d) => {
                t.push(d);
              });
          }
        }
        return r !== i && void 0 !== i.providers;
      }
      function jf(i, t) {
        for (let e of i)
          Rh(e) && (e = e.ɵproviders), Array.isArray(e) ? jf(e, t) : t(e);
      }
      const wF = Le({ provide: String, useValue: Le });
      function Hf(i) {
        return null !== i && "object" == typeof i && wF in i;
      }
      function Fr(i) {
        return "function" == typeof i;
      }
      const zf = new E("Set Injector scope."),
        Mc = {},
        CF = {};
      let Uf;
      function Sc() {
        return void 0 === Uf && (Uf = new x0()), Uf;
      }
      class sn {}
      class S0 extends sn {
        get destroyed() {
          return this._destroyed;
        }
        constructor(t, e, n, r) {
          super(),
            (this.parent = e),
            (this.source = n),
            (this.scopes = r),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            Gf(t, (s) => this.processProvider(s)),
            this.records.set(y0, Po(void 0, this)),
            r.has("environment") && this.records.set(sn, Po(void 0, this));
          const o = this.records.get(zf);
          null != o && "string" == typeof o.value && this.scopes.add(o.value),
            (this.injectorDefTypes = new Set(this.get(w0.multi, we, q.Self)));
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const t of this._ngOnDestroyHooks) t.ngOnDestroy();
            for (const t of this._onDestroyHooks) t();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear(),
              (this._onDestroyHooks.length = 0);
          }
        }
        onDestroy(t) {
          this._onDestroyHooks.push(t);
        }
        runInContext(t) {
          this.assertNotDestroyed();
          const e = bo(this),
            n = Di(void 0);
          try {
            return t();
          } finally {
            bo(e), Di(n);
          }
        }
        get(t, e = Us, n = q.Default) {
          this.assertNotDestroyed(), (n = Kl(n));
          const r = bo(this),
            o = Di(void 0);
          try {
            if (!(n & q.SkipSelf)) {
              let a = this.records.get(t);
              if (void 0 === a) {
                const l =
                  (function TF(i) {
                    return (
                      "function" == typeof i ||
                      ("object" == typeof i && i instanceof E)
                    );
                  })(t) && Wl(t);
                (a = l && this.injectableDefInScope(l) ? Po($f(t), Mc) : null),
                  this.records.set(t, a);
              }
              if (null != a) return this.hydrate(t, a);
            }
            return (n & q.Self ? Sc() : this.parent).get(
              t,
              (e = n & q.Optional && e === Us ? null : e)
            );
          } catch (s) {
            if ("NullInjectorError" === s.name) {
              if (((s[Yl] = s[Yl] || []).unshift(Ve(t)), r)) throw s;
              return (function ZR(i, t, e, n) {
                const r = i[Yl];
                throw (
                  (t[Iv] && r.unshift(t[Iv]),
                  (i.message = (function JR(i, t, e, n = null) {
                    i =
                      i && "\n" === i.charAt(0) && "\u0275" == i.charAt(1)
                        ? i.slice(2)
                        : i;
                    let r = Ve(t);
                    if (Array.isArray(t)) r = t.map(Ve).join(" -> ");
                    else if ("object" == typeof t) {
                      let o = [];
                      for (let s in t)
                        if (t.hasOwnProperty(s)) {
                          let a = t[s];
                          o.push(
                            s +
                              ":" +
                              ("string" == typeof a ? JSON.stringify(a) : Ve(a))
                          );
                        }
                      r = `{${o.join(", ")}}`;
                    }
                    return `${e}${n ? "(" + n + ")" : ""}[${r}]: ${i.replace(
                      QR,
                      "\n  "
                    )}`;
                  })("\n" + i.message, r, e, n)),
                  (i.ngTokenPath = r),
                  (i[Yl] = null),
                  i)
                );
              })(s, t, "R3InjectorError", this.source);
            }
            throw s;
          } finally {
            Di(o), bo(r);
          }
        }
        resolveInjectorInitializers() {
          const t = bo(this),
            e = Di(void 0);
          try {
            const n = this.get(Ec.multi, we, q.Self);
            for (const r of n) r();
          } finally {
            bo(t), Di(e);
          }
        }
        toString() {
          const t = [],
            e = this.records;
          for (const n of e.keys()) t.push(Ve(n));
          return `R3Injector[${t.join(", ")}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new D(205, !1);
        }
        processProvider(t) {
          let e = Fr((t = G(t))) ? t : G(t && t.provide);
          const n = (function EF(i) {
            return Hf(i) ? Po(void 0, i.useValue) : Po(T0(i), Mc);
          })(t);
          if (Fr(t) || !0 !== t.multi) this.records.get(e);
          else {
            let r = this.records.get(e);
            r ||
              ((r = Po(void 0, Mc, !0)),
              (r.factory = () => Nh(r.multi)),
              this.records.set(e, r)),
              (e = t),
              r.multi.push(t);
          }
          this.records.set(e, n);
        }
        hydrate(t, e) {
          return (
            e.value === Mc && ((e.value = CF), (e.value = e.factory())),
            "object" == typeof e.value &&
              e.value &&
              (function SF(i) {
                return (
                  null !== i &&
                  "object" == typeof i &&
                  "function" == typeof i.ngOnDestroy
                );
              })(e.value) &&
              this._ngOnDestroyHooks.add(e.value),
            e.value
          );
        }
        injectableDefInScope(t) {
          if (!t.providedIn) return !1;
          const e = G(t.providedIn);
          return "string" == typeof e
            ? "any" === e || this.scopes.has(e)
            : this.injectorDefTypes.has(e);
        }
      }
      function $f(i) {
        const t = Wl(i),
          e = null !== t ? t.factory : Mr(i);
        if (null !== e) return e;
        if (i instanceof E) throw new D(204, !1);
        if (i instanceof Function)
          return (function DF(i) {
            const t = i.length;
            if (t > 0) throw (ia(t, "?"), new D(204, !1));
            const e = (function UR(i) {
              const t = i && (i[Ql] || i[Tv]);
              if (t) {
                const e = (function $R(i) {
                  if (i.hasOwnProperty("name")) return i.name;
                  const t = ("" + i).match(/^function\s*([^\s(]+)/);
                  return null === t ? "" : t[1];
                })(i);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${e}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${e}" class.`
                  ),
                  t
                );
              }
              return null;
            })(i);
            return null !== e ? () => e.factory(i) : () => new i();
          })(i);
        throw new D(204, !1);
      }
      function T0(i, t, e) {
        let n;
        if (Fr(i)) {
          const r = G(i);
          return Mr(r) || $f(r);
        }
        if (Hf(i)) n = () => G(i.useValue);
        else if (
          (function M0(i) {
            return !(!i || !i.useFactory);
          })(i)
        )
          n = () => i.useFactory(...Nh(i.deps || []));
        else if (
          (function E0(i) {
            return !(!i || !i.useExisting);
          })(i)
        )
          n = () => w(G(i.useExisting));
        else {
          const r = G(i && (i.useClass || i.provide));
          if (
            !(function MF(i) {
              return !!i.deps;
            })(i)
          )
            return Mr(r) || $f(r);
          n = () => new r(...Nh(i.deps));
        }
        return n;
      }
      function Po(i, t, e = !1) {
        return { factory: i, value: t, multi: e ? [] : void 0 };
      }
      function Gf(i, t) {
        for (const e of i)
          Array.isArray(e) ? Gf(e, t) : e && Rh(e) ? Gf(e.ɵproviders, t) : t(e);
      }
      class kF {}
      class k0 {}
      class AF {
        resolveComponentFactory(t) {
          throw (function IF(i) {
            const t = Error(
              `No component factory found for ${Ve(
                i
              )}. Did you add it to @NgModule.entryComponents?`
            );
            return (t.ngComponent = i), t;
          })(t);
        }
      }
      let Pr = (() => {
        class i {}
        return (i.NULL = new AF()), i;
      })();
      function RF() {
        return No(Tt(), S());
      }
      function No(i, t) {
        return new ce(di(i, t));
      }
      let ce = (() => {
        class i {
          constructor(e) {
            this.nativeElement = e;
          }
        }
        return (i.__NG_ELEMENT_ID__ = RF), i;
      })();
      function OF(i) {
        return i instanceof ce ? i.nativeElement : i;
      }
      class da {}
      let PF = (() => {
        class i {}
        return (
          (i.ɵprov = k({ token: i, providedIn: "root", factory: () => null })),
          i
        );
      })();
      class Nr {
        constructor(t) {
          (this.full = t),
            (this.major = t.split(".")[0]),
            (this.minor = t.split(".")[1]),
            (this.patch = t.split(".").slice(2).join("."));
        }
      }
      const NF = new Nr("15.1.5"),
        qf = {};
      function Qf(i) {
        return i.ngOriginalError;
      }
      class An {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const e = this._findOriginalError(t);
          this._console.error("ERROR", t),
            e && this._console.error("ORIGINAL ERROR", e);
        }
        _findOriginalError(t) {
          let e = t && Qf(t);
          for (; e && Qf(e); ) e = Qf(e);
          return e || null;
        }
      }
      function Rn(i) {
        return i instanceof Function ? i() : i;
      }
      function R0(i, t, e) {
        let n = i.length;
        for (;;) {
          const r = i.indexOf(t, e);
          if (-1 === r) return r;
          if (0 === r || i.charCodeAt(r - 1) <= 32) {
            const o = t.length;
            if (r + o === n || i.charCodeAt(r + o) <= 32) return r;
          }
          e = r + 1;
        }
      }
      const O0 = "ng-template";
      function WF(i, t, e) {
        let n = 0;
        for (; n < i.length; ) {
          let r = i[n++];
          if (e && "class" === r) {
            if (((r = i[n]), -1 !== R0(r.toLowerCase(), t, 0))) return !0;
          } else if (1 === r) {
            for (; n < i.length && "string" == typeof (r = i[n++]); )
              if (r.toLowerCase() === t) return !0;
            return !1;
          }
        }
        return !1;
      }
      function F0(i) {
        return 4 === i.type && i.value !== O0;
      }
      function QF(i, t, e) {
        return t === (4 !== i.type || e ? i.value : O0);
      }
      function YF(i, t, e) {
        let n = 4;
        const r = i.attrs || [],
          o = (function ZF(i) {
            for (let t = 0; t < i.length; t++) if (ay(i[t])) return t;
            return i.length;
          })(r);
        let s = !1;
        for (let a = 0; a < t.length; a++) {
          const l = t[a];
          if ("number" != typeof l) {
            if (!s)
              if (4 & n) {
                if (
                  ((n = 2 | (1 & n)),
                  ("" !== l && !QF(i, l, e)) || ("" === l && 1 === t.length))
                ) {
                  if (Ui(n)) return !1;
                  s = !0;
                }
              } else {
                const c = 8 & n ? l : t[++a];
                if (8 & n && null !== i.attrs) {
                  if (!WF(i.attrs, c, e)) {
                    if (Ui(n)) return !1;
                    s = !0;
                  }
                  continue;
                }
                const u = KF(8 & n ? "class" : l, r, F0(i), e);
                if (-1 === u) {
                  if (Ui(n)) return !1;
                  s = !0;
                  continue;
                }
                if ("" !== c) {
                  let h;
                  h = u > o ? "" : r[u + 1].toLowerCase();
                  const f = 8 & n ? h : null;
                  if ((f && -1 !== R0(f, c, 0)) || (2 & n && c !== h)) {
                    if (Ui(n)) return !1;
                    s = !0;
                  }
                }
              }
          } else {
            if (!s && !Ui(n) && !Ui(l)) return !1;
            if (s && Ui(l)) continue;
            (s = !1), (n = l | (1 & n));
          }
        }
        return Ui(n) || s;
      }
      function Ui(i) {
        return 0 == (1 & i);
      }
      function KF(i, t, e, n) {
        if (null === t) return -1;
        let r = 0;
        if (n || !e) {
          let o = !1;
          for (; r < t.length; ) {
            const s = t[r];
            if (s === i) return r;
            if (3 === s || 6 === s) o = !0;
            else {
              if (1 === s || 2 === s) {
                let a = t[++r];
                for (; "string" == typeof a; ) a = t[++r];
                continue;
              }
              if (4 === s) break;
              if (0 === s) {
                r += 4;
                continue;
              }
            }
            r += o ? 1 : 2;
          }
          return -1;
        }
        return (function JF(i, t) {
          let e = i.indexOf(4);
          if (e > -1)
            for (e++; e < i.length; ) {
              const n = i[e];
              if ("number" == typeof n) return -1;
              if (n === t) return e;
              e++;
            }
          return -1;
        })(t, i);
      }
      function P0(i, t, e = !1) {
        for (let n = 0; n < t.length; n++) if (YF(i, t[n], e)) return !0;
        return !1;
      }
      function eP(i, t) {
        e: for (let e = 0; e < t.length; e++) {
          const n = t[e];
          if (i.length === n.length) {
            for (let r = 0; r < i.length; r++) if (i[r] !== n[r]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function N0(i, t) {
        return i ? ":not(" + t.trim() + ")" : t;
      }
      function tP(i) {
        let t = i[0],
          e = 1,
          n = 2,
          r = "",
          o = !1;
        for (; e < i.length; ) {
          let s = i[e];
          if ("string" == typeof s)
            if (2 & n) {
              const a = i[++e];
              r += "[" + s + (a.length > 0 ? '="' + a + '"' : "") + "]";
            } else 8 & n ? (r += "." + s) : 4 & n && (r += " " + s);
          else
            "" !== r && !Ui(s) && ((t += N0(o, r)), (r = "")),
              (n = s),
              (o = o || !Ui(n));
          e++;
        }
        return "" !== r && (t += N0(o, r)), t;
      }
      const te = {};
      function Pe(i) {
        L0(ye(), S(), Yt() + i, !1);
      }
      function L0(i, t, e, n) {
        if (!n)
          if (3 == (3 & t[2])) {
            const o = i.preOrderCheckHooks;
            null !== o && sc(t, o, e);
          } else {
            const o = i.preOrderHooks;
            null !== o && ac(t, o, 0, e);
          }
        Sr(e);
      }
      function H0(i, t = null, e = null, n) {
        const r = z0(i, t, e, n);
        return r.resolveInjectorInitializers(), r;
      }
      function z0(i, t = null, e = null, n, r = new Set()) {
        const o = [e || we, yF(i)];
        return (
          (n = n || ("object" == typeof i ? void 0 : Ve(i))),
          new S0(o, t || Sc(), n || null, r)
        );
      }
      let vt = (() => {
        class i {
          static create(e, n) {
            if (Array.isArray(e)) return H0({ name: "" }, n, e, "");
            {
              const r = e.name ?? "";
              return H0({ name: r }, e.parent, e.providers, r);
            }
          }
        }
        return (
          (i.THROW_IF_NOT_FOUND = Us),
          (i.NULL = new x0()),
          (i.ɵprov = k({ token: i, providedIn: "any", factory: () => w(y0) })),
          (i.__NG_ELEMENT_ID__ = -1),
          i
        );
      })();
      function v(i, t = q.Default) {
        const e = S();
        return null === e ? w(i, t) : gy(Tt(), e, G(i), t);
      }
      function kc() {
        throw new Error("invalid");
      }
      function Y0(i, t) {
        const e = i.contentQueries;
        if (null !== e)
          for (let n = 0; n < e.length; n += 2) {
            const o = e[n + 1];
            if (-1 !== o) {
              const s = i.data[o];
              Kh(e[n]), s.contentQueries(2, t[o], o);
            }
          }
      }
      function Ic(i, t, e, n, r, o, s, a, l, c, d) {
        const u = t.blueprint.slice();
        return (
          (u[0] = r),
          (u[2] = 76 | n),
          (null !== d || (i && 1024 & i[2])) && (u[2] |= 1024),
          Wv(u),
          (u[3] = u[15] = i),
          (u[8] = e),
          (u[10] = s || (i && i[10])),
          (u[11] = a || (i && i[11])),
          (u[12] = l || (i && i[12]) || null),
          (u[9] = c || (i && i[9]) || null),
          (u[6] = o),
          (u[20] = (function g1() {
            return p1++;
          })()),
          (u[21] = d),
          (u[16] = 2 == t.type ? i[16] : u),
          u
        );
      }
      function Vo(i, t, e, n, r) {
        let o = i.data[t];
        if (null === o)
          (o = (function Jf(i, t, e, n, r) {
            const o = Kv(),
              s = qh(),
              l = (i.data[t] = (function SP(i, t, e, n, r, o) {
                return {
                  type: e,
                  index: n,
                  insertBeforeIndex: null,
                  injectorIndex: t ? t.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  componentOffset: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: r,
                  attrs: o,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tViews: null,
                  next: null,
                  projectionNext: null,
                  child: null,
                  parent: t,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, s ? o : o && o.parent, e, t, n, r));
            return (
              null === i.firstChild && (i.firstChild = l),
              null !== o &&
                (s
                  ? null == o.child && null !== l.parent && (o.child = l)
                  : null === o.next && (o.next = l)),
              l
            );
          })(i, t, e, n, r)),
            (function wO() {
              return ee.lFrame.inI18n;
            })() && (o.flags |= 32);
        else if (64 & o.type) {
          (o.type = e), (o.value = n), (o.attrs = r);
          const s = (function Xs() {
            const i = ee.lFrame,
              t = i.currentTNode;
            return i.isParent ? t : t.parent;
          })();
          o.injectorIndex = null === s ? -1 : s.injectorIndex;
        }
        return tn(o, !0), o;
      }
      function ua(i, t, e, n) {
        if (0 === e) return -1;
        const r = t.length;
        for (let o = 0; o < e; o++)
          t.push(n), i.blueprint.push(n), i.data.push(null);
        return r;
      }
      function em(i, t, e) {
        Xh(t);
        try {
          const n = i.viewQuery;
          null !== n && dm(1, n, e);
          const r = i.template;
          null !== r && K0(i, t, r, 1, e),
            i.firstCreatePass && (i.firstCreatePass = !1),
            i.staticContentQueries && Y0(i, t),
            i.staticViewQueries && dm(2, i.viewQuery, e);
          const o = i.components;
          null !== o &&
            (function DP(i, t) {
              for (let e = 0; e < t.length; e++) qP(i, t[e]);
            })(t, o);
        } catch (n) {
          throw (
            (i.firstCreatePass &&
              ((i.incompleteFirstPass = !0), (i.firstCreatePass = !1)),
            n)
          );
        } finally {
          (t[2] &= -5), Zh();
        }
      }
      function Ac(i, t, e, n) {
        const r = t[2];
        if (128 != (128 & r)) {
          Xh(t);
          try {
            Wv(t),
              (function Zv(i) {
                return (ee.lFrame.bindingIndex = i);
              })(i.bindingStartIndex),
              null !== e && K0(i, t, e, 2, n);
            const s = 3 == (3 & r);
            if (s) {
              const c = i.preOrderCheckHooks;
              null !== c && sc(t, c, null);
            } else {
              const c = i.preOrderHooks;
              null !== c && ac(t, c, 0, null), tf(t, 0);
            }
            if (
              ((function $P(i) {
                for (let t = Cf(i); null !== t; t = Df(t)) {
                  if (!t[2]) continue;
                  const e = t[9];
                  for (let n = 0; n < e.length; n++) {
                    const r = e[n];
                    512 & r[2] || Uh(r[3], 1), (r[2] |= 512);
                  }
                }
              })(t),
              (function UP(i) {
                for (let t = Cf(i); null !== t; t = Df(t))
                  for (let e = 10; e < t.length; e++) {
                    const n = t[e],
                      r = n[1];
                    rc(n) && Ac(r, n, r.template, n[8]);
                  }
              })(t),
              null !== i.contentQueries && Y0(i, t),
              s)
            ) {
              const c = i.contentCheckHooks;
              null !== c && sc(t, c);
            } else {
              const c = i.contentHooks;
              null !== c && ac(t, c, 1), tf(t, 1);
            }
            !(function xP(i, t) {
              const e = i.hostBindingOpCodes;
              if (null !== e)
                try {
                  for (let n = 0; n < e.length; n++) {
                    const r = e[n];
                    if (r < 0) Sr(~r);
                    else {
                      const o = r,
                        s = e[++n],
                        a = e[++n];
                      xO(s, o), a(2, t[o]);
                    }
                  }
                } finally {
                  Sr(-1);
                }
            })(i, t);
            const a = i.components;
            null !== a &&
              (function CP(i, t) {
                for (let e = 0; e < t.length; e++) GP(i, t[e]);
              })(t, a);
            const l = i.viewQuery;
            if ((null !== l && dm(2, l, n), s)) {
              const c = i.viewCheckHooks;
              null !== c && sc(t, c);
            } else {
              const c = i.viewHooks;
              null !== c && ac(t, c, 2), tf(t, 2);
            }
            !0 === i.firstUpdatePass && (i.firstUpdatePass = !1),
              (t[2] &= -41),
              512 & t[2] && ((t[2] &= -513), Uh(t[3], -1));
          } finally {
            Zh();
          }
        }
      }
      function K0(i, t, e, n, r) {
        const o = Yt(),
          s = 2 & n;
        try {
          Sr(-1), s && t.length > 22 && L0(i, t, 22, !1), e(n, r);
        } finally {
          Sr(o);
        }
      }
      function tm(i, t, e) {
        if (Hh(t)) {
          const r = t.directiveEnd;
          for (let o = t.directiveStart; o < r; o++) {
            const s = i.data[o];
            s.contentQueries && s.contentQueries(1, e[o], o);
          }
        }
      }
      function im(i, t, e) {
        Yv() &&
          ((function OP(i, t, e, n) {
            const r = e.directiveStart,
              o = e.directiveEnd;
            Ks(e) &&
              (function jP(i, t, e) {
                const n = di(t, i),
                  r = X0(e),
                  o = i[10],
                  s = Rc(
                    i,
                    Ic(
                      i,
                      r,
                      null,
                      e.onPush ? 32 : 16,
                      n,
                      t,
                      o,
                      o.createRenderer(n, e),
                      null,
                      null,
                      null
                    )
                  );
                i[t.index] = s;
              })(t, e, i.data[r + e.componentOffset]),
              i.firstCreatePass || uc(e, t),
              Bt(n, t);
            const s = e.initialInputs;
            for (let a = r; a < o; a++) {
              const l = i.data[a],
                c = Tr(t, i, a, e);
              Bt(c, t),
                null !== s && HP(0, a - r, c, l, 0, s),
                zi(l) && (ui(e.index, t)[8] = Tr(t, i, a, e));
            }
          })(i, t, e, di(e, t)),
          64 == (64 & e.flags) && nw(i, t, e));
      }
      function nm(i, t, e = di) {
        const n = t.localNames;
        if (null !== n) {
          let r = t.index + 1;
          for (let o = 0; o < n.length; o += 2) {
            const s = n[o + 1],
              a = -1 === s ? e(t, i) : i[s];
            i[r++] = a;
          }
        }
      }
      function X0(i) {
        const t = i.tView;
        return null === t || t.incompleteFirstPass
          ? (i.tView = rm(
              1,
              null,
              i.template,
              i.decls,
              i.vars,
              i.directiveDefs,
              i.pipeDefs,
              i.viewQuery,
              i.schemas,
              i.consts
            ))
          : t;
      }
      function rm(i, t, e, n, r, o, s, a, l, c) {
        const d = 22 + n,
          u = d + r,
          h = (function EP(i, t) {
            const e = [];
            for (let n = 0; n < t; n++) e.push(n < i ? null : te);
            return e;
          })(d, u),
          f = "function" == typeof c ? c() : c;
        return (h[1] = {
          type: i,
          blueprint: h,
          template: e,
          queries: null,
          viewQuery: a,
          declTNode: t,
          data: h.slice().fill(null, d),
          bindingStartIndex: d,
          expandoStartIndex: u,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof o ? o() : o,
          pipeRegistry: "function" == typeof s ? s() : s,
          firstChild: null,
          schemas: l,
          consts: f,
          incompleteFirstPass: !1,
        });
      }
      function Z0(i, t, e, n) {
        const r = ow(t);
        null === e
          ? r.push(n)
          : (r.push(e), i.firstCreatePass && sw(i).push(n, r.length - 1));
      }
      function J0(i, t, e, n) {
        for (let r in i)
          if (i.hasOwnProperty(r)) {
            e = null === e ? {} : e;
            const o = i[r];
            null === n
              ? ew(e, t, r, o)
              : n.hasOwnProperty(r) && ew(e, t, n[r], o);
          }
        return e;
      }
      function ew(i, t, e, n) {
        i.hasOwnProperty(e) ? i[e].push(t, n) : (i[e] = [t, n]);
      }
      function mi(i, t, e, n, r, o, s, a) {
        const l = di(t, e);
        let d,
          c = t.inputs;
        !a && null != c && (d = c[n])
          ? (um(i, e, d, n, r), Ks(t) && tw(e, t.index))
          : 3 & t.type &&
            ((n = (function kP(i) {
              return "class" === i
                ? "className"
                : "for" === i
                ? "htmlFor"
                : "formaction" === i
                ? "formAction"
                : "innerHtml" === i
                ? "innerHTML"
                : "readonly" === i
                ? "readOnly"
                : "tabindex" === i
                ? "tabIndex"
                : i;
            })(n)),
            (r = null != s ? s(r, t.value || "", n) : r),
            o.setProperty(l, n, r));
      }
      function tw(i, t) {
        const e = ui(t, i);
        16 & e[2] || (e[2] |= 32);
      }
      function om(i, t, e, n) {
        let r = !1;
        if (Yv()) {
          const o = null === n ? null : { "": -1 },
            s = (function PP(i, t) {
              const e = i.directiveRegistry;
              let n = null,
                r = null;
              if (e)
                for (let o = 0; o < e.length; o++) {
                  const s = e[o];
                  if (P0(t, s.selectors, !1))
                    if ((n || (n = []), zi(s)))
                      if (null !== s.findHostDirectiveDefs) {
                        const a = [];
                        (r = r || new Map()),
                          s.findHostDirectiveDefs(s, a, r),
                          n.unshift(...a, s),
                          sm(i, t, a.length);
                      } else n.unshift(s), sm(i, t, 0);
                    else
                      (r = r || new Map()),
                        s.findHostDirectiveDefs?.(s, n, r),
                        n.push(s);
                }
              return null === n ? null : [n, r];
            })(i, e);
          let a, l;
          null === s ? (a = l = null) : ([a, l] = s),
            null !== a && ((r = !0), iw(i, t, e, a, o, l)),
            o &&
              (function NP(i, t, e) {
                if (t) {
                  const n = (i.localNames = []);
                  for (let r = 0; r < t.length; r += 2) {
                    const o = e[t[r + 1]];
                    if (null == o) throw new D(-301, !1);
                    n.push(t[r], o);
                  }
                }
              })(e, n, o);
        }
        return (e.mergedAttrs = Js(e.mergedAttrs, e.attrs)), r;
      }
      function iw(i, t, e, n, r, o) {
        for (let c = 0; c < n.length; c++) cf(uc(e, t), i, n[c].type);
        !(function BP(i, t, e) {
          (i.flags |= 1),
            (i.directiveStart = t),
            (i.directiveEnd = t + e),
            (i.providerIndexes = t);
        })(e, i.data.length, n.length);
        for (let c = 0; c < n.length; c++) {
          const d = n[c];
          d.providersResolver && d.providersResolver(d);
        }
        let s = !1,
          a = !1,
          l = ua(i, t, n.length, null);
        for (let c = 0; c < n.length; c++) {
          const d = n[c];
          (e.mergedAttrs = Js(e.mergedAttrs, d.hostAttrs)),
            VP(i, e, t, l, d),
            LP(l, d, r),
            null !== d.contentQueries && (e.flags |= 4),
            (null !== d.hostBindings ||
              null !== d.hostAttrs ||
              0 !== d.hostVars) &&
              (e.flags |= 64);
          const u = d.type.prototype;
          !s &&
            (u.ngOnChanges || u.ngOnInit || u.ngDoCheck) &&
            ((i.preOrderHooks || (i.preOrderHooks = [])).push(e.index),
            (s = !0)),
            !a &&
              (u.ngOnChanges || u.ngDoCheck) &&
              ((i.preOrderCheckHooks || (i.preOrderCheckHooks = [])).push(
                e.index
              ),
              (a = !0)),
            l++;
        }
        !(function TP(i, t, e) {
          const r = t.directiveEnd,
            o = i.data,
            s = t.attrs,
            a = [];
          let l = null,
            c = null;
          for (let d = t.directiveStart; d < r; d++) {
            const u = o[d],
              h = e ? e.get(u) : null,
              m = h ? h.outputs : null;
            (l = J0(u.inputs, d, l, h ? h.inputs : null)),
              (c = J0(u.outputs, d, c, m));
            const p = null === l || null === s || F0(t) ? null : zP(l, d, s);
            a.push(p);
          }
          null !== l &&
            (l.hasOwnProperty("class") && (t.flags |= 8),
            l.hasOwnProperty("style") && (t.flags |= 16)),
            (t.initialInputs = a),
            (t.inputs = l),
            (t.outputs = c);
        })(i, e, o);
      }
      function nw(i, t, e) {
        const n = e.directiveStart,
          r = e.directiveEnd,
          o = e.index,
          s = (function CO() {
            return ee.lFrame.currentDirectiveIndex;
          })();
        try {
          Sr(o);
          for (let a = n; a < r; a++) {
            const l = i.data[a],
              c = t[a];
            Qh(a),
              (null !== l.hostBindings ||
                0 !== l.hostVars ||
                null !== l.hostAttrs) &&
                FP(l, c);
          }
        } finally {
          Sr(-1), Qh(s);
        }
      }
      function FP(i, t) {
        null !== i.hostBindings && i.hostBindings(1, t);
      }
      function sm(i, t, e) {
        (t.componentOffset = e),
          (i.components || (i.components = [])).push(t.index);
      }
      function LP(i, t, e) {
        if (e) {
          if (t.exportAs)
            for (let n = 0; n < t.exportAs.length; n++) e[t.exportAs[n]] = i;
          zi(t) && (e[""] = i);
        }
      }
      function VP(i, t, e, n, r) {
        i.data[n] = r;
        const o = r.factory || (r.factory = Mr(r.type)),
          s = new Zs(o, zi(r), v);
        (i.blueprint[n] = s),
          (e[n] = s),
          (function AP(i, t, e, n, r) {
            const o = r.hostBindings;
            if (o) {
              let s = i.hostBindingOpCodes;
              null === s && (s = i.hostBindingOpCodes = []);
              const a = ~t.index;
              (function RP(i) {
                let t = i.length;
                for (; t > 0; ) {
                  const e = i[--t];
                  if ("number" == typeof e && e < 0) return e;
                }
                return 0;
              })(s) != a && s.push(a),
                s.push(e, n, o);
            }
          })(i, t, n, ua(i, e, r.hostVars, te), r);
      }
      function an(i, t, e, n, r, o) {
        const s = di(i, t);
        !(function am(i, t, e, n, r, o, s) {
          if (null == o) i.removeAttribute(t, r, e);
          else {
            const a = null == s ? J(o) : s(o, n || "", r);
            i.setAttribute(t, r, a, e);
          }
        })(t[11], s, o, i.value, e, n, r);
      }
      function HP(i, t, e, n, r, o) {
        const s = o[t];
        if (null !== s) {
          const a = n.setInput;
          for (let l = 0; l < s.length; ) {
            const c = s[l++],
              d = s[l++],
              u = s[l++];
            null !== a ? n.setInput(e, u, c, d) : (e[d] = u);
          }
        }
      }
      function zP(i, t, e) {
        let n = null,
          r = 0;
        for (; r < e.length; ) {
          const o = e[r];
          if (0 !== o)
            if (5 !== o) {
              if ("number" == typeof o) break;
              if (i.hasOwnProperty(o)) {
                null === n && (n = []);
                const s = i[o];
                for (let a = 0; a < s.length; a += 2)
                  if (s[a] === t) {
                    n.push(o, s[a + 1], e[r + 1]);
                    break;
                  }
              }
              r += 2;
            } else r += 2;
          else r += 4;
        }
        return n;
      }
      function rw(i, t, e, n) {
        return [i, !0, !1, t, null, 0, n, e, null, null];
      }
      function GP(i, t) {
        const e = ui(t, i);
        if (rc(e)) {
          const n = e[1];
          48 & e[2] ? Ac(n, e, n.template, e[8]) : e[5] > 0 && lm(e);
        }
      }
      function lm(i) {
        for (let n = Cf(i); null !== n; n = Df(n))
          for (let r = 10; r < n.length; r++) {
            const o = n[r];
            if (rc(o))
              if (512 & o[2]) {
                const s = o[1];
                Ac(s, o, s.template, o[8]);
              } else o[5] > 0 && lm(o);
          }
        const e = i[1].components;
        if (null !== e)
          for (let n = 0; n < e.length; n++) {
            const r = ui(e[n], i);
            rc(r) && r[5] > 0 && lm(r);
          }
      }
      function qP(i, t) {
        const e = ui(t, i),
          n = e[1];
        (function WP(i, t) {
          for (let e = t.length; e < i.blueprint.length; e++)
            t.push(i.blueprint[e]);
        })(n, e),
          em(n, e, e[8]);
      }
      function Rc(i, t) {
        return i[13] ? (i[14][4] = t) : (i[13] = t), (i[14] = t), t;
      }
      function cm(i) {
        for (; i; ) {
          i[2] |= 32;
          const t = sa(i);
          if (nO(i) && !t) return i;
          i = t;
        }
        return null;
      }
      function Oc(i, t, e, n = !0) {
        const r = t[10];
        r.begin && r.begin();
        try {
          Ac(i, t, i.template, e);
        } catch (s) {
          throw (n && lw(t, s), s);
        } finally {
          r.end && r.end();
        }
      }
      function dm(i, t, e) {
        Kh(0), t(i, e);
      }
      function ow(i) {
        return i[7] || (i[7] = []);
      }
      function sw(i) {
        return i.cleanup || (i.cleanup = []);
      }
      function aw(i, t, e) {
        return (
          (null === i || zi(i)) &&
            (e = (function uO(i) {
              for (; Array.isArray(i); ) {
                if ("object" == typeof i[1]) return i;
                i = i[0];
              }
              return null;
            })(e[t.index])),
          e[11]
        );
      }
      function lw(i, t) {
        const e = i[9],
          n = e ? e.get(An, null) : null;
        n && n.handleError(t);
      }
      function um(i, t, e, n, r) {
        for (let o = 0; o < e.length; ) {
          const s = e[o++],
            a = e[o++],
            l = t[s],
            c = i.data[s];
          null !== c.setInput ? c.setInput(l, r, n, a) : (l[a] = r);
        }
      }
      function Fc(i, t, e) {
        let n = e ? i.styles : null,
          r = e ? i.classes : null,
          o = 0;
        if (null !== t)
          for (let s = 0; s < t.length; s++) {
            const a = t[s];
            "number" == typeof a
              ? (o = a)
              : 1 == o
              ? (r = Ih(r, a))
              : 2 == o && (n = Ih(n, a + ": " + t[++s] + ";"));
          }
        e ? (i.styles = n) : (i.stylesWithoutHost = n),
          e ? (i.classes = r) : (i.classesWithoutHost = r);
      }
      function Pc(i, t, e, n, r = !1) {
        for (; null !== e; ) {
          const o = t[e.index];
          if ((null !== o && n.push(St(o)), Hi(o)))
            for (let a = 10; a < o.length; a++) {
              const l = o[a],
                c = l[1].firstChild;
              null !== c && Pc(l[1], l, c, n);
            }
          const s = e.type;
          if (8 & s) Pc(i, t, e.child, n);
          else if (32 & s) {
            const a = xf(e, t);
            let l;
            for (; (l = a()); ) n.push(l);
          } else if (16 & s) {
            const a = t0(t, e);
            if (Array.isArray(a)) n.push(...a);
            else {
              const l = sa(t[16]);
              Pc(l[1], l, a, n, !0);
            }
          }
          e = r ? e.projectionNext : e.next;
        }
        return n;
      }
      class ha {
        get rootNodes() {
          const t = this._lView,
            e = t[1];
          return Pc(e, t, e.firstChild, []);
        }
        constructor(t, e) {
          (this._lView = t),
            (this._cdRefInjectingView = e),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get context() {
          return this._lView[8];
        }
        set context(t) {
          this._lView[8] = t;
        }
        get destroyed() {
          return 128 == (128 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[3];
            if (Hi(t)) {
              const e = t[8],
                n = e ? e.indexOf(this) : -1;
              n > -1 && (Sf(t, n), fc(e, n));
            }
            this._attachedToViewContainer = !1;
          }
          qy(this._lView[1], this._lView);
        }
        onDestroy(t) {
          Z0(this._lView[1], this._lView, null, t);
        }
        markForCheck() {
          cm(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -65;
        }
        reattach() {
          this._lView[2] |= 64;
        }
        detectChanges() {
          Oc(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new D(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function A1(i, t) {
              aa(i, t, t[11], 2, null, null);
            })(this._lView[1], this._lView);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer) throw new D(902, !1);
          this._appRef = t;
        }
      }
      class QP extends ha {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          const t = this._view;
          Oc(t[1], t, t[8], !1);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class cw extends Pr {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const e = ke(t);
          return new fa(e, this.ngModule);
        }
      }
      function dw(i) {
        const t = [];
        for (let e in i)
          i.hasOwnProperty(e) && t.push({ propName: i[e], templateName: e });
        return t;
      }
      class KP {
        constructor(t, e) {
          (this.injector = t), (this.parentInjector = e);
        }
        get(t, e, n) {
          n = Kl(n);
          const r = this.injector.get(t, qf, n);
          return r !== qf || e === qf ? r : this.parentInjector.get(t, e, n);
        }
      }
      class fa extends k0 {
        get inputs() {
          return dw(this.componentDef.inputs);
        }
        get outputs() {
          return dw(this.componentDef.outputs);
        }
        constructor(t, e) {
          super(),
            (this.componentDef = t),
            (this.ngModule = e),
            (this.componentType = t.type),
            (this.selector = (function iP(i) {
              return i.map(tP).join(",");
            })(t.selectors)),
            (this.ngContentSelectors = t.ngContentSelectors
              ? t.ngContentSelectors
              : []),
            (this.isBoundToModule = !!e);
        }
        create(t, e, n, r) {
          let o = (r = r || this.ngModule) instanceof sn ? r : r?.injector;
          o &&
            null !== this.componentDef.getStandaloneInjector &&
            (o = this.componentDef.getStandaloneInjector(o) || o);
          const s = o ? new KP(t, o) : t,
            a = s.get(da, null);
          if (null === a) throw new D(407, !1);
          const l = s.get(PF, null),
            c = a.createRenderer(null, this.componentDef),
            d = this.componentDef.selectors[0][0] || "div",
            u = n
              ? (function MP(i, t, e) {
                  return i.selectRootElement(t, e === Vi.ShadowDom);
                })(c, n, this.componentDef.encapsulation)
              : Mf(
                  c,
                  d,
                  (function YP(i) {
                    const t = i.toLowerCase();
                    return "svg" === t ? "svg" : "math" === t ? "math" : null;
                  })(d)
                ),
            h = this.componentDef.onPush ? 288 : 272,
            f = rm(0, null, null, 1, 0, null, null, null, null, null),
            m = Ic(null, f, null, h, null, null, a, c, l, s, null);
          let p, g;
          Xh(m);
          try {
            const b = this.componentDef;
            let y,
              _ = null;
            b.findHostDirectiveDefs
              ? ((y = []),
                (_ = new Map()),
                b.findHostDirectiveDefs(b, y, _),
                y.push(b))
              : (y = [b]);
            const x = (function ZP(i, t) {
                const e = i[1];
                return (i[22] = t), Vo(e, 22, 2, "#host", null);
              })(m, u),
              T = (function JP(i, t, e, n, r, o, s, a) {
                const l = r[1];
                !(function eN(i, t, e, n) {
                  for (const r of i)
                    t.mergedAttrs = Js(t.mergedAttrs, r.hostAttrs);
                  null !== t.mergedAttrs &&
                    (Fc(t, t.mergedAttrs, !0), null !== e && o0(n, e, t));
                })(n, i, t, s);
                const c = o.createRenderer(t, e),
                  d = Ic(
                    r,
                    X0(e),
                    null,
                    e.onPush ? 32 : 16,
                    r[i.index],
                    i,
                    o,
                    c,
                    a || null,
                    null,
                    null
                  );
                return (
                  l.firstCreatePass && sm(l, i, n.length - 1),
                  Rc(r, d),
                  (r[i.index] = d)
                );
              })(x, u, b, y, m, a, c);
            (g = qv(f, 22)),
              u &&
                (function iN(i, t, e, n) {
                  if (n) rf(i, e, ["ng-version", NF.full]);
                  else {
                    const { attrs: r, classes: o } = (function nP(i) {
                      const t = [],
                        e = [];
                      let n = 1,
                        r = 2;
                      for (; n < i.length; ) {
                        let o = i[n];
                        if ("string" == typeof o)
                          2 === r
                            ? "" !== o && t.push(o, i[++n])
                            : 8 === r && e.push(o);
                        else {
                          if (!Ui(r)) break;
                          r = o;
                        }
                        n++;
                      }
                      return { attrs: t, classes: e };
                    })(t.selectors[0]);
                    r && rf(i, e, r),
                      o && o.length > 0 && r0(i, e, o.join(" "));
                  }
                })(c, b, u, n),
              void 0 !== e &&
                (function nN(i, t, e) {
                  const n = (i.projection = []);
                  for (let r = 0; r < t.length; r++) {
                    const o = e[r];
                    n.push(null != o ? Array.from(o) : null);
                  }
                })(g, this.ngContentSelectors, e),
              (p = (function tN(i, t, e, n, r, o) {
                const s = Tt(),
                  a = r[1],
                  l = di(s, r);
                iw(a, r, s, e, null, n);
                for (let d = 0; d < e.length; d++)
                  Bt(Tr(r, a, s.directiveStart + d, s), r);
                nw(a, r, s), l && Bt(l, r);
                const c = Tr(r, a, s.directiveStart + s.componentOffset, s);
                if (((i[8] = r[8] = c), null !== o)) for (const d of o) d(c, t);
                return tm(a, s, i), c;
              })(T, b, y, _, m, [rN])),
              em(f, m, null);
          } finally {
            Zh();
          }
          return new XP(this.componentType, p, No(g, m), m, g);
        }
      }
      class XP extends kF {
        constructor(t, e, n, r, o) {
          super(),
            (this.location = n),
            (this._rootLView = r),
            (this._tNode = o),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new QP(r)),
            (this.componentType = t);
        }
        setInput(t, e) {
          const n = this._tNode.inputs;
          let r;
          if (null !== n && (r = n[t])) {
            const o = this._rootLView;
            um(o[1], o, r, t, e), tw(o, this._tNode.index);
          }
        }
        get injector() {
          return new So(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      function rN() {
        const i = Tt();
        oc(S()[1], i);
      }
      function N(i) {
        let t = (function uw(i) {
            return Object.getPrototypeOf(i.prototype).constructor;
          })(i.type),
          e = !0;
        const n = [i];
        for (; t; ) {
          let r;
          if (zi(i)) r = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new D(903, !1);
            r = t.ɵdir;
          }
          if (r) {
            if (e) {
              n.push(r);
              const s = i;
              (s.inputs = hm(i.inputs)),
                (s.declaredInputs = hm(i.declaredInputs)),
                (s.outputs = hm(i.outputs));
              const a = r.hostBindings;
              a && lN(i, a);
              const l = r.viewQuery,
                c = r.contentQueries;
              if (
                (l && sN(i, l),
                c && aN(i, c),
                kh(i.inputs, r.inputs),
                kh(i.declaredInputs, r.declaredInputs),
                kh(i.outputs, r.outputs),
                zi(r) && r.data.animation)
              ) {
                const d = i.data;
                d.animation = (d.animation || []).concat(r.data.animation);
              }
            }
            const o = r.features;
            if (o)
              for (let s = 0; s < o.length; s++) {
                const a = o[s];
                a && a.ngInherit && a(i), a === N && (e = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function oN(i) {
          let t = 0,
            e = null;
          for (let n = i.length - 1; n >= 0; n--) {
            const r = i[n];
            (r.hostVars = t += r.hostVars),
              (r.hostAttrs = Js(r.hostAttrs, (e = Js(e, r.hostAttrs))));
          }
        })(n);
      }
      function hm(i) {
        return i === Dn ? {} : i === we ? [] : i;
      }
      function sN(i, t) {
        const e = i.viewQuery;
        i.viewQuery = e
          ? (n, r) => {
              t(n, r), e(n, r);
            }
          : t;
      }
      function aN(i, t) {
        const e = i.contentQueries;
        i.contentQueries = e
          ? (n, r, o) => {
              t(n, r, o), e(n, r, o);
            }
          : t;
      }
      function lN(i, t) {
        const e = i.hostBindings;
        i.hostBindings = e
          ? (n, r) => {
              t(n, r), e(n, r);
            }
          : t;
      }
      let Nc = null;
      function Lr() {
        if (!Nc) {
          const i = je.Symbol;
          if (i && i.iterator) Nc = i.iterator;
          else {
            const t = Object.getOwnPropertyNames(Map.prototype);
            for (let e = 0; e < t.length; ++e) {
              const n = t[e];
              "entries" !== n &&
                "size" !== n &&
                Map.prototype[n] === Map.prototype.entries &&
                (Nc = n);
            }
          }
        }
        return Nc;
      }
      function Vt(i, t, e) {
        return !Object.is(i[t], e) && ((i[t] = e), !0);
      }
      function qe(i, t, e, n) {
        const r = S();
        return Vt(r, Eo(), t) && (ye(), an(Ke(), r, i, t, e, n)), qe;
      }
      function Xe(i, t, e, n, r, o, s, a) {
        const l = S(),
          c = ye(),
          d = i + 22,
          u = c.firstCreatePass
            ? (function bN(i, t, e, n, r, o, s, a, l) {
                const c = t.consts,
                  d = Vo(t, i, 4, s || null, Jn(c, a));
                om(t, e, d, Jn(c, l)), oc(t, d);
                const u = (d.tViews = rm(
                  2,
                  d,
                  n,
                  r,
                  o,
                  t.directiveRegistry,
                  t.pipeRegistry,
                  null,
                  t.schemas,
                  c
                ));
                return (
                  null !== t.queries &&
                    (t.queries.template(t, d),
                    (u.queries = t.queries.embeddedTView(d))),
                  d
                );
              })(d, c, l, t, e, n, r, o, s)
            : c.data[d];
        tn(u, !1);
        const h = l[11].createComment("");
        vc(c, l, h, u),
          Bt(h, l),
          Rc(l, (l[d] = rw(h, l, h, u))),
          ic(u) && im(c, l, u),
          null != s && nm(l, u, a);
      }
      function We(i, t, e) {
        const n = S();
        return Vt(n, Eo(), t) && mi(ye(), Ke(), n, i, t, n[11], e, !1), We;
      }
      function mm(i, t, e, n, r) {
        const s = r ? "class" : "style";
        um(i, e, t.inputs[s], s, n);
      }
      function ne(i, t, e, n) {
        const r = S(),
          o = ye(),
          s = 22 + i,
          a = r[11],
          l = (r[s] = Mf(
            a,
            t,
            (function kO() {
              return ee.lFrame.currentNamespace;
            })()
          )),
          c = o.firstCreatePass
            ? (function yN(i, t, e, n, r, o, s) {
                const a = t.consts,
                  c = Vo(t, i, 2, r, Jn(a, o));
                return (
                  om(t, e, c, Jn(a, s)),
                  null !== c.attrs && Fc(c, c.attrs, !1),
                  null !== c.mergedAttrs && Fc(c, c.mergedAttrs, !0),
                  null !== t.queries && t.queries.elementStart(t, c),
                  c
                );
              })(s, o, r, 0, t, e, n)
            : o.data[s];
        return (
          tn(c, !0),
          o0(a, l, c),
          32 != (32 & c.flags) && vc(o, r, l, c),
          0 ===
            (function pO() {
              return ee.lFrame.elementDepthCount;
            })() && Bt(l, r),
          (function gO() {
            ee.lFrame.elementDepthCount++;
          })(),
          ic(c) && (im(o, r, c), tm(o, c, r)),
          null !== n && nm(r, c),
          ne
        );
      }
      function me() {
        let i = Tt();
        qh() ? Wh() : ((i = i.parent), tn(i, !1));
        const t = i;
        !(function _O() {
          ee.lFrame.elementDepthCount--;
        })();
        const e = ye();
        return (
          e.firstCreatePass && (oc(e, i), Hh(i) && e.queries.elementEnd(i)),
          null != t.classesWithoutHost &&
            (function OO(i) {
              return 0 != (8 & i.flags);
            })(t) &&
            mm(e, t, S(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function FO(i) {
              return 0 != (16 & i.flags);
            })(t) &&
            mm(e, t, S(), t.stylesWithoutHost, !1),
          me
        );
      }
      function Ze(i, t, e, n) {
        return ne(i, t, e, n), me(), Ze;
      }
      function pm() {
        return S();
      }
      function _a(i) {
        return !!i && "function" == typeof i.then;
      }
      const gm = function Dw(i) {
        return !!i && "function" == typeof i.subscribe;
      };
      function lt(i, t, e, n) {
        const r = S(),
          o = ye(),
          s = Tt();
        return Ew(o, r, r[11], s, i, t, n), lt;
      }
      function _m(i, t) {
        const e = Tt(),
          n = S(),
          r = ye();
        return Ew(r, n, aw(Yh(r.data), e, n), e, i, t), _m;
      }
      function Ew(i, t, e, n, r, o, s) {
        const a = ic(n),
          c = i.firstCreatePass && sw(i),
          d = t[8],
          u = ow(t);
        let h = !0;
        if (3 & n.type || s) {
          const p = di(n, t),
            g = s ? s(p) : p,
            b = u.length,
            y = s ? (x) => s(St(x[n.index])) : n.index;
          let _ = null;
          if (
            (!s &&
              a &&
              (_ = (function xN(i, t, e, n) {
                const r = i.cleanup;
                if (null != r)
                  for (let o = 0; o < r.length - 1; o += 2) {
                    const s = r[o];
                    if (s === e && r[o + 1] === n) {
                      const a = t[7],
                        l = r[o + 2];
                      return a.length > l ? a[l] : null;
                    }
                    "string" == typeof s && (o += 2);
                  }
                return null;
              })(i, t, r, n.index)),
            null !== _)
          )
            ((_.__ngLastListenerFn__ || _).__ngNextListenerFn__ = o),
              (_.__ngLastListenerFn__ = o),
              (h = !1);
          else {
            o = Sw(n, t, d, o, !1);
            const x = e.listen(g, r, o);
            u.push(o, x), c && c.push(r, y, b, b + 1);
          }
        } else o = Sw(n, t, d, o, !1);
        const f = n.outputs;
        let m;
        if (h && null !== f && (m = f[r])) {
          const p = m.length;
          if (p)
            for (let g = 0; g < p; g += 2) {
              const T = t[m[g]][m[g + 1]].subscribe(o),
                I = u.length;
              u.push(o, T), c && c.push(r, n.index, I, -(I + 1));
            }
        }
      }
      function Mw(i, t, e, n) {
        try {
          return !1 !== e(n);
        } catch (r) {
          return lw(i, r), !1;
        }
      }
      function Sw(i, t, e, n, r) {
        return function o(s) {
          if (s === Function) return n;
          cm(i.componentOffset > -1 ? ui(i.index, t) : t);
          let l = Mw(t, 0, n, s),
            c = o.__ngNextListenerFn__;
          for (; c; ) (l = Mw(t, 0, c, s) && l), (c = c.__ngNextListenerFn__);
          return r && !1 === l && (s.preventDefault(), (s.returnValue = !1)), l;
        };
      }
      function jt(i = 1) {
        return (function EO(i) {
          return (ee.lFrame.contextLView = (function MO(i, t) {
            for (; i > 0; ) (t = t[15]), i--;
            return t;
          })(i, ee.lFrame.contextLView))[8];
        })(i);
      }
      function CN(i, t) {
        let e = null;
        const n = (function XF(i) {
          const t = i.attrs;
          if (null != t) {
            const e = t.indexOf(5);
            if (!(1 & e)) return t[e + 1];
          }
          return null;
        })(i);
        for (let r = 0; r < t.length; r++) {
          const o = t[r];
          if ("*" !== o) {
            if (null === n ? P0(i, o, !0) : eP(n, o)) return r;
          } else e = r;
        }
        return e;
      }
      function pi(i) {
        const t = S()[16][6];
        if (!t.projection) {
          const n = (t.projection = ia(i ? i.length : 1, null)),
            r = n.slice();
          let o = t.child;
          for (; null !== o; ) {
            const s = i ? CN(o, i) : 0;
            null !== s &&
              (r[s] ? (r[s].projectionNext = o) : (n[s] = o), (r[s] = o)),
              (o = o.next);
          }
        }
      }
      function $e(i, t = 0, e) {
        const n = S(),
          r = ye(),
          o = Vo(r, 22 + i, 16, null, e || null);
        null === o.projection && (o.projection = t),
          Wh(),
          32 != (32 & o.flags) &&
            (function V1(i, t, e) {
              n0(t[11], 0, t, e, Wy(i, e, t), Xy(e.parent || t[6], e, t));
            })(r, n, o);
      }
      function Vc(i, t) {
        return (i << 17) | (t << 2);
      }
      function tr(i) {
        return (i >> 17) & 32767;
      }
      function vm(i) {
        return 2 | i;
      }
      function Vr(i) {
        return (131068 & i) >> 2;
      }
      function ym(i, t) {
        return (-131069 & i) | (t << 2);
      }
      function wm(i) {
        return 1 | i;
      }
      function Lw(i, t, e, n, r) {
        const o = i[e + 1],
          s = null === t;
        let a = n ? tr(o) : Vr(o),
          l = !1;
        for (; 0 !== a && (!1 === l || s); ) {
          const d = i[a + 1];
          kN(i[a], t) && ((l = !0), (i[a + 1] = n ? wm(d) : vm(d))),
            (a = n ? tr(d) : Vr(d));
        }
        l && (i[e + 1] = n ? vm(o) : wm(o));
      }
      function kN(i, t) {
        return (
          null === i ||
          null == t ||
          (Array.isArray(i) ? i[1] : i) === t ||
          (!(!Array.isArray(i) || "string" != typeof t) && Ro(i, t) >= 0)
        );
      }
      function jr(i, t, e) {
        return $i(i, t, e, !1), jr;
      }
      function Qe(i, t) {
        return $i(i, t, null, !0), Qe;
      }
      function $i(i, t, e, n) {
        const r = S(),
          o = ye(),
          s = (function Tn(i) {
            const t = ee.lFrame,
              e = t.bindingIndex;
            return (t.bindingIndex = t.bindingIndex + i), e;
          })(2);
        o.firstUpdatePass &&
          (function Gw(i, t, e, n) {
            const r = i.data;
            if (null === r[e + 1]) {
              const o = r[Yt()],
                s = (function $w(i, t) {
                  return t >= i.expandoStartIndex;
                })(i, e);
              (function Yw(i, t) {
                return 0 != (i.flags & (t ? 8 : 16));
              })(o, n) &&
                null === t &&
                !s &&
                (t = !1),
                (t = (function BN(i, t, e, n) {
                  const r = Yh(i);
                  let o = n ? t.residualClasses : t.residualStyles;
                  if (null === r)
                    0 === (n ? t.classBindings : t.styleBindings) &&
                      ((e = ba((e = xm(null, i, t, e, n)), t.attrs, n)),
                      (o = null));
                  else {
                    const s = t.directiveStylingLast;
                    if (-1 === s || i[s] !== r)
                      if (((e = xm(r, i, t, e, n)), null === o)) {
                        let l = (function VN(i, t, e) {
                          const n = e ? t.classBindings : t.styleBindings;
                          if (0 !== Vr(n)) return i[tr(n)];
                        })(i, t, n);
                        void 0 !== l &&
                          Array.isArray(l) &&
                          ((l = xm(null, i, t, l[1], n)),
                          (l = ba(l, t.attrs, n)),
                          (function jN(i, t, e, n) {
                            i[tr(e ? t.classBindings : t.styleBindings)] = n;
                          })(i, t, n, l));
                      } else
                        o = (function HN(i, t, e) {
                          let n;
                          const r = t.directiveEnd;
                          for (let o = 1 + t.directiveStylingLast; o < r; o++)
                            n = ba(n, i[o].hostAttrs, e);
                          return ba(n, t.attrs, e);
                        })(i, t, n);
                  }
                  return (
                    void 0 !== o &&
                      (n ? (t.residualClasses = o) : (t.residualStyles = o)),
                    e
                  );
                })(r, o, t, n)),
                (function SN(i, t, e, n, r, o) {
                  let s = o ? t.classBindings : t.styleBindings,
                    a = tr(s),
                    l = Vr(s);
                  i[n] = e;
                  let d,
                    c = !1;
                  if (
                    (Array.isArray(e)
                      ? ((d = e[1]), (null === d || Ro(e, d) > 0) && (c = !0))
                      : (d = e),
                    r)
                  )
                    if (0 !== l) {
                      const h = tr(i[a + 1]);
                      (i[n + 1] = Vc(h, a)),
                        0 !== h && (i[h + 1] = ym(i[h + 1], n)),
                        (i[a + 1] = (function EN(i, t) {
                          return (131071 & i) | (t << 17);
                        })(i[a + 1], n));
                    } else
                      (i[n + 1] = Vc(a, 0)),
                        0 !== a && (i[a + 1] = ym(i[a + 1], n)),
                        (a = n);
                  else
                    (i[n + 1] = Vc(l, 0)),
                      0 === a ? (a = n) : (i[l + 1] = ym(i[l + 1], n)),
                      (l = n);
                  c && (i[n + 1] = vm(i[n + 1])),
                    Lw(i, d, n, !0),
                    Lw(i, d, n, !1),
                    (function TN(i, t, e, n, r) {
                      const o = r ? i.residualClasses : i.residualStyles;
                      null != o &&
                        "string" == typeof t &&
                        Ro(o, t) >= 0 &&
                        (e[n + 1] = wm(e[n + 1]));
                    })(t, d, i, n, o),
                    (s = Vc(a, l)),
                    o ? (t.classBindings = s) : (t.styleBindings = s);
                })(r, o, t, e, s, n);
            }
          })(o, i, s, n),
          t !== te &&
            Vt(r, s, t) &&
            (function Ww(i, t, e, n, r, o, s, a) {
              if (!(3 & t.type)) return;
              const l = i.data,
                c = l[a + 1],
                d = (function MN(i) {
                  return 1 == (1 & i);
                })(c)
                  ? Qw(l, t, e, r, Vr(c), s)
                  : void 0;
              jc(d) ||
                (jc(o) ||
                  ((function DN(i) {
                    return 2 == (2 & i);
                  })(c) &&
                    (o = Qw(l, null, e, r, a, s))),
                (function H1(i, t, e, n, r) {
                  if (t) r ? i.addClass(e, n) : i.removeClass(e, n);
                  else {
                    let o = -1 === n.indexOf("-") ? void 0 : ni.DashCase;
                    null == r
                      ? i.removeStyle(e, n, o)
                      : ("string" == typeof r &&
                          r.endsWith("!important") &&
                          ((r = r.slice(0, -10)), (o |= ni.Important)),
                        i.setStyle(e, n, r, o));
                  }
                })(n, s, nc(Yt(), e), r, o));
            })(
              o,
              o.data[Yt()],
              r,
              r[11],
              i,
              (r[s + 1] = (function $N(i, t) {
                return (
                  null == i ||
                    ("string" == typeof t
                      ? (i += t)
                      : "object" == typeof i && (i = Ve(fi(i)))),
                  i
                );
              })(t, e)),
              n,
              s
            );
      }
      function xm(i, t, e, n, r) {
        let o = null;
        const s = e.directiveEnd;
        let a = e.directiveStylingLast;
        for (
          -1 === a ? (a = e.directiveStart) : a++;
          a < s && ((o = t[a]), (n = ba(n, o.hostAttrs, r)), o !== i);

        )
          a++;
        return null !== i && (e.directiveStylingLast = a), n;
      }
      function ba(i, t, e) {
        const n = e ? 1 : 2;
        let r = -1;
        if (null !== t)
          for (let o = 0; o < t.length; o++) {
            const s = t[o];
            "number" == typeof s
              ? (r = s)
              : r === n &&
                (Array.isArray(i) || (i = void 0 === i ? [] : ["", i]),
                hi(i, s, !!e || t[++o]));
          }
        return void 0 === i ? null : i;
      }
      function Qw(i, t, e, n, r, o) {
        const s = null === t;
        let a;
        for (; r > 0; ) {
          const l = i[r],
            c = Array.isArray(l),
            d = c ? l[1] : l,
            u = null === d;
          let h = e[r + 1];
          h === te && (h = u ? we : void 0);
          let f = u ? ff(h, n) : d === n ? h : void 0;
          if ((c && !jc(f) && (f = ff(l, n)), jc(f) && ((a = f), s))) return a;
          const m = i[r + 1];
          r = s ? tr(m) : Vr(m);
        }
        if (null !== t) {
          let l = o ? t.residualClasses : t.residualStyles;
          null != l && (a = ff(l, n));
        }
        return a;
      }
      function jc(i) {
        return void 0 !== i;
      }
      function hn(i, t = "") {
        const e = S(),
          n = ye(),
          r = i + 22,
          o = n.firstCreatePass ? Vo(n, r, 1, t, null) : n.data[r],
          s = (e[r] = (function Ef(i, t) {
            return i.createText(t);
          })(e[11], t));
        vc(n, e, s, o), tn(o, !1);
      }
      function Pn(i, t, e) {
        const n = S(),
          r = (function Ho(i, t, e, n) {
            return Vt(i, Eo(), e) ? t + J(e) + n : te;
          })(n, i, t, e);
        return (
          r !== te &&
            (function On(i, t, e) {
              const n = nc(t, i);
              !(function $y(i, t, e) {
                i.setValue(t, e);
              })(i[11], n, e);
            })(n, Yt(), r),
          Pn
        );
      }
      function Dm(i, t, e) {
        const n = S();
        if (Vt(n, Eo(), t)) {
          const o = ye(),
            s = Ke();
          mi(o, s, n, i, t, aw(Yh(o.data), s, n), e, !0);
        }
        return Dm;
      }
      const Xo = "en-US";
      let gx = Xo;
      function Sm(i, t, e, n, r) {
        if (((i = G(i)), Array.isArray(i)))
          for (let o = 0; o < i.length; o++) Sm(i[o], t, e, n, r);
        else {
          const o = ye(),
            s = S();
          let a = Fr(i) ? i : G(i.provide),
            l = T0(i);
          const c = Tt(),
            d = 1048575 & c.providerIndexes,
            u = c.directiveStart,
            h = c.providerIndexes >> 20;
          if (Fr(i) || !i.multi) {
            const f = new Zs(l, r, v),
              m = km(a, t, r ? d : d + h, u);
            -1 === m
              ? (cf(uc(c, s), o, a),
                Tm(o, i, t.length),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(f),
                s.push(f))
              : ((e[m] = f), (s[m] = f));
          } else {
            const f = km(a, t, d + h, u),
              m = km(a, t, d, d + h),
              g = m >= 0 && e[m];
            if ((r && !g) || (!r && !(f >= 0 && e[f]))) {
              cf(uc(c, s), o, a);
              const b = (function c2(i, t, e, n, r) {
                const o = new Zs(i, e, v);
                return (
                  (o.multi = []),
                  (o.index = t),
                  (o.componentProviders = 0),
                  Hx(o, r, n && !e),
                  o
                );
              })(r ? l2 : a2, e.length, r, n, l);
              !r && g && (e[m].providerFactory = b),
                Tm(o, i, t.length, 0),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                r && (c.providerIndexes += 1048576),
                e.push(b),
                s.push(b);
            } else Tm(o, i, f > -1 ? f : m, Hx(e[r ? m : f], l, !r && n));
            !r && n && g && e[m].componentProviders++;
          }
        }
      }
      function Tm(i, t, e, n) {
        const r = Fr(t),
          o = (function xF(i) {
            return !!i.useClass;
          })(t);
        if (r || o) {
          const l = (o ? G(t.useClass) : t).prototype.ngOnDestroy;
          if (l) {
            const c = i.destroyHooks || (i.destroyHooks = []);
            if (!r && t.multi) {
              const d = c.indexOf(e);
              -1 === d ? c.push(e, [n, l]) : c[d + 1].push(n, l);
            } else c.push(e, l);
          }
        }
      }
      function Hx(i, t, e) {
        return e && i.componentProviders++, i.multi.push(t) - 1;
      }
      function km(i, t, e, n) {
        for (let r = e; r < n; r++) if (t[r] === i) return r;
        return -1;
      }
      function a2(i, t, e, n) {
        return Im(this.multi, []);
      }
      function l2(i, t, e, n) {
        const r = this.multi;
        let o;
        if (this.providerFactory) {
          const s = this.providerFactory.componentProviders,
            a = Tr(e, e[1], this.providerFactory.index, n);
          (o = a.slice(0, s)), Im(r, o);
          for (let l = s; l < a.length; l++) o.push(a[l]);
        } else (o = []), Im(r, o);
        return o;
      }
      function Im(i, t) {
        for (let e = 0; e < i.length; e++) t.push((0, i[e])());
        return t;
      }
      function X(i, t = []) {
        return (e) => {
          e.providersResolver = (n, r) =>
            (function s2(i, t, e) {
              const n = ye();
              if (n.firstCreatePass) {
                const r = zi(i);
                Sm(e, n.data, n.blueprint, r, !0),
                  Sm(t, n.data, n.blueprint, r, !1);
              }
            })(n, r ? r(i) : i, t);
        };
      }
      class Zo {}
      class zx {}
      class Ux extends Zo {
        constructor(t, e) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new cw(this));
          const n = li(t);
          (this._bootstrapComponents = Rn(n.bootstrap)),
            (this._r3Injector = z0(
              t,
              e,
              [
                { provide: Zo, useValue: this },
                { provide: Pr, useValue: this.componentFactoryResolver },
              ],
              Ve(t),
              new Set(["environment"])
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(t));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(),
            this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class Am extends zx {
        constructor(t) {
          super(), (this.moduleType = t);
        }
        create(t) {
          return new Ux(this.moduleType, t);
        }
      }
      class u2 extends Zo {
        constructor(t, e, n) {
          super(),
            (this.componentFactoryResolver = new cw(this)),
            (this.instance = null);
          const r = new S0(
            [
              ...t,
              { provide: Zo, useValue: this },
              { provide: Pr, useValue: this.componentFactoryResolver },
            ],
            e || Sc(),
            n,
            new Set(["environment"])
          );
          (this.injector = r), r.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(t) {
          this.injector.onDestroy(t);
        }
      }
      function Gc(i, t, e = null) {
        return new u2(i, t, e).injector;
      }
      let h2 = (() => {
        class i {
          constructor(e) {
            (this._injector = e), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(e) {
            if (!e.standalone) return null;
            if (!this.cachedInjectors.has(e.id)) {
              const n = C0(0, e.type),
                r =
                  n.length > 0
                    ? Gc([n], this._injector, `Standalone[${e.type.name}]`)
                    : null;
              this.cachedInjectors.set(e.id, r);
            }
            return this.cachedInjectors.get(e.id);
          }
          ngOnDestroy() {
            try {
              for (const e of this.cachedInjectors.values())
                null !== e && e.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
        }
        return (
          (i.ɵprov = k({
            token: i,
            providedIn: "environment",
            factory: () => new i(w(sn)),
          })),
          i
        );
      })();
      function Rm(i) {
        i.getStandaloneInjector = (t) =>
          t.get(h2).getOrCreateStandaloneInjector(i);
      }
      function Fm(i) {
        return (t) => {
          setTimeout(i, void 0, t);
        };
      }
      const ve = class B2 extends se {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, e, n) {
          let r = t,
            o = e || (() => null),
            s = n;
          if (t && "object" == typeof t) {
            const l = t;
            (r = l.next?.bind(l)),
              (o = l.error?.bind(l)),
              (s = l.complete?.bind(l));
          }
          this.__isAsync && ((o = Fm(o)), r && (r = Fm(r)), s && (s = Fm(s)));
          const a = super.subscribe({ next: r, error: o, complete: s });
          return t instanceof ut && t.add(a), a;
        }
      };
      function V2() {
        return this._results[Lr()]();
      }
      class Ma {
        get changes() {
          return this._changes || (this._changes = new ve());
        }
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const e = Lr(),
            n = Ma.prototype;
          n[e] || (n[e] = V2);
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, e) {
          return this._results.reduce(t, e);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, e) {
          const n = this;
          n.dirty = !1;
          const r = (function Mi(i) {
            return i.flat(Number.POSITIVE_INFINITY);
          })(t);
          (this._changesDetected = !(function $O(i, t, e) {
            if (i.length !== t.length) return !1;
            for (let n = 0; n < i.length; n++) {
              let r = i[n],
                o = t[n];
              if ((e && ((r = e(r)), (o = e(o))), o !== r)) return !1;
            }
            return !0;
          })(n._results, r, e)) &&
            ((n._results = r),
            (n.length = r.length),
            (n.last = r[this.length - 1]),
            (n.first = r[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      let Et = (() => {
        class i {}
        return (i.__NG_ELEMENT_ID__ = z2), i;
      })();
      const j2 = Et,
        H2 = class extends j2 {
          constructor(t, e, n) {
            super(),
              (this._declarationLView = t),
              (this._declarationTContainer = e),
              (this.elementRef = n);
          }
          createEmbeddedView(t, e) {
            const n = this._declarationTContainer.tViews,
              r = Ic(
                this._declarationLView,
                n,
                t,
                16,
                null,
                n.declTNode,
                null,
                null,
                null,
                null,
                e || null
              );
            r[17] = this._declarationLView[this._declarationTContainer.index];
            const s = this._declarationLView[19];
            return (
              null !== s && (r[19] = s.createEmbeddedView(n)),
              em(n, r, t),
              new ha(r)
            );
          }
        };
      function z2() {
        return qc(Tt(), S());
      }
      function qc(i, t) {
        return 4 & i.type ? new H2(t, i, No(i, t)) : null;
      }
      let kt = (() => {
        class i {}
        return (i.__NG_ELEMENT_ID__ = U2), i;
      })();
      function U2() {
        return nC(Tt(), S());
      }
      const $2 = kt,
        tC = class extends $2 {
          constructor(t, e, n) {
            super(),
              (this._lContainer = t),
              (this._hostTNode = e),
              (this._hostLView = n);
          }
          get element() {
            return No(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new So(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = lf(this._hostTNode, this._hostLView);
            if (dy(t)) {
              const e = cc(t, this._hostLView),
                n = lc(t);
              return new So(e[1].data[n + 8], e);
            }
            return new So(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const e = iC(this._lContainer);
            return (null !== e && e[t]) || null;
          }
          get length() {
            return this._lContainer.length - 10;
          }
          createEmbeddedView(t, e, n) {
            let r, o;
            "number" == typeof n
              ? (r = n)
              : null != n && ((r = n.index), (o = n.injector));
            const s = t.createEmbeddedView(e || {}, o);
            return this.insert(s, r), s;
          }
          createComponent(t, e, n, r, o) {
            const s =
              t &&
              !(function ta(i) {
                return "function" == typeof i;
              })(t);
            let a;
            if (s) a = e;
            else {
              const u = e || {};
              (a = u.index),
                (n = u.injector),
                (r = u.projectableNodes),
                (o = u.environmentInjector || u.ngModuleRef);
            }
            const l = s ? t : new fa(ke(t)),
              c = n || this.parentInjector;
            if (!o && null == l.ngModule) {
              const h = (s ? c : this.parentInjector).get(sn, null);
              h && (o = h);
            }
            const d = l.create(c, r, void 0, o);
            return this.insert(d.hostView, a), d;
          }
          insert(t, e) {
            const n = t._lView,
              r = n[1];
            if (
              (function mO(i) {
                return Hi(i[3]);
              })(n)
            ) {
              const d = this.indexOf(t);
              if (-1 !== d) this.detach(d);
              else {
                const u = n[3],
                  h = new tC(u, u[6], u[3]);
                h.detach(h.indexOf(t));
              }
            }
            const o = this._adjustIndex(e),
              s = this._lContainer;
            !(function O1(i, t, e, n) {
              const r = 10 + n,
                o = e.length;
              n > 0 && (e[r - 1][4] = t),
                n < o - 10
                  ? ((t[4] = e[r]), xy(e, 10 + n, t))
                  : (e.push(t), (t[4] = null)),
                (t[3] = e);
              const s = t[17];
              null !== s &&
                e !== s &&
                (function F1(i, t) {
                  const e = i[9];
                  t[16] !== t[3][3][16] && (i[2] = !0),
                    null === e ? (i[9] = [t]) : e.push(t);
                })(s, t);
              const a = t[19];
              null !== a && a.insertView(i), (t[2] |= 64);
            })(r, n, s, o);
            const a = If(o, s),
              l = n[11],
              c = bc(l, s[7]);
            return (
              null !== c &&
                (function I1(i, t, e, n, r, o) {
                  (n[0] = r), (n[6] = t), aa(i, n, e, 1, r, o);
                })(r, s[6], l, n, c, a),
              t.attachToViewContainerRef(),
              xy(Pm(s), o, t),
              t
            );
          }
          move(t, e) {
            return this.insert(t, e);
          }
          indexOf(t) {
            const e = iC(this._lContainer);
            return null !== e ? e.indexOf(t) : -1;
          }
          remove(t) {
            const e = this._adjustIndex(t, -1),
              n = Sf(this._lContainer, e);
            n && (fc(Pm(this._lContainer), e), qy(n[1], n));
          }
          detach(t) {
            const e = this._adjustIndex(t, -1),
              n = Sf(this._lContainer, e);
            return n && null != fc(Pm(this._lContainer), e) ? new ha(n) : null;
          }
          _adjustIndex(t, e = 0) {
            return t ?? this.length + e;
          }
        };
      function iC(i) {
        return i[8];
      }
      function Pm(i) {
        return i[8] || (i[8] = []);
      }
      function nC(i, t) {
        let e;
        const n = t[i.index];
        if (Hi(n)) e = n;
        else {
          let r;
          if (8 & i.type) r = St(n);
          else {
            const o = t[11];
            r = o.createComment("");
            const s = di(i, t);
            Ar(
              o,
              bc(o, s),
              r,
              (function B1(i, t) {
                return i.nextSibling(t);
              })(o, s),
              !1
            );
          }
          (t[i.index] = e = rw(n, t, r, i)), Rc(t, e);
        }
        return new tC(e, i, t);
      }
      class Nm {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new Nm(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Lm {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const e = t.queries;
          if (null !== e) {
            const n =
                null !== t.contentQueries ? t.contentQueries[0] : e.length,
              r = [];
            for (let o = 0; o < n; o++) {
              const s = e.getByIndex(o);
              r.push(this.queries[s.indexInDeclarationView].clone());
            }
            return new Lm(r);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let e = 0; e < this.queries.length; e++)
            null !== lC(t, e).matches && this.queries[e].setDirty();
        }
      }
      class rC {
        constructor(t, e, n = null) {
          (this.predicate = t), (this.flags = e), (this.read = n);
        }
      }
      class Bm {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, e) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].elementStart(t, e);
        }
        elementEnd(t) {
          for (let e = 0; e < this.queries.length; e++)
            this.queries[e].elementEnd(t);
        }
        embeddedTView(t) {
          let e = null;
          for (let n = 0; n < this.length; n++) {
            const r = null !== e ? e.length : 0,
              o = this.getByIndex(n).embeddedTView(t, r);
            o &&
              ((o.indexInDeclarationView = n),
              null !== e ? e.push(o) : (e = [o]));
          }
          return null !== e ? new Bm(e) : null;
        }
        template(t, e) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].template(t, e);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class Vm {
        constructor(t, e = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(t, e) {
          this.isApplyingToNode(e) && this.matchTNode(t, e);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index &&
            (this._appliesToNextNode = !1);
        }
        template(t, e) {
          this.elementStart(t, e);
        }
        embeddedTView(t, e) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-t.index, e),
              new Vm(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const e = this._declarationNodeIndex;
            let n = t.parent;
            for (; null !== n && 8 & n.type && n.index !== e; ) n = n.parent;
            return e === (null !== n ? n.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, e) {
          const n = this.metadata.predicate;
          if (Array.isArray(n))
            for (let r = 0; r < n.length; r++) {
              const o = n[r];
              this.matchTNodeWithReadOption(t, e, G2(e, o)),
                this.matchTNodeWithReadOption(t, e, hc(e, t, o, !1, !1));
            }
          else
            n === Et
              ? 4 & e.type && this.matchTNodeWithReadOption(t, e, -1)
              : this.matchTNodeWithReadOption(t, e, hc(e, t, n, !1, !1));
        }
        matchTNodeWithReadOption(t, e, n) {
          if (null !== n) {
            const r = this.metadata.read;
            if (null !== r)
              if (r === ce || r === kt || (r === Et && 4 & e.type))
                this.addMatch(e.index, -2);
              else {
                const o = hc(e, t, r, !1, !1);
                null !== o && this.addMatch(e.index, o);
              }
            else this.addMatch(e.index, n);
          }
        }
        addMatch(t, e) {
          null === this.matches
            ? (this.matches = [t, e])
            : this.matches.push(t, e);
        }
      }
      function G2(i, t) {
        const e = i.localNames;
        if (null !== e)
          for (let n = 0; n < e.length; n += 2) if (e[n] === t) return e[n + 1];
        return null;
      }
      function W2(i, t, e, n) {
        return -1 === e
          ? (function q2(i, t) {
              return 11 & i.type ? No(i, t) : 4 & i.type ? qc(i, t) : null;
            })(t, i)
          : -2 === e
          ? (function Q2(i, t, e) {
              return e === ce
                ? No(t, i)
                : e === Et
                ? qc(t, i)
                : e === kt
                ? nC(t, i)
                : void 0;
            })(i, t, n)
          : Tr(i, i[1], e, t);
      }
      function oC(i, t, e, n) {
        const r = t[19].queries[n];
        if (null === r.matches) {
          const o = i.data,
            s = e.matches,
            a = [];
          for (let l = 0; l < s.length; l += 2) {
            const c = s[l];
            a.push(c < 0 ? null : W2(t, o[c], s[l + 1], e.metadata.read));
          }
          r.matches = a;
        }
        return r.matches;
      }
      function jm(i, t, e, n) {
        const r = i.queries.getByIndex(e),
          o = r.matches;
        if (null !== o) {
          const s = oC(i, t, r, e);
          for (let a = 0; a < o.length; a += 2) {
            const l = o[a];
            if (l > 0) n.push(s[a / 2]);
            else {
              const c = o[a + 1],
                d = t[-l];
              for (let u = 10; u < d.length; u++) {
                const h = d[u];
                h[17] === h[3] && jm(h[1], h, c, n);
              }
              if (null !== d[9]) {
                const u = d[9];
                for (let h = 0; h < u.length; h++) {
                  const f = u[h];
                  jm(f[1], f, c, n);
                }
              }
            }
          }
        }
        return n;
      }
      function Ie(i) {
        const t = S(),
          e = ye(),
          n = ey();
        Kh(n + 1);
        const r = lC(e, n);
        if (
          i.dirty &&
          (function fO(i) {
            return 4 == (4 & i[2]);
          })(t) ===
            (2 == (2 & r.metadata.flags))
        ) {
          if (null === r.matches) i.reset([]);
          else {
            const o = r.crossesNgTemplate ? jm(e, t, n, []) : oC(e, t, r, n);
            i.reset(o, OF), i.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function Xt(i, t, e) {
        const n = ye();
        n.firstCreatePass &&
          ((function aC(i, t, e) {
            null === i.queries && (i.queries = new Bm()),
              i.queries.track(new Vm(t, e));
          })(n, new rC(i, t, e), -1),
          2 == (2 & t) && (n.staticViewQueries = !0)),
          (function sC(i, t, e) {
            const n = new Ma(4 == (4 & e));
            Z0(i, t, n, n.destroy),
              null === t[19] && (t[19] = new Lm()),
              t[19].queries.push(new Nm(n));
          })(n, S(), t);
      }
      function Ae() {
        return (function Y2(i, t) {
          return i[19].queries[t].queryList;
        })(S(), ey());
      }
      function lC(i, t) {
        return i.queries.getByIndex(t);
      }
      function Yc(...i) {}
      const Kc = new E("Application Initializer");
      let Xc = (() => {
        class i {
          constructor(e) {
            (this.appInits = e),
              (this.resolve = Yc),
              (this.reject = Yc),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((n, r) => {
                (this.resolve = n), (this.reject = r);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const e = [],
              n = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let r = 0; r < this.appInits.length; r++) {
                const o = this.appInits[r]();
                if (_a(o)) e.push(o);
                else if (gm(o)) {
                  const s = new Promise((a, l) => {
                    o.subscribe({ complete: a, error: l });
                  });
                  e.push(s);
                }
              }
            Promise.all(e)
              .then(() => {
                n();
              })
              .catch((r) => {
                this.reject(r);
              }),
              0 === e.length && n(),
              (this.initialized = !0);
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(Kc, 8));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      const Ta = new E("AppId", {
        providedIn: "root",
        factory: function SC() {
          return `${Gm()}${Gm()}${Gm()}`;
        },
      });
      function Gm() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const TC = new E("Platform Initializer"),
        Zc = new E("Platform ID", {
          providedIn: "platform",
          factory: () => "unknown",
        }),
        kC = new E("appBootstrapListener"),
        ir = new E("AnimationModuleType");
      let gB = (() => {
        class i {
          log(e) {
            console.log(e);
          }
          warn(e) {
            console.warn(e);
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "platform" })),
          i
        );
      })();
      const fn = new E("LocaleId", {
        providedIn: "root",
        factory: () =>
          Y(fn, q.Optional | q.SkipSelf) ||
          (function _B() {
            return (typeof $localize < "u" && $localize.locale) || Xo;
          })(),
      });
      class vB {
        constructor(t, e) {
          (this.ngModuleFactory = t), (this.componentFactories = e);
        }
      }
      let IC = (() => {
        class i {
          compileModuleSync(e) {
            return new Am(e);
          }
          compileModuleAsync(e) {
            return Promise.resolve(this.compileModuleSync(e));
          }
          compileModuleAndAllComponentsSync(e) {
            const n = this.compileModuleSync(e),
              o = Rn(li(e).declarations).reduce((s, a) => {
                const l = ke(a);
                return l && s.push(new fa(l)), s;
              }, []);
            return new vB(n, o);
          }
          compileModuleAndAllComponentsAsync(e) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(e));
          }
          clearCache() {}
          clearCacheFor(e) {}
          getModuleId(e) {}
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      const xB = (() => Promise.resolve(0))();
      function qm(i) {
        typeof Zone > "u"
          ? xB.then(() => {
              i && i.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", i);
      }
      class Z {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: e = !1,
          shouldCoalesceRunChangeDetection: n = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new ve(!1)),
            (this.onMicrotaskEmpty = new ve(!1)),
            (this.onStable = new ve(!1)),
            (this.onError = new ve(!1)),
            typeof Zone > "u")
          )
            throw new D(908, !1);
          Zone.assertZonePatched();
          const r = this;
          (r._nesting = 0),
            (r._outer = r._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t &&
              Zone.longStackTraceZoneSpec &&
              (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)),
            (r.shouldCoalesceEventChangeDetection = !n && e),
            (r.shouldCoalesceRunChangeDetection = n),
            (r.lastRequestAnimationFrameId = -1),
            (r.nativeRequestAnimationFrame = (function CB() {
              let i = je.requestAnimationFrame,
                t = je.cancelAnimationFrame;
              if (typeof Zone < "u" && i && t) {
                const e = i[Zone.__symbol__("OriginalDelegate")];
                e && (i = e);
                const n = t[Zone.__symbol__("OriginalDelegate")];
                n && (t = n);
              }
              return {
                nativeRequestAnimationFrame: i,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function MB(i) {
              const t = () => {
                !(function EB(i) {
                  i.isCheckStableRunning ||
                    -1 !== i.lastRequestAnimationFrameId ||
                    ((i.lastRequestAnimationFrameId =
                      i.nativeRequestAnimationFrame.call(je, () => {
                        i.fakeTopEventTask ||
                          (i.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (i.lastRequestAnimationFrameId = -1),
                                Qm(i),
                                (i.isCheckStableRunning = !0),
                                Wm(i),
                                (i.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          i.fakeTopEventTask.invoke();
                      })),
                    Qm(i));
                })(i);
              };
              i._inner = i._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (e, n, r, o, s, a) => {
                  try {
                    return OC(i), e.invokeTask(r, o, s, a);
                  } finally {
                    ((i.shouldCoalesceEventChangeDetection &&
                      "eventTask" === o.type) ||
                      i.shouldCoalesceRunChangeDetection) &&
                      t(),
                      FC(i);
                  }
                },
                onInvoke: (e, n, r, o, s, a, l) => {
                  try {
                    return OC(i), e.invoke(r, o, s, a, l);
                  } finally {
                    i.shouldCoalesceRunChangeDetection && t(), FC(i);
                  }
                },
                onHasTask: (e, n, r, o) => {
                  e.hasTask(r, o),
                    n === r &&
                      ("microTask" == o.change
                        ? ((i._hasPendingMicrotasks = o.microTask),
                          Qm(i),
                          Wm(i))
                        : "macroTask" == o.change &&
                          (i.hasPendingMacrotasks = o.macroTask));
                },
                onHandleError: (e, n, r, o) => (
                  e.handleError(r, o),
                  i.runOutsideAngular(() => i.onError.emit(o)),
                  !1
                ),
              });
            })(r);
        }
        static isInAngularZone() {
          return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!Z.isInAngularZone()) throw new D(909, !1);
        }
        static assertNotInAngularZone() {
          if (Z.isInAngularZone()) throw new D(909, !1);
        }
        run(t, e, n) {
          return this._inner.run(t, e, n);
        }
        runTask(t, e, n, r) {
          const o = this._inner,
            s = o.scheduleEventTask("NgZoneEvent: " + r, t, DB, Yc, Yc);
          try {
            return o.runTask(s, e, n);
          } finally {
            o.cancelTask(s);
          }
        }
        runGuarded(t, e, n) {
          return this._inner.runGuarded(t, e, n);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const DB = {};
      function Wm(i) {
        if (0 == i._nesting && !i.hasPendingMicrotasks && !i.isStable)
          try {
            i._nesting++, i.onMicrotaskEmpty.emit(null);
          } finally {
            if ((i._nesting--, !i.hasPendingMicrotasks))
              try {
                i.runOutsideAngular(() => i.onStable.emit(null));
              } finally {
                i.isStable = !0;
              }
          }
      }
      function Qm(i) {
        i.hasPendingMicrotasks = !!(
          i._hasPendingMicrotasks ||
          ((i.shouldCoalesceEventChangeDetection ||
            i.shouldCoalesceRunChangeDetection) &&
            -1 !== i.lastRequestAnimationFrameId)
        );
      }
      function OC(i) {
        i._nesting++,
          i.isStable && ((i.isStable = !1), i.onUnstable.emit(null));
      }
      function FC(i) {
        i._nesting--, Wm(i);
      }
      class SB {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new ve()),
            (this.onMicrotaskEmpty = new ve()),
            (this.onStable = new ve()),
            (this.onError = new ve());
        }
        run(t, e, n) {
          return t.apply(e, n);
        }
        runGuarded(t, e, n) {
          return t.apply(e, n);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, e, n, r) {
          return t.apply(e, n);
        }
      }
      const PC = new E(""),
        Jc = new E("");
      let Xm,
        Ym = (() => {
          class i {
            constructor(e, n, r) {
              (this._ngZone = e),
                (this.registry = n),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                Xm ||
                  ((function TB(i) {
                    Xm = i;
                  })(r),
                  r.addToWindow(n)),
                this._watchAngularEvents(),
                e.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > "u"
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Z.assertNotInAngularZone(),
                        qm(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                qm(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let e = this._callbacks.pop();
                    clearTimeout(e.timeoutId), e.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let e = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (n) =>
                    !n.updateCb ||
                    !n.updateCb(e) ||
                    (clearTimeout(n.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((e) => ({
                    source: e.source,
                    creationLocation: e.creationLocation,
                    data: e.data,
                  }))
                : [];
            }
            addCallback(e, n, r) {
              let o = -1;
              n &&
                n > 0 &&
                (o = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (s) => s.timeoutId !== o
                  )),
                    e(this._didWork, this.getPendingTasks());
                }, n)),
                this._callbacks.push({ doneCb: e, timeoutId: o, updateCb: r });
            }
            whenStable(e, n, r) {
              if (r && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(e, n, r), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(e) {
              this.registry.registerApplication(e, this);
            }
            unregisterApplication(e) {
              this.registry.unregisterApplication(e);
            }
            findProviders(e, n, r) {
              return [];
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(Z), w(Km), w(Jc));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac })),
            i
          );
        })(),
        Km = (() => {
          class i {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(e, n) {
              this._applications.set(e, n);
            }
            unregisterApplication(e) {
              this._applications.delete(e);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(e) {
              return this._applications.get(e) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(e, n = !0) {
              return Xm?.findTestabilityInTree(this, e, n) ?? null;
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵprov = k({
              token: i,
              factory: i.ɵfac,
              providedIn: "platform",
            })),
            i
          );
        })(),
        nr = null;
      const NC = new E("AllowMultipleToken"),
        Zm = new E("PlatformDestroyListeners");
      class LC {
        constructor(t, e) {
          (this.name = t), (this.token = e);
        }
      }
      function VC(i, t, e = []) {
        const n = `Platform: ${t}`,
          r = new E(n);
        return (o = []) => {
          let s = Jm();
          if (!s || s.injector.get(NC, !1)) {
            const a = [...e, ...o, { provide: r, useValue: !0 }];
            i
              ? i(a)
              : (function AB(i) {
                  if (nr && !nr.get(NC, !1)) throw new D(400, !1);
                  nr = i;
                  const t = i.get(HC);
                  (function BC(i) {
                    const t = i.get(TC, null);
                    t && t.forEach((e) => e());
                  })(i);
                })(
                  (function jC(i = [], t) {
                    return vt.create({
                      name: t,
                      providers: [
                        { provide: zf, useValue: "platform" },
                        { provide: Zm, useValue: new Set([() => (nr = null)]) },
                        ...i,
                      ],
                    });
                  })(a, n)
                );
          }
          return (function OB(i) {
            const t = Jm();
            if (!t) throw new D(401, !1);
            return t;
          })();
        };
      }
      function Jm() {
        return nr?.get(HC) ?? null;
      }
      let HC = (() => {
        class i {
          constructor(e) {
            (this._injector = e),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(e, n) {
            const r = (function UC(i, t) {
                let e;
                return (
                  (e =
                    "noop" === i
                      ? new SB()
                      : ("zone.js" === i ? void 0 : i) || new Z(t)),
                  e
                );
              })(
                n?.ngZone,
                (function zC(i) {
                  return {
                    enableLongStackTrace: !1,
                    shouldCoalesceEventChangeDetection:
                      !(!i || !i.ngZoneEventCoalescing) || !1,
                    shouldCoalesceRunChangeDetection:
                      !(!i || !i.ngZoneRunCoalescing) || !1,
                  };
                })(n)
              ),
              o = [{ provide: Z, useValue: r }];
            return r.run(() => {
              const s = vt.create({
                  providers: o,
                  parent: this.injector,
                  name: e.moduleType.name,
                }),
                a = e.create(s),
                l = a.injector.get(An, null);
              if (!l) throw new D(402, !1);
              return (
                r.runOutsideAngular(() => {
                  const c = r.onError.subscribe({
                    next: (d) => {
                      l.handleError(d);
                    },
                  });
                  a.onDestroy(() => {
                    ed(this._modules, a), c.unsubscribe();
                  });
                }),
                (function $C(i, t, e) {
                  try {
                    const n = e();
                    return _a(n)
                      ? n.catch((r) => {
                          throw (
                            (t.runOutsideAngular(() => i.handleError(r)), r)
                          );
                        })
                      : n;
                  } catch (n) {
                    throw (t.runOutsideAngular(() => i.handleError(n)), n);
                  }
                })(l, r, () => {
                  const c = a.injector.get(Xc);
                  return (
                    c.runInitializers(),
                    c.donePromise.then(
                      () => (
                        (function _x(i) {
                          Ci(i, "Expected localeId to be defined"),
                            "string" == typeof i &&
                              (gx = i.toLowerCase().replace(/_/g, "-"));
                        })(a.injector.get(fn, Xo) || Xo),
                        this._moduleDoBootstrap(a),
                        a
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(e, n = []) {
            const r = GC({}, n);
            return (function kB(i, t, e) {
              const n = new Am(e);
              return Promise.resolve(n);
            })(0, 0, e).then((o) => this.bootstrapModuleFactory(o, r));
          }
          _moduleDoBootstrap(e) {
            const n = e.injector.get(ts);
            if (e._bootstrapComponents.length > 0)
              e._bootstrapComponents.forEach((r) => n.bootstrap(r));
            else {
              if (!e.instance.ngDoBootstrap) throw new D(-403, !1);
              e.instance.ngDoBootstrap(n);
            }
            this._modules.push(e);
          }
          onDestroy(e) {
            this._destroyListeners.push(e);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new D(404, !1);
            this._modules.slice().forEach((n) => n.destroy()),
              this._destroyListeners.forEach((n) => n());
            const e = this._injector.get(Zm, null);
            e && (e.forEach((n) => n()), e.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(vt));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "platform" })),
          i
        );
      })();
      function GC(i, t) {
        return Array.isArray(t) ? t.reduce(GC, i) : { ...i, ...t };
      }
      let ts = (() => {
        class i {
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          constructor(e, n, r) {
            (this._zone = e),
              (this._injector = n),
              (this._exceptionHandler = r),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription =
                this._zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this._zone.run(() => {
                      this.tick();
                    });
                  },
                }));
            const o = new be((a) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    a.next(this._stable), a.complete();
                  });
              }),
              s = new be((a) => {
                let l;
                this._zone.runOutsideAngular(() => {
                  l = this._zone.onStable.subscribe(() => {
                    Z.assertNotInAngularZone(),
                      qm(() => {
                        !this._stable &&
                          !this._zone.hasPendingMacrotasks &&
                          !this._zone.hasPendingMicrotasks &&
                          ((this._stable = !0), a.next(!0));
                      });
                  });
                });
                const c = this._zone.onUnstable.subscribe(() => {
                  Z.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        a.next(!1);
                      }));
                });
                return () => {
                  l.unsubscribe(), c.unsubscribe();
                };
              });
            this.isStable = Sh(o, s.pipe(Ev()));
          }
          bootstrap(e, n) {
            const r = e instanceof k0;
            if (!this._injector.get(Xc).done)
              throw (
                (!r &&
                  (function vo(i) {
                    const t = ke(i) || Ft(i) || qt(i);
                    return null !== t && t.standalone;
                  })(e),
                new D(405, false))
              );
            let s;
            (s = r ? e : this._injector.get(Pr).resolveComponentFactory(e)),
              this.componentTypes.push(s.componentType);
            const a = (function IB(i) {
                return i.isBoundToModule;
              })(s)
                ? void 0
                : this._injector.get(Zo),
              c = s.create(vt.NULL, [], n || s.selector, a),
              d = c.location.nativeElement,
              u = c.injector.get(PC, null);
            return (
              u?.registerApplication(d),
              c.onDestroy(() => {
                this.detachView(c.hostView),
                  ed(this.components, c),
                  u?.unregisterApplication(d);
              }),
              this._loadComponent(c),
              c
            );
          }
          tick() {
            if (this._runningTick) throw new D(101, !1);
            try {
              this._runningTick = !0;
              for (let e of this._views) e.detectChanges();
            } catch (e) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(e)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(e) {
            const n = e;
            this._views.push(n), n.attachToAppRef(this);
          }
          detachView(e) {
            const n = e;
            ed(this._views, n), n.detachFromAppRef();
          }
          _loadComponent(e) {
            this.attachView(e.hostView), this.tick(), this.components.push(e);
            const n = this._injector.get(kC, []);
            n.push(...this._bootstrapListeners), n.forEach((r) => r(e));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((e) => e()),
                  this._views.slice().forEach((e) => e.destroy()),
                  this._onMicrotaskEmptySubscription.unsubscribe();
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(e) {
            return (
              this._destroyListeners.push(e),
              () => ed(this._destroyListeners, e)
            );
          }
          destroy() {
            if (this._destroyed) throw new D(406, !1);
            const e = this._injector;
            e.destroy && !e.destroyed && e.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(Z), w(sn), w(An));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      function ed(i, t) {
        const e = i.indexOf(t);
        e > -1 && i.splice(e, 1);
      }
      let Wi = (() => {
        class i {}
        return (i.__NG_ELEMENT_ID__ = NB), i;
      })();
      function NB(i) {
        return (function LB(i, t, e) {
          if (Ks(i) && !e) {
            const n = ui(i.index, t);
            return new ha(n, n);
          }
          return 47 & i.type ? new ha(t[16], t) : null;
        })(Tt(), S(), 16 == (16 & i));
      }
      const KB = VC(null, "core", []);
      let XB = (() => {
          class i {
            constructor(e) {}
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(ts));
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({})),
            i
          );
        })(),
        rp = null;
      function mn() {
        return rp;
      }
      class eV {}
      const le = new E("DocumentToken");
      let op = (() => {
        class i {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵprov = k({
            token: i,
            factory: function () {
              return (function tV() {
                return w(iD);
              })();
            },
            providedIn: "platform",
          })),
          i
        );
      })();
      const iV = new E("Location Initialized");
      let iD = (() => {
        class i extends op {
          constructor(e) {
            super(),
              (this._doc = e),
              (this._location = window.location),
              (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return mn().getBaseHref(this._doc);
          }
          onPopState(e) {
            const n = mn().getGlobalEventTarget(this._doc, "window");
            return (
              n.addEventListener("popstate", e, !1),
              () => n.removeEventListener("popstate", e)
            );
          }
          onHashChange(e) {
            const n = mn().getGlobalEventTarget(this._doc, "window");
            return (
              n.addEventListener("hashchange", e, !1),
              () => n.removeEventListener("hashchange", e)
            );
          }
          get href() {
            return this._location.href;
          }
          get protocol() {
            return this._location.protocol;
          }
          get hostname() {
            return this._location.hostname;
          }
          get port() {
            return this._location.port;
          }
          get pathname() {
            return this._location.pathname;
          }
          get search() {
            return this._location.search;
          }
          get hash() {
            return this._location.hash;
          }
          set pathname(e) {
            this._location.pathname = e;
          }
          pushState(e, n, r) {
            nD() ? this._history.pushState(e, n, r) : (this._location.hash = r);
          }
          replaceState(e, n, r) {
            nD()
              ? this._history.replaceState(e, n, r)
              : (this._location.hash = r);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(e = 0) {
            this._history.go(e);
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(le));
          }),
          (i.ɵprov = k({
            token: i,
            factory: function () {
              return (function nV() {
                return new iD(w(le));
              })();
            },
            providedIn: "platform",
          })),
          i
        );
      })();
      function nD() {
        return !!window.history.pushState;
      }
      function sp(i, t) {
        if (0 == i.length) return t;
        if (0 == t.length) return i;
        let e = 0;
        return (
          i.endsWith("/") && e++,
          t.startsWith("/") && e++,
          2 == e ? i + t.substring(1) : 1 == e ? i + t : i + "/" + t
        );
      }
      function rD(i) {
        const t = i.match(/#|\?|$/),
          e = (t && t.index) || i.length;
        return i.slice(0, e - ("/" === i[e - 1] ? 1 : 0)) + i.slice(e);
      }
      function Bn(i) {
        return i && "?" !== i[0] ? "?" + i : i;
      }
      let Ur = (() => {
        class i {
          historyGo(e) {
            throw new Error("Not implemented");
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵprov = k({
            token: i,
            factory: function () {
              return Y(sD);
            },
            providedIn: "root",
          })),
          i
        );
      })();
      const oD = new E("appBaseHref");
      let sD = (() => {
          class i extends Ur {
            constructor(e, n) {
              super(),
                (this._platformLocation = e),
                (this._removeListenerFns = []),
                (this._baseHref =
                  n ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  Y(le).location?.origin ??
                  "");
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(e) {
              return sp(this._baseHref, e);
            }
            path(e = !1) {
              const n =
                  this._platformLocation.pathname +
                  Bn(this._platformLocation.search),
                r = this._platformLocation.hash;
              return r && e ? `${n}${r}` : n;
            }
            pushState(e, n, r, o) {
              const s = this.prepareExternalUrl(r + Bn(o));
              this._platformLocation.pushState(e, n, s);
            }
            replaceState(e, n, r, o) {
              const s = this.prepareExternalUrl(r + Bn(o));
              this._platformLocation.replaceState(e, n, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(op), w(oD, 8));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })(),
        rV = (() => {
          class i extends Ur {
            constructor(e, n) {
              super(),
                (this._platformLocation = e),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != n && (this._baseHref = n);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(e) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(e = !1) {
              let n = this._platformLocation.hash;
              return null == n && (n = "#"), n.length > 0 ? n.substring(1) : n;
            }
            prepareExternalUrl(e) {
              const n = sp(this._baseHref, e);
              return n.length > 0 ? "#" + n : n;
            }
            pushState(e, n, r, o) {
              let s = this.prepareExternalUrl(r + Bn(o));
              0 == s.length && (s = this._platformLocation.pathname),
                this._platformLocation.pushState(e, n, s);
            }
            replaceState(e, n, r, o) {
              let s = this.prepareExternalUrl(r + Bn(o));
              0 == s.length && (s = this._platformLocation.pathname),
                this._platformLocation.replaceState(e, n, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(e = 0) {
              this._platformLocation.historyGo?.(e);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(op), w(oD, 8));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac })),
            i
          );
        })(),
        nd = (() => {
          class i {
            constructor(e) {
              (this._subject = new ve()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = e);
              const n = this._locationStrategy.getBaseHref();
              (this._basePath = (function aV(i) {
                if (new RegExp("^(https?:)?//").test(i)) {
                  const [, e] = i.split(/\/\/[^\/]+/);
                  return e;
                }
                return i;
              })(rD(aD(n)))),
                this._locationStrategy.onPopState((r) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: r.state,
                    type: r.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(e = !1) {
              return this.normalize(this._locationStrategy.path(e));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(e, n = "") {
              return this.path() == this.normalize(e + Bn(n));
            }
            normalize(e) {
              return i.stripTrailingSlash(
                (function sV(i, t) {
                  return i && new RegExp(`^${i}([/;?#]|$)`).test(t)
                    ? t.substring(i.length)
                    : t;
                })(this._basePath, aD(e))
              );
            }
            prepareExternalUrl(e) {
              return (
                e && "/" !== e[0] && (e = "/" + e),
                this._locationStrategy.prepareExternalUrl(e)
              );
            }
            go(e, n = "", r = null) {
              this._locationStrategy.pushState(r, "", e, n),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + Bn(n)),
                  r
                );
            }
            replaceState(e, n = "", r = null) {
              this._locationStrategy.replaceState(r, "", e, n),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + Bn(n)),
                  r
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(e = 0) {
              this._locationStrategy.historyGo?.(e);
            }
            onUrlChange(e) {
              return (
                this._urlChangeListeners.push(e),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((n) => {
                    this._notifyUrlChangeListeners(n.url, n.state);
                  })),
                () => {
                  const n = this._urlChangeListeners.indexOf(e);
                  this._urlChangeListeners.splice(n, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(e = "", n) {
              this._urlChangeListeners.forEach((r) => r(e, n));
            }
            subscribe(e, n, r) {
              return this._subject.subscribe({
                next: e,
                error: n,
                complete: r,
              });
            }
          }
          return (
            (i.normalizeQueryParams = Bn),
            (i.joinWithSlash = sp),
            (i.stripTrailingSlash = rD),
            (i.ɵfac = function (e) {
              return new (e || i)(w(Ur));
            }),
            (i.ɵprov = k({
              token: i,
              factory: function () {
                return (function oV() {
                  return new nd(w(Ur));
                })();
              },
              providedIn: "root",
            })),
            i
          );
        })();
      function aD(i) {
        return i.replace(/\/index.html$/, "");
      }
      function gD(i, t) {
        t = encodeURIComponent(t);
        for (const e of i.split(";")) {
          const n = e.indexOf("="),
            [r, o] = -1 == n ? [e, ""] : [e.slice(0, n), e.slice(n + 1)];
          if (r.trim() === t) return decodeURIComponent(o);
        }
        return null;
      }
      let fd = (() => {
        class i {
          constructor(e, n) {
            (this._viewContainer = e),
              (this._context = new YV()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = n);
          }
          set ngIf(e) {
            (this._context.$implicit = this._context.ngIf = e),
              this._updateView();
          }
          set ngIfThen(e) {
            wD("ngIfThen", e),
              (this._thenTemplateRef = e),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(e) {
            wD("ngIfElse", e),
              (this._elseTemplateRef = e),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(e, n) {
            return !0;
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(v(kt), v(Et));
          }),
          (i.ɵdir = M({
            type: i,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
            standalone: !0,
          })),
          i
        );
      })();
      class YV {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function wD(i, t) {
        if (t && !t.createEmbeddedView)
          throw new Error(
            `${i} must be a TemplateRef, but received '${Ve(t)}'.`
          );
      }
      let gi = (() => {
        class i {}
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵmod = K({ type: i })),
          (i.ɵinj = Q({})),
          i
        );
      })();
      const ED = "browser";
      let Mj = (() => {
        class i {}
        return (
          (i.ɵprov = k({
            token: i,
            providedIn: "root",
            factory: () => new Sj(w(le), window),
          })),
          i
        );
      })();
      class Sj {
        constructor(t, e) {
          (this.document = t), (this.window = e), (this.offset = () => [0, 0]);
        }
        setOffset(t) {
          this.offset = Array.isArray(t) ? () => t : t;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(t) {
          this.supportsScrolling() && this.window.scrollTo(t[0], t[1]);
        }
        scrollToAnchor(t) {
          if (!this.supportsScrolling()) return;
          const e = (function Tj(i, t) {
            const e = i.getElementById(t) || i.getElementsByName(t)[0];
            if (e) return e;
            if (
              "function" == typeof i.createTreeWalker &&
              i.body &&
              (i.body.createShadowRoot || i.body.attachShadow)
            ) {
              const n = i.createTreeWalker(i.body, NodeFilter.SHOW_ELEMENT);
              let r = n.currentNode;
              for (; r; ) {
                const o = r.shadowRoot;
                if (o) {
                  const s =
                    o.getElementById(t) || o.querySelector(`[name="${t}"]`);
                  if (s) return s;
                }
                r = n.nextNode();
              }
            }
            return null;
          })(this.document, t);
          e && (this.scrollToElement(e), e.focus());
        }
        setHistoryScrollRestoration(t) {
          if (this.supportScrollRestoration()) {
            const e = this.window.history;
            e && e.scrollRestoration && (e.scrollRestoration = t);
          }
        }
        scrollToElement(t) {
          const e = t.getBoundingClientRect(),
            n = e.left + this.window.pageXOffset,
            r = e.top + this.window.pageYOffset,
            o = this.offset();
          this.window.scrollTo(n - o[0], r - o[1]);
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const t =
              MD(this.window.history) ||
              MD(Object.getPrototypeOf(this.window.history));
            return !(!t || (!t.writable && !t.set));
          } catch {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      function MD(i) {
        return Object.getOwnPropertyDescriptor(i, "scrollRestoration");
      }
      class SD {}
      class tH extends eV {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class Dp extends tH {
        static makeCurrent() {
          !(function JB(i) {
            rp || (rp = i);
          })(new Dp());
        }
        onAndCancel(t, e, n) {
          return (
            t.addEventListener(e, n, !1),
            () => {
              t.removeEventListener(e, n, !1);
            }
          );
        }
        dispatchEvent(t, e) {
          t.dispatchEvent(e);
        }
        remove(t) {
          t.parentNode && t.parentNode.removeChild(t);
        }
        createElement(t, e) {
          return (e = e || this.getDefaultDocument()).createElement(t);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(t) {
          return t.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(t) {
          return t instanceof DocumentFragment;
        }
        getGlobalEventTarget(t, e) {
          return "window" === e
            ? window
            : "document" === e
            ? t
            : "body" === e
            ? t.body
            : null;
        }
        getBaseHref(t) {
          const e = (function iH() {
            return (
              (Oa = Oa || document.querySelector("base")),
              Oa ? Oa.getAttribute("href") : null
            );
          })();
          return null == e
            ? null
            : (function nH(i) {
                (pd = pd || document.createElement("a")),
                  pd.setAttribute("href", i);
                const t = pd.pathname;
                return "/" === t.charAt(0) ? t : `/${t}`;
              })(e);
        }
        resetBaseElement() {
          Oa = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(t) {
          return gD(document.cookie, t);
        }
      }
      let pd,
        Oa = null;
      const RD = new E("TRANSITION_ID"),
        oH = [
          {
            provide: Kc,
            useFactory: function rH(i, t, e) {
              return () => {
                e.get(Xc).donePromise.then(() => {
                  const n = mn(),
                    r = t.querySelectorAll(`style[ng-transition="${i}"]`);
                  for (let o = 0; o < r.length; o++) n.remove(r[o]);
                });
              };
            },
            deps: [RD, le, vt],
            multi: !0,
          },
        ];
      let aH = (() => {
        class i {
          build() {
            return new XMLHttpRequest();
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      const gd = new E("EventManagerPlugins");
      let _d = (() => {
        class i {
          constructor(e, n) {
            (this._zone = n),
              (this._eventNameToPlugin = new Map()),
              e.forEach((r) => (r.manager = this)),
              (this._plugins = e.slice().reverse());
          }
          addEventListener(e, n, r) {
            return this._findPluginFor(n).addEventListener(e, n, r);
          }
          addGlobalEventListener(e, n, r) {
            return this._findPluginFor(n).addGlobalEventListener(e, n, r);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(e) {
            const n = this._eventNameToPlugin.get(e);
            if (n) return n;
            const r = this._plugins;
            for (let o = 0; o < r.length; o++) {
              const s = r[o];
              if (s.supports(e)) return this._eventNameToPlugin.set(e, s), s;
            }
            throw new Error(`No event manager plugin found for event ${e}`);
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(gd), w(Z));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      class OD {
        constructor(t) {
          this._doc = t;
        }
        addGlobalEventListener(t, e, n) {
          const r = mn().getGlobalEventTarget(this._doc, t);
          if (!r)
            throw new Error(`Unsupported event target ${r} for event ${e}`);
          return this.addEventListener(r, e, n);
        }
      }
      let FD = (() => {
          class i {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(e) {
              const n = new Set();
              e.forEach((r) => {
                this._stylesSet.has(r) || (this._stylesSet.add(r), n.add(r));
              }),
                this.onStylesAdded(n);
            }
            onStylesAdded(e) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac })),
            i
          );
        })(),
        Fa = (() => {
          class i extends FD {
            constructor(e) {
              super(),
                (this._doc = e),
                (this._hostNodes = new Map()),
                this._hostNodes.set(e.head, []);
            }
            _addStylesToHost(e, n, r) {
              e.forEach((o) => {
                const s = this._doc.createElement("style");
                (s.textContent = o), r.push(n.appendChild(s));
              });
            }
            addHost(e) {
              const n = [];
              this._addStylesToHost(this._stylesSet, e, n),
                this._hostNodes.set(e, n);
            }
            removeHost(e) {
              const n = this._hostNodes.get(e);
              n && n.forEach(PD), this._hostNodes.delete(e);
            }
            onStylesAdded(e) {
              this._hostNodes.forEach((n, r) => {
                this._addStylesToHost(e, r, n);
              });
            }
            ngOnDestroy() {
              this._hostNodes.forEach((e) => e.forEach(PD));
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(le));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac })),
            i
          );
        })();
      function PD(i) {
        mn().remove(i);
      }
      const Ep = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
          math: "http://www.w3.org/1998/MathML/",
        },
        Mp = /%COMP%/g;
      function Sp(i, t) {
        return t.flat(100).map((e) => e.replace(Mp, i));
      }
      function BD(i) {
        return (t) => {
          if ("__ngUnwrap__" === t) return i;
          !1 === i(t) && (t.preventDefault(), (t.returnValue = !1));
        };
      }
      let bd = (() => {
        class i {
          constructor(e, n, r) {
            (this.eventManager = e),
              (this.sharedStylesHost = n),
              (this.appId = r),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new Tp(e));
          }
          createRenderer(e, n) {
            if (!e || !n) return this.defaultRenderer;
            switch (n.encapsulation) {
              case Vi.Emulated: {
                let r = this.rendererByCompId.get(n.id);
                return (
                  r ||
                    ((r = new fH(
                      this.eventManager,
                      this.sharedStylesHost,
                      n,
                      this.appId
                    )),
                    this.rendererByCompId.set(n.id, r)),
                  r.applyToHost(e),
                  r
                );
              }
              case Vi.ShadowDom:
                return new mH(this.eventManager, this.sharedStylesHost, e, n);
              default:
                if (!this.rendererByCompId.has(n.id)) {
                  const r = Sp(n.id, n.styles);
                  this.sharedStylesHost.addStyles(r),
                    this.rendererByCompId.set(n.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(_d), w(Fa), w(Ta));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      class Tp {
        constructor(t) {
          (this.eventManager = t),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(t, e) {
          return e
            ? document.createElementNS(Ep[e] || e, t)
            : document.createElement(t);
        }
        createComment(t) {
          return document.createComment(t);
        }
        createText(t) {
          return document.createTextNode(t);
        }
        appendChild(t, e) {
          (jD(t) ? t.content : t).appendChild(e);
        }
        insertBefore(t, e, n) {
          t && (jD(t) ? t.content : t).insertBefore(e, n);
        }
        removeChild(t, e) {
          t && t.removeChild(e);
        }
        selectRootElement(t, e) {
          let n = "string" == typeof t ? document.querySelector(t) : t;
          if (!n)
            throw new Error(`The selector "${t}" did not match any elements`);
          return e || (n.textContent = ""), n;
        }
        parentNode(t) {
          return t.parentNode;
        }
        nextSibling(t) {
          return t.nextSibling;
        }
        setAttribute(t, e, n, r) {
          if (r) {
            e = r + ":" + e;
            const o = Ep[r];
            o ? t.setAttributeNS(o, e, n) : t.setAttribute(e, n);
          } else t.setAttribute(e, n);
        }
        removeAttribute(t, e, n) {
          if (n) {
            const r = Ep[n];
            r ? t.removeAttributeNS(r, e) : t.removeAttribute(`${n}:${e}`);
          } else t.removeAttribute(e);
        }
        addClass(t, e) {
          t.classList.add(e);
        }
        removeClass(t, e) {
          t.classList.remove(e);
        }
        setStyle(t, e, n, r) {
          r & (ni.DashCase | ni.Important)
            ? t.style.setProperty(e, n, r & ni.Important ? "important" : "")
            : (t.style[e] = n);
        }
        removeStyle(t, e, n) {
          n & ni.DashCase ? t.style.removeProperty(e) : (t.style[e] = "");
        }
        setProperty(t, e, n) {
          t[e] = n;
        }
        setValue(t, e) {
          t.nodeValue = e;
        }
        listen(t, e, n) {
          return "string" == typeof t
            ? this.eventManager.addGlobalEventListener(t, e, BD(n))
            : this.eventManager.addEventListener(t, e, BD(n));
        }
      }
      function jD(i) {
        return "TEMPLATE" === i.tagName && void 0 !== i.content;
      }
      class fH extends Tp {
        constructor(t, e, n, r) {
          super(t), (this.component = n);
          const o = Sp(r + "-" + n.id, n.styles);
          e.addStyles(o),
            (this.contentAttr = (function dH(i) {
              return "_ngcontent-%COMP%".replace(Mp, i);
            })(r + "-" + n.id)),
            (this.hostAttr = (function uH(i) {
              return "_nghost-%COMP%".replace(Mp, i);
            })(r + "-" + n.id));
        }
        applyToHost(t) {
          super.setAttribute(t, this.hostAttr, "");
        }
        createElement(t, e) {
          const n = super.createElement(t, e);
          return super.setAttribute(n, this.contentAttr, ""), n;
        }
      }
      class mH extends Tp {
        constructor(t, e, n, r) {
          super(t),
            (this.sharedStylesHost = e),
            (this.hostEl = n),
            (this.shadowRoot = n.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const o = Sp(r.id, r.styles);
          for (let s = 0; s < o.length; s++) {
            const a = document.createElement("style");
            (a.textContent = o[s]), this.shadowRoot.appendChild(a);
          }
        }
        nodeOrShadowRoot(t) {
          return t === this.hostEl ? this.shadowRoot : t;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(t, e) {
          return super.appendChild(this.nodeOrShadowRoot(t), e);
        }
        insertBefore(t, e, n) {
          return super.insertBefore(this.nodeOrShadowRoot(t), e, n);
        }
        removeChild(t, e) {
          return super.removeChild(this.nodeOrShadowRoot(t), e);
        }
        parentNode(t) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(t))
          );
        }
      }
      let pH = (() => {
        class i extends OD {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return !0;
          }
          addEventListener(e, n, r) {
            return (
              e.addEventListener(n, r, !1),
              () => this.removeEventListener(e, n, r)
            );
          }
          removeEventListener(e, n, r) {
            return e.removeEventListener(n, r);
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(le));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      const HD = ["alt", "control", "meta", "shift"],
        gH = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        _H = {
          alt: (i) => i.altKey,
          control: (i) => i.ctrlKey,
          meta: (i) => i.metaKey,
          shift: (i) => i.shiftKey,
        };
      let bH = (() => {
        class i extends OD {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return null != i.parseEventName(e);
          }
          addEventListener(e, n, r) {
            const o = i.parseEventName(n),
              s = i.eventCallback(o.fullKey, r, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => mn().onAndCancel(e, o.domEventName, s));
          }
          static parseEventName(e) {
            const n = e.toLowerCase().split("."),
              r = n.shift();
            if (0 === n.length || ("keydown" !== r && "keyup" !== r))
              return null;
            const o = i._normalizeKey(n.pop());
            let s = "",
              a = n.indexOf("code");
            if (
              (a > -1 && (n.splice(a, 1), (s = "code.")),
              HD.forEach((c) => {
                const d = n.indexOf(c);
                d > -1 && (n.splice(d, 1), (s += c + "."));
              }),
              (s += o),
              0 != n.length || 0 === o.length)
            )
              return null;
            const l = {};
            return (l.domEventName = r), (l.fullKey = s), l;
          }
          static matchEventFullKeyCode(e, n) {
            let r = gH[e.key] || e.key,
              o = "";
            return (
              n.indexOf("code.") > -1 && ((r = e.code), (o = "code.")),
              !(null == r || !r) &&
                ((r = r.toLowerCase()),
                " " === r ? (r = "space") : "." === r && (r = "dot"),
                HD.forEach((s) => {
                  s !== r && (0, _H[s])(e) && (o += s + ".");
                }),
                (o += r),
                o === n)
            );
          }
          static eventCallback(e, n, r) {
            return (o) => {
              i.matchEventFullKeyCode(o, e) && r.runGuarded(() => n(o));
            };
          }
          static _normalizeKey(e) {
            return "esc" === e ? "escape" : e;
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(le));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      const UD = [
          { provide: Zc, useValue: ED },
          {
            provide: TC,
            useValue: function vH() {
              Dp.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: le,
            useFactory: function wH() {
              return (
                (function q1(i) {
                  Ff = i;
                })(document),
                document
              );
            },
            deps: [],
          },
        ],
        xH = VC(KB, "browser", UD),
        $D = new E(""),
        GD = [
          {
            provide: Jc,
            useClass: class sH {
              addToWindow(t) {
                (je.getAngularTestability = (n, r = !0) => {
                  const o = t.findTestabilityInTree(n, r);
                  if (null == o)
                    throw new Error("Could not find testability for element.");
                  return o;
                }),
                  (je.getAllAngularTestabilities = () =>
                    t.getAllTestabilities()),
                  (je.getAllAngularRootElements = () => t.getAllRootElements()),
                  je.frameworkStabilizers || (je.frameworkStabilizers = []),
                  je.frameworkStabilizers.push((n) => {
                    const r = je.getAllAngularTestabilities();
                    let o = r.length,
                      s = !1;
                    const a = function (l) {
                      (s = s || l), o--, 0 == o && n(s);
                    };
                    r.forEach(function (l) {
                      l.whenStable(a);
                    });
                  });
              }
              findTestabilityInTree(t, e, n) {
                return null == e
                  ? null
                  : t.getTestability(e) ??
                      (n
                        ? mn().isShadowRoot(e)
                          ? this.findTestabilityInTree(t, e.host, !0)
                          : this.findTestabilityInTree(t, e.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: PC, useClass: Ym, deps: [Z, Km, Jc] },
          { provide: Ym, useClass: Ym, deps: [Z, Km, Jc] },
        ],
        qD = [
          { provide: zf, useValue: "root" },
          {
            provide: An,
            useFactory: function yH() {
              return new An();
            },
            deps: [],
          },
          { provide: gd, useClass: pH, multi: !0, deps: [le, Z, Zc] },
          { provide: gd, useClass: bH, multi: !0, deps: [le] },
          { provide: bd, useClass: bd, deps: [_d, Fa, Ta] },
          { provide: da, useExisting: bd },
          { provide: FD, useExisting: Fa },
          { provide: Fa, useClass: Fa, deps: [le] },
          { provide: _d, useClass: _d, deps: [gd, Z] },
          { provide: SD, useClass: aH, deps: [] },
          [],
        ];
      let WD = (() => {
          class i {
            constructor(e) {}
            static withServerTransition(e) {
              return {
                ngModule: i,
                providers: [
                  { provide: Ta, useValue: e.appId },
                  { provide: RD, useExisting: Ta },
                  oH,
                ],
              };
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w($D, 12));
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ providers: [...qD, ...GD], imports: [gi, XB] })),
            i
          );
        })(),
        QD = (() => {
          class i {
            constructor(e) {
              this._doc = e;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(e) {
              this._doc.title = e || "";
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(le));
            }),
            (i.ɵprov = k({
              token: i,
              factory: function (e) {
                let n = null;
                return (
                  (n = e
                    ? new e()
                    : (function DH() {
                        return new QD(w(le));
                      })()),
                  n
                );
              },
              providedIn: "root",
            })),
            i
          );
        })();
      typeof window < "u" && window;
      let Ap = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵprov = k({
              token: i,
              factory: function (e) {
                let n = null;
                return (n = e ? new (e || i)() : w(XD)), n;
              },
              providedIn: "root",
            })),
            i
          );
        })(),
        XD = (() => {
          class i extends Ap {
            constructor(e) {
              super(), (this._doc = e);
            }
            sanitize(e, n) {
              if (null == n) return null;
              switch (e) {
                case xe.NONE:
                  return n;
                case xe.HTML:
                  return on(n, "HTML")
                    ? fi(n)
                    : g0(this._doc, String(n)).toString();
                case xe.STYLE:
                  return on(n, "Style") ? fi(n) : n;
                case xe.SCRIPT:
                  if (on(n, "Script")) return fi(n);
                  throw new Error("unsafe value used in a script context");
                case xe.URL:
                  return on(n, "URL") ? fi(n) : Cc(String(n));
                case xe.RESOURCE_URL:
                  if (on(n, "ResourceURL")) return fi(n);
                  throw new Error(
                    `unsafe value used in a resource URL context (see ${$l})`
                  );
                default:
                  throw new Error(
                    `Unexpected SecurityContext ${e} (see ${$l})`
                  );
              }
            }
            bypassSecurityTrustHtml(e) {
              return (function J1(i) {
                return new W1(i);
              })(e);
            }
            bypassSecurityTrustStyle(e) {
              return (function eF(i) {
                return new Q1(i);
              })(e);
            }
            bypassSecurityTrustScript(e) {
              return (function tF(i) {
                return new Y1(i);
              })(e);
            }
            bypassSecurityTrustUrl(e) {
              return (function iF(i) {
                return new K1(i);
              })(e);
            }
            bypassSecurityTrustResourceUrl(e) {
              return (function nF(i) {
                return new X1(i);
              })(e);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(le));
            }),
            (i.ɵprov = k({
              token: i,
              factory: function (e) {
                let n = null;
                return (
                  (n = e
                    ? new e()
                    : (function AH(i) {
                        return new XD(i.get(le));
                      })(w(vt))),
                  n
                );
              },
              providedIn: "root",
            })),
            i
          );
        })();
      class ZD {}
      class RH {}
      const jn = "*";
      function ns(i, t) {
        return { type: 7, name: i, definitions: t, options: {} };
      }
      function pn(i, t = null) {
        return { type: 4, styles: t, timings: i };
      }
      function JD(i, t = null) {
        return { type: 2, steps: i, options: t };
      }
      function It(i) {
        return { type: 6, styles: i, offset: null };
      }
      function Hn(i, t, e) {
        return { type: 0, name: i, styles: t, options: e };
      }
      function Ki(i, t, e = null) {
        return { type: 1, expr: i, animation: t, options: e };
      }
      function eE(i) {
        Promise.resolve().then(i);
      }
      class Pa {
        constructor(t = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = t + e);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        onStart(t) {
          this._originalOnStartFns.push(t), this._onStartFns.push(t);
        }
        onDone(t) {
          this._originalOnDoneFns.push(t), this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          eE(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(t) {
          this._position = this.totalTime ? t * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((n) => n()), (e.length = 0);
        }
      }
      class tE {
        constructor(t) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = t);
          let e = 0,
            n = 0,
            r = 0;
          const o = this.players.length;
          0 == o
            ? eE(() => this._onFinish())
            : this.players.forEach((s) => {
                s.onDone(() => {
                  ++e == o && this._onFinish();
                }),
                  s.onDestroy(() => {
                    ++n == o && this._onDestroy();
                  }),
                  s.onStart(() => {
                    ++r == o && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (s, a) => Math.max(s, a.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((t) => t.init());
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((t) => t()),
            (this._onStartFns = []));
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((t) => t.play());
        }
        pause() {
          this.players.forEach((t) => t.pause());
        }
        restart() {
          this.players.forEach((t) => t.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((t) => t.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((t) => t.destroy()),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((t) => t.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(t) {
          const e = t * this.totalTime;
          this.players.forEach((n) => {
            const r = n.totalTime ? Math.min(1, e / n.totalTime) : 1;
            n.setPosition(r);
          });
        }
        getPosition() {
          const t = this.players.reduce(
            (e, n) => (null === e || n.totalTime > e.totalTime ? n : e),
            null
          );
          return null != t ? t.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((t) => {
            t.beforeDestroy && t.beforeDestroy();
          });
        }
        triggerCallback(t) {
          const e = "start" == t ? this._onStartFns : this._onDoneFns;
          e.forEach((n) => n()), (e.length = 0);
        }
      }
      function iE(i) {
        return new D(3e3, !1);
      }
      function pz() {
        return typeof window < "u" && typeof window.document < "u";
      }
      function Op() {
        return (
          typeof process < "u" &&
          "[object process]" === {}.toString.call(process)
        );
      }
      function or(i) {
        switch (i.length) {
          case 0:
            return new Pa();
          case 1:
            return i[0];
          default:
            return new tE(i);
        }
      }
      function nE(i, t, e, n, r = new Map(), o = new Map()) {
        const s = [],
          a = [];
        let l = -1,
          c = null;
        if (
          (n.forEach((d) => {
            const u = d.get("offset"),
              h = u == l,
              f = (h && c) || new Map();
            d.forEach((m, p) => {
              let g = p,
                b = m;
              if ("offset" !== p)
                switch (((g = t.normalizePropertyName(g, s)), b)) {
                  case "!":
                    b = r.get(p);
                    break;
                  case jn:
                    b = o.get(p);
                    break;
                  default:
                    b = t.normalizeStyleValue(p, g, b, s);
                }
              f.set(g, b);
            }),
              h || a.push(f),
              (c = f),
              (l = u);
          }),
          s.length)
        )
          throw (function nz(i) {
            return new D(3502, !1);
          })();
        return a;
      }
      function Fp(i, t, e, n) {
        switch (t) {
          case "start":
            i.onStart(() => n(e && Pp(e, "start", i)));
            break;
          case "done":
            i.onDone(() => n(e && Pp(e, "done", i)));
            break;
          case "destroy":
            i.onDestroy(() => n(e && Pp(e, "destroy", i)));
        }
      }
      function Pp(i, t, e) {
        const o = Np(
            i.element,
            i.triggerName,
            i.fromState,
            i.toState,
            t || i.phaseName,
            e.totalTime ?? i.totalTime,
            !!e.disabled
          ),
          s = i._data;
        return null != s && (o._data = s), o;
      }
      function Np(i, t, e, n, r = "", o = 0, s) {
        return {
          element: i,
          triggerName: t,
          fromState: e,
          toState: n,
          phaseName: r,
          totalTime: o,
          disabled: !!s,
        };
      }
      function _i(i, t, e) {
        let n = i.get(t);
        return n || i.set(t, (n = e)), n;
      }
      function rE(i) {
        const t = i.indexOf(":");
        return [i.substring(1, t), i.slice(t + 1)];
      }
      let Lp = (i, t) => !1,
        oE = (i, t, e) => [],
        sE = null;
      function Bp(i) {
        const t = i.parentNode || i.host;
        return t === sE ? null : t;
      }
      (Op() || typeof Element < "u") &&
        (pz()
          ? ((sE = (() => document.documentElement)()),
            (Lp = (i, t) => {
              for (; t; ) {
                if (t === i) return !0;
                t = Bp(t);
              }
              return !1;
            }))
          : (Lp = (i, t) => i.contains(t)),
        (oE = (i, t, e) => {
          if (e) return Array.from(i.querySelectorAll(t));
          const n = i.querySelector(t);
          return n ? [n] : [];
        }));
      let $r = null,
        aE = !1;
      const lE = Lp,
        cE = oE;
      let dE = (() => {
          class i {
            validateStyleProperty(e) {
              return (function _z(i) {
                $r ||
                  (($r =
                    (function bz() {
                      return typeof document < "u" ? document.body : null;
                    })() || {}),
                  (aE = !!$r.style && "WebkitAppearance" in $r.style));
                let t = !0;
                return (
                  $r.style &&
                    !(function gz(i) {
                      return "ebkit" == i.substring(1, 6);
                    })(i) &&
                    ((t = i in $r.style),
                    !t &&
                      aE &&
                      (t =
                        "Webkit" + i.charAt(0).toUpperCase() + i.slice(1) in
                        $r.style)),
                  t
                );
              })(e);
            }
            matchesElement(e, n) {
              return !1;
            }
            containsElement(e, n) {
              return lE(e, n);
            }
            getParentElement(e) {
              return Bp(e);
            }
            query(e, n, r) {
              return cE(e, n, r);
            }
            computeStyle(e, n, r) {
              return r || "";
            }
            animate(e, n, r, o, s, a = [], l) {
              return new Pa(r, o);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac })),
            i
          );
        })(),
        Vp = (() => {
          class i {}
          return (i.NOOP = new dE()), i;
        })();
      const jp = "ng-enter",
        vd = "ng-leave",
        yd = "ng-trigger",
        wd = ".ng-trigger",
        hE = "ng-animating",
        Hp = ".ng-animating";
      function zn(i) {
        if ("number" == typeof i) return i;
        const t = i.match(/^(-?[\.\d]+)(m?s)/);
        return !t || t.length < 2 ? 0 : zp(parseFloat(t[1]), t[2]);
      }
      function zp(i, t) {
        return "s" === t ? 1e3 * i : i;
      }
      function xd(i, t, e) {
        return i.hasOwnProperty("duration")
          ? i
          : (function wz(i, t, e) {
              let r,
                o = 0,
                s = "";
              if ("string" == typeof i) {
                const a = i.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === a)
                  return t.push(iE()), { duration: 0, delay: 0, easing: "" };
                r = zp(parseFloat(a[1]), a[2]);
                const l = a[3];
                null != l && (o = zp(parseFloat(l), a[4]));
                const c = a[5];
                c && (s = c);
              } else r = i;
              if (!e) {
                let a = !1,
                  l = t.length;
                r < 0 &&
                  (t.push(
                    (function PH() {
                      return new D(3100, !1);
                    })()
                  ),
                  (a = !0)),
                  o < 0 &&
                    (t.push(
                      (function NH() {
                        return new D(3101, !1);
                      })()
                    ),
                    (a = !0)),
                  a && t.splice(l, 0, iE());
              }
              return { duration: r, delay: o, easing: s };
            })(i, t, e);
      }
      function Na(i, t = {}) {
        return (
          Object.keys(i).forEach((e) => {
            t[e] = i[e];
          }),
          t
        );
      }
      function fE(i) {
        const t = new Map();
        return (
          Object.keys(i).forEach((e) => {
            t.set(e, i[e]);
          }),
          t
        );
      }
      function sr(i, t = new Map(), e) {
        if (e) for (let [n, r] of e) t.set(n, r);
        for (let [n, r] of i) t.set(n, r);
        return t;
      }
      function pE(i, t, e) {
        return e ? t + ":" + e + ";" : "";
      }
      function gE(i) {
        let t = "";
        for (let e = 0; e < i.style.length; e++) {
          const n = i.style.item(e);
          t += pE(0, n, i.style.getPropertyValue(n));
        }
        for (const e in i.style)
          i.style.hasOwnProperty(e) &&
            !e.startsWith("_") &&
            (t += pE(0, Ez(e), i.style[e]));
        i.setAttribute("style", t);
      }
      function gn(i, t, e) {
        i.style &&
          (t.forEach((n, r) => {
            const o = $p(r);
            e && !e.has(r) && e.set(r, i.style[o]), (i.style[o] = n);
          }),
          Op() && gE(i));
      }
      function Gr(i, t) {
        i.style &&
          (t.forEach((e, n) => {
            const r = $p(n);
            i.style[r] = "";
          }),
          Op() && gE(i));
      }
      function La(i) {
        return Array.isArray(i) ? (1 == i.length ? i[0] : JD(i)) : i;
      }
      const Up = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function _E(i) {
        let t = [];
        if ("string" == typeof i) {
          let e;
          for (; (e = Up.exec(i)); ) t.push(e[1]);
          Up.lastIndex = 0;
        }
        return t;
      }
      function Ba(i, t, e) {
        const n = i.toString(),
          r = n.replace(Up, (o, s) => {
            let a = t[s];
            return (
              null == a &&
                (e.push(
                  (function BH(i) {
                    return new D(3003, !1);
                  })()
                ),
                (a = "")),
              a.toString()
            );
          });
        return r == n ? i : r;
      }
      function Cd(i) {
        const t = [];
        let e = i.next();
        for (; !e.done; ) t.push(e.value), (e = i.next());
        return t;
      }
      const Dz = /-+([a-z0-9])/g;
      function $p(i) {
        return i.replace(Dz, (...t) => t[1].toUpperCase());
      }
      function Ez(i) {
        return i.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
      }
      function bi(i, t, e) {
        switch (t.type) {
          case 7:
            return i.visitTrigger(t, e);
          case 0:
            return i.visitState(t, e);
          case 1:
            return i.visitTransition(t, e);
          case 2:
            return i.visitSequence(t, e);
          case 3:
            return i.visitGroup(t, e);
          case 4:
            return i.visitAnimate(t, e);
          case 5:
            return i.visitKeyframes(t, e);
          case 6:
            return i.visitStyle(t, e);
          case 8:
            return i.visitReference(t, e);
          case 9:
            return i.visitAnimateChild(t, e);
          case 10:
            return i.visitAnimateRef(t, e);
          case 11:
            return i.visitQuery(t, e);
          case 12:
            return i.visitStagger(t, e);
          default:
            throw (function VH(i) {
              return new D(3004, !1);
            })();
        }
      }
      function bE(i, t) {
        return window.getComputedStyle(i)[t];
      }
      function Az(i, t) {
        const e = [];
        return (
          "string" == typeof i
            ? i.split(/\s*,\s*/).forEach((n) =>
                (function Rz(i, t, e) {
                  if (":" == i[0]) {
                    const l = (function Oz(i, t) {
                      switch (i) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (e, n) => parseFloat(n) > parseFloat(e);
                        case ":decrement":
                          return (e, n) => parseFloat(n) < parseFloat(e);
                        default:
                          return (
                            t.push(
                              (function JH(i) {
                                return new D(3016, !1);
                              })()
                            ),
                            "* => *"
                          );
                      }
                    })(i, e);
                    if ("function" == typeof l) return void t.push(l);
                    i = l;
                  }
                  const n = i.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == n || n.length < 4)
                    return (
                      e.push(
                        (function ZH(i) {
                          return new D(3015, !1);
                        })()
                      ),
                      t
                    );
                  const r = n[1],
                    o = n[2],
                    s = n[3];
                  t.push(vE(r, s));
                  "<" == o[0] && !("*" == r && "*" == s) && t.push(vE(s, r));
                })(n, e, t)
              )
            : e.push(i),
          e
        );
      }
      const Sd = new Set(["true", "1"]),
        Td = new Set(["false", "0"]);
      function vE(i, t) {
        const e = Sd.has(i) || Td.has(i),
          n = Sd.has(t) || Td.has(t);
        return (r, o) => {
          let s = "*" == i || i == r,
            a = "*" == t || t == o;
          return (
            !s && e && "boolean" == typeof r && (s = r ? Sd.has(i) : Td.has(i)),
            !a && n && "boolean" == typeof o && (a = o ? Sd.has(t) : Td.has(t)),
            s && a
          );
        };
      }
      const Fz = new RegExp("s*:selfs*,?", "g");
      function Gp(i, t, e, n) {
        return new Pz(i).build(t, e, n);
      }
      class Pz {
        constructor(t) {
          this._driver = t;
        }
        build(t, e, n) {
          const r = new Bz(e);
          return this._resetContextStyleTimingState(r), bi(this, La(t), r);
        }
        _resetContextStyleTimingState(t) {
          (t.currentQuerySelector = ""),
            (t.collectedStyles = new Map()),
            t.collectedStyles.set("", new Map()),
            (t.currentTime = 0);
        }
        visitTrigger(t, e) {
          let n = (e.queryCount = 0),
            r = (e.depCount = 0);
          const o = [],
            s = [];
          return (
            "@" == t.name.charAt(0) &&
              e.errors.push(
                (function HH() {
                  return new D(3006, !1);
                })()
              ),
            t.definitions.forEach((a) => {
              if ((this._resetContextStyleTimingState(e), 0 == a.type)) {
                const l = a,
                  c = l.name;
                c
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((d) => {
                    (l.name = d), o.push(this.visitState(l, e));
                  }),
                  (l.name = c);
              } else if (1 == a.type) {
                const l = this.visitTransition(a, e);
                (n += l.queryCount), (r += l.depCount), s.push(l);
              } else
                e.errors.push(
                  (function zH() {
                    return new D(3007, !1);
                  })()
                );
            }),
            {
              type: 7,
              name: t.name,
              states: o,
              transitions: s,
              queryCount: n,
              depCount: r,
              options: null,
            }
          );
        }
        visitState(t, e) {
          const n = this.visitStyle(t.styles, e),
            r = (t.options && t.options.params) || null;
          if (n.containsDynamicStyles) {
            const o = new Set(),
              s = r || {};
            n.styles.forEach((a) => {
              a instanceof Map &&
                a.forEach((l) => {
                  _E(l).forEach((c) => {
                    s.hasOwnProperty(c) || o.add(c);
                  });
                });
            }),
              o.size &&
                (Cd(o.values()),
                e.errors.push(
                  (function UH(i, t) {
                    return new D(3008, !1);
                  })()
                ));
          }
          return {
            type: 0,
            name: t.name,
            style: n,
            options: r ? { params: r } : null,
          };
        }
        visitTransition(t, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const n = bi(this, La(t.animation), e);
          return {
            type: 1,
            matchers: Az(t.expr, e.errors),
            animation: n,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: qr(t.options),
          };
        }
        visitSequence(t, e) {
          return {
            type: 2,
            steps: t.steps.map((n) => bi(this, n, e)),
            options: qr(t.options),
          };
        }
        visitGroup(t, e) {
          const n = e.currentTime;
          let r = 0;
          const o = t.steps.map((s) => {
            e.currentTime = n;
            const a = bi(this, s, e);
            return (r = Math.max(r, e.currentTime)), a;
          });
          return (
            (e.currentTime = r), { type: 3, steps: o, options: qr(t.options) }
          );
        }
        visitAnimate(t, e) {
          const n = (function jz(i, t) {
            if (i.hasOwnProperty("duration")) return i;
            if ("number" == typeof i) return qp(xd(i, t).duration, 0, "");
            const e = i;
            if (
              e
                .split(/\s+/)
                .some((o) => "{" == o.charAt(0) && "{" == o.charAt(1))
            ) {
              const o = qp(0, 0, "");
              return (o.dynamic = !0), (o.strValue = e), o;
            }
            const r = xd(e, t);
            return qp(r.duration, r.delay, r.easing);
          })(t.timings, e.errors);
          e.currentAnimateTimings = n;
          let r,
            o = t.styles ? t.styles : It({});
          if (5 == o.type) r = this.visitKeyframes(o, e);
          else {
            let s = t.styles,
              a = !1;
            if (!s) {
              a = !0;
              const c = {};
              n.easing && (c.easing = n.easing), (s = It(c));
            }
            e.currentTime += n.duration + n.delay;
            const l = this.visitStyle(s, e);
            (l.isEmptyStep = a), (r = l);
          }
          return (
            (e.currentAnimateTimings = null),
            { type: 4, timings: n, style: r, options: null }
          );
        }
        visitStyle(t, e) {
          const n = this._makeStyleAst(t, e);
          return this._validateStyleAst(n, e), n;
        }
        _makeStyleAst(t, e) {
          const n = [],
            r = Array.isArray(t.styles) ? t.styles : [t.styles];
          for (let a of r)
            "string" == typeof a
              ? a === jn
                ? n.push(a)
                : e.errors.push(new D(3002, !1))
              : n.push(fE(a));
          let o = !1,
            s = null;
          return (
            n.forEach((a) => {
              if (
                a instanceof Map &&
                (a.has("easing") && ((s = a.get("easing")), a.delete("easing")),
                !o)
              )
                for (let l of a.values())
                  if (l.toString().indexOf("{{") >= 0) {
                    o = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: n,
              easing: s,
              offset: t.offset,
              containsDynamicStyles: o,
              options: null,
            }
          );
        }
        _validateStyleAst(t, e) {
          const n = e.currentAnimateTimings;
          let r = e.currentTime,
            o = e.currentTime;
          n && o > 0 && (o -= n.duration + n.delay),
            t.styles.forEach((s) => {
              "string" != typeof s &&
                s.forEach((a, l) => {
                  const c = e.collectedStyles.get(e.currentQuerySelector),
                    d = c.get(l);
                  let u = !0;
                  d &&
                    (o != r &&
                      o >= d.startTime &&
                      r <= d.endTime &&
                      (e.errors.push(
                        (function GH(i, t, e, n, r) {
                          return new D(3010, !1);
                        })()
                      ),
                      (u = !1)),
                    (o = d.startTime)),
                    u && c.set(l, { startTime: o, endTime: r }),
                    e.options &&
                      (function Cz(i, t, e) {
                        const n = t.params || {},
                          r = _E(i);
                        r.length &&
                          r.forEach((o) => {
                            n.hasOwnProperty(o) ||
                              e.push(
                                (function LH(i) {
                                  return new D(3001, !1);
                                })()
                              );
                          });
                      })(a, e.options, e.errors);
                });
            });
        }
        visitKeyframes(t, e) {
          const n = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return (
              e.errors.push(
                (function qH() {
                  return new D(3011, !1);
                })()
              ),
              n
            );
          let o = 0;
          const s = [];
          let a = !1,
            l = !1,
            c = 0;
          const d = t.steps.map((b) => {
            const y = this._makeStyleAst(b, e);
            let _ =
                null != y.offset
                  ? y.offset
                  : (function Vz(i) {
                      if ("string" == typeof i) return null;
                      let t = null;
                      if (Array.isArray(i))
                        i.forEach((e) => {
                          if (e instanceof Map && e.has("offset")) {
                            const n = e;
                            (t = parseFloat(n.get("offset"))),
                              n.delete("offset");
                          }
                        });
                      else if (i instanceof Map && i.has("offset")) {
                        const e = i;
                        (t = parseFloat(e.get("offset"))), e.delete("offset");
                      }
                      return t;
                    })(y.styles),
              x = 0;
            return (
              null != _ && (o++, (x = y.offset = _)),
              (l = l || x < 0 || x > 1),
              (a = a || x < c),
              (c = x),
              s.push(x),
              y
            );
          });
          l &&
            e.errors.push(
              (function WH() {
                return new D(3012, !1);
              })()
            ),
            a &&
              e.errors.push(
                (function QH() {
                  return new D(3200, !1);
                })()
              );
          const u = t.steps.length;
          let h = 0;
          o > 0 && o < u
            ? e.errors.push(
                (function YH() {
                  return new D(3202, !1);
                })()
              )
            : 0 == o && (h = 1 / (u - 1));
          const f = u - 1,
            m = e.currentTime,
            p = e.currentAnimateTimings,
            g = p.duration;
          return (
            d.forEach((b, y) => {
              const _ = h > 0 ? (y == f ? 1 : h * y) : s[y],
                x = _ * g;
              (e.currentTime = m + p.delay + x),
                (p.duration = x),
                this._validateStyleAst(b, e),
                (b.offset = _),
                n.styles.push(b);
            }),
            n
          );
        }
        visitReference(t, e) {
          return {
            type: 8,
            animation: bi(this, La(t.animation), e),
            options: qr(t.options),
          };
        }
        visitAnimateChild(t, e) {
          return e.depCount++, { type: 9, options: qr(t.options) };
        }
        visitAnimateRef(t, e) {
          return {
            type: 10,
            animation: this.visitReference(t.animation, e),
            options: qr(t.options),
          };
        }
        visitQuery(t, e) {
          const n = e.currentQuerySelector,
            r = t.options || {};
          e.queryCount++, (e.currentQuery = t);
          const [o, s] = (function Nz(i) {
            const t = !!i.split(/\s*,\s*/).find((e) => ":self" == e);
            return (
              t && (i = i.replace(Fz, "")),
              (i = i
                .replace(/@\*/g, wd)
                .replace(/@\w+/g, (e) => wd + "-" + e.slice(1))
                .replace(/:animating/g, Hp)),
              [i, t]
            );
          })(t.selector);
          (e.currentQuerySelector = n.length ? n + " " + o : o),
            _i(e.collectedStyles, e.currentQuerySelector, new Map());
          const a = bi(this, La(t.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = n),
            {
              type: 11,
              selector: o,
              limit: r.limit || 0,
              optional: !!r.optional,
              includeSelf: s,
              animation: a,
              originalSelector: t.selector,
              options: qr(t.options),
            }
          );
        }
        visitStagger(t, e) {
          e.currentQuery ||
            e.errors.push(
              (function KH() {
                return new D(3013, !1);
              })()
            );
          const n =
            "full" === t.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : xd(t.timings, e.errors, !0);
          return {
            type: 12,
            animation: bi(this, La(t.animation), e),
            timings: n,
            options: null,
          };
        }
      }
      class Bz {
        constructor(t) {
          (this.errors = t),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function qr(i) {
        return (
          i
            ? (i = Na(i)).params &&
              (i.params = (function Lz(i) {
                return i ? Na(i) : null;
              })(i.params))
            : (i = {}),
          i
        );
      }
      function qp(i, t, e) {
        return { duration: i, delay: t, easing: e };
      }
      function Wp(i, t, e, n, r, o, s = null, a = !1) {
        return {
          type: 1,
          element: i,
          keyframes: t,
          preStyleProps: e,
          postStyleProps: n,
          duration: r,
          delay: o,
          totalTime: r + o,
          easing: s,
          subTimeline: a,
        };
      }
      class kd {
        constructor() {
          this._map = new Map();
        }
        get(t) {
          return this._map.get(t) || [];
        }
        append(t, e) {
          let n = this._map.get(t);
          n || this._map.set(t, (n = [])), n.push(...e);
        }
        has(t) {
          return this._map.has(t);
        }
        clear() {
          this._map.clear();
        }
      }
      const Uz = new RegExp(":enter", "g"),
        Gz = new RegExp(":leave", "g");
      function Qp(i, t, e, n, r, o = new Map(), s = new Map(), a, l, c = []) {
        return new qz().buildKeyframes(i, t, e, n, r, o, s, a, l, c);
      }
      class qz {
        buildKeyframes(t, e, n, r, o, s, a, l, c, d = []) {
          c = c || new kd();
          const u = new Yp(t, e, c, r, o, d, []);
          u.options = l;
          const h = l.delay ? zn(l.delay) : 0;
          u.currentTimeline.delayNextStep(h),
            u.currentTimeline.setStyles([s], null, u.errors, l),
            bi(this, n, u);
          const f = u.timelines.filter((m) => m.containsAnimation());
          if (f.length && a.size) {
            let m;
            for (let p = f.length - 1; p >= 0; p--) {
              const g = f[p];
              if (g.element === e) {
                m = g;
                break;
              }
            }
            m &&
              !m.allowOnlyTimelineStyles() &&
              m.setStyles([a], null, u.errors, l);
          }
          return f.length
            ? f.map((m) => m.buildKeyframes())
            : [Wp(e, [], [], [], 0, h, "", !1)];
        }
        visitTrigger(t, e) {}
        visitState(t, e) {}
        visitTransition(t, e) {}
        visitAnimateChild(t, e) {
          const n = e.subInstructions.get(e.element);
          if (n) {
            const r = e.createSubContext(t.options),
              o = e.currentTimeline.currentTime,
              s = this._visitSubInstructions(n, r, r.options);
            o != s && e.transformIntoNewTimeline(s);
          }
          e.previousNode = t;
        }
        visitAnimateRef(t, e) {
          const n = e.createSubContext(t.options);
          n.transformIntoNewTimeline(),
            this._applyAnimationRefDelays(
              [t.options, t.animation.options],
              e,
              n
            ),
            this.visitReference(t.animation, n),
            e.transformIntoNewTimeline(n.currentTimeline.currentTime),
            (e.previousNode = t);
        }
        _applyAnimationRefDelays(t, e, n) {
          for (const r of t) {
            const o = r?.delay;
            if (o) {
              const s =
                "number" == typeof o ? o : zn(Ba(o, r?.params ?? {}, e.errors));
              n.delayNextStep(s);
            }
          }
        }
        _visitSubInstructions(t, e, n) {
          let o = e.currentTimeline.currentTime;
          const s = null != n.duration ? zn(n.duration) : null,
            a = null != n.delay ? zn(n.delay) : null;
          return (
            0 !== s &&
              t.forEach((l) => {
                const c = e.appendInstructionToTimeline(l, s, a);
                o = Math.max(o, c.duration + c.delay);
              }),
            o
          );
        }
        visitReference(t, e) {
          e.updateOptions(t.options, !0),
            bi(this, t.animation, e),
            (e.previousNode = t);
        }
        visitSequence(t, e) {
          const n = e.subContextCount;
          let r = e;
          const o = t.options;
          if (
            o &&
            (o.params || o.delay) &&
            ((r = e.createSubContext(o)),
            r.transformIntoNewTimeline(),
            null != o.delay)
          ) {
            6 == r.previousNode.type &&
              (r.currentTimeline.snapshotCurrentStyles(),
              (r.previousNode = Id));
            const s = zn(o.delay);
            r.delayNextStep(s);
          }
          t.steps.length &&
            (t.steps.forEach((s) => bi(this, s, r)),
            r.currentTimeline.applyStylesToKeyframe(),
            r.subContextCount > n && r.transformIntoNewTimeline()),
            (e.previousNode = t);
        }
        visitGroup(t, e) {
          const n = [];
          let r = e.currentTimeline.currentTime;
          const o = t.options && t.options.delay ? zn(t.options.delay) : 0;
          t.steps.forEach((s) => {
            const a = e.createSubContext(t.options);
            o && a.delayNextStep(o),
              bi(this, s, a),
              (r = Math.max(r, a.currentTimeline.currentTime)),
              n.push(a.currentTimeline);
          }),
            n.forEach((s) => e.currentTimeline.mergeTimelineCollectedStyles(s)),
            e.transformIntoNewTimeline(r),
            (e.previousNode = t);
        }
        _visitTiming(t, e) {
          if (t.dynamic) {
            const n = t.strValue;
            return xd(e.params ? Ba(n, e.params, e.errors) : n, e.errors);
          }
          return { duration: t.duration, delay: t.delay, easing: t.easing };
        }
        visitAnimate(t, e) {
          const n = (e.currentAnimateTimings = this._visitTiming(t.timings, e)),
            r = e.currentTimeline;
          n.delay && (e.incrementTime(n.delay), r.snapshotCurrentStyles());
          const o = t.style;
          5 == o.type
            ? this.visitKeyframes(o, e)
            : (e.incrementTime(n.duration),
              this.visitStyle(o, e),
              r.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = t);
        }
        visitStyle(t, e) {
          const n = e.currentTimeline,
            r = e.currentAnimateTimings;
          !r && n.hasCurrentStyleProperties() && n.forwardFrame();
          const o = (r && r.easing) || t.easing;
          t.isEmptyStep
            ? n.applyEmptyStep(o)
            : n.setStyles(t.styles, o, e.errors, e.options),
            (e.previousNode = t);
        }
        visitKeyframes(t, e) {
          const n = e.currentAnimateTimings,
            r = e.currentTimeline.duration,
            o = n.duration,
            a = e.createSubContext().currentTimeline;
          (a.easing = n.easing),
            t.styles.forEach((l) => {
              a.forwardTime((l.offset || 0) * o),
                a.setStyles(l.styles, l.easing, e.errors, e.options),
                a.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(a),
            e.transformIntoNewTimeline(r + o),
            (e.previousNode = t);
        }
        visitQuery(t, e) {
          const n = e.currentTimeline.currentTime,
            r = t.options || {},
            o = r.delay ? zn(r.delay) : 0;
          o &&
            (6 === e.previousNode.type ||
              (0 == n && e.currentTimeline.hasCurrentStyleProperties())) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = Id));
          let s = n;
          const a = e.invokeQuery(
            t.selector,
            t.originalSelector,
            t.limit,
            t.includeSelf,
            !!r.optional,
            e.errors
          );
          e.currentQueryTotal = a.length;
          let l = null;
          a.forEach((c, d) => {
            e.currentQueryIndex = d;
            const u = e.createSubContext(t.options, c);
            o && u.delayNextStep(o),
              c === e.element && (l = u.currentTimeline),
              bi(this, t.animation, u),
              u.currentTimeline.applyStylesToKeyframe(),
              (s = Math.max(s, u.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(s),
            l &&
              (e.currentTimeline.mergeTimelineCollectedStyles(l),
              e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = t);
        }
        visitStagger(t, e) {
          const n = e.parentContext,
            r = e.currentTimeline,
            o = t.timings,
            s = Math.abs(o.duration),
            a = s * (e.currentQueryTotal - 1);
          let l = s * e.currentQueryIndex;
          switch (o.duration < 0 ? "reverse" : o.easing) {
            case "reverse":
              l = a - l;
              break;
            case "full":
              l = n.currentStaggerTime;
          }
          const d = e.currentTimeline;
          l && d.delayNextStep(l);
          const u = d.currentTime;
          bi(this, t.animation, e),
            (e.previousNode = t),
            (n.currentStaggerTime =
              r.currentTime - u + (r.startTime - n.currentTimeline.startTime));
        }
      }
      const Id = {};
      class Yp {
        constructor(t, e, n, r, o, s, a, l) {
          (this._driver = t),
            (this.element = e),
            (this.subInstructions = n),
            (this._enterClassName = r),
            (this._leaveClassName = o),
            (this.errors = s),
            (this.timelines = a),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = Id),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = l || new Ad(this._driver, e, 0)),
            a.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(t, e) {
          if (!t) return;
          const n = t;
          let r = this.options;
          null != n.duration && (r.duration = zn(n.duration)),
            null != n.delay && (r.delay = zn(n.delay));
          const o = n.params;
          if (o) {
            let s = r.params;
            s || (s = this.options.params = {}),
              Object.keys(o).forEach((a) => {
                (!e || !s.hasOwnProperty(a)) &&
                  (s[a] = Ba(o[a], s, this.errors));
              });
          }
        }
        _copyOptions() {
          const t = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const n = (t.params = {});
              Object.keys(e).forEach((r) => {
                n[r] = e[r];
              });
            }
          }
          return t;
        }
        createSubContext(t = null, e, n) {
          const r = e || this.element,
            o = new Yp(
              this._driver,
              r,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(r, n || 0)
            );
          return (
            (o.previousNode = this.previousNode),
            (o.currentAnimateTimings = this.currentAnimateTimings),
            (o.options = this._copyOptions()),
            o.updateOptions(t),
            (o.currentQueryIndex = this.currentQueryIndex),
            (o.currentQueryTotal = this.currentQueryTotal),
            (o.parentContext = this),
            this.subContextCount++,
            o
          );
        }
        transformIntoNewTimeline(t) {
          return (
            (this.previousNode = Id),
            (this.currentTimeline = this.currentTimeline.fork(this.element, t)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(t, e, n) {
          const r = {
              duration: e ?? t.duration,
              delay: this.currentTimeline.currentTime + (n ?? 0) + t.delay,
              easing: "",
            },
            o = new Wz(
              this._driver,
              t.element,
              t.keyframes,
              t.preStyleProps,
              t.postStyleProps,
              r,
              t.stretchStartingKeyframe
            );
          return this.timelines.push(o), r;
        }
        incrementTime(t) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + t);
        }
        delayNextStep(t) {
          t > 0 && this.currentTimeline.delayNextStep(t);
        }
        invokeQuery(t, e, n, r, o, s) {
          let a = [];
          if ((r && a.push(this.element), t.length > 0)) {
            t = (t = t.replace(Uz, "." + this._enterClassName)).replace(
              Gz,
              "." + this._leaveClassName
            );
            let c = this._driver.query(this.element, t, 1 != n);
            0 !== n &&
              (c = n < 0 ? c.slice(c.length + n, c.length) : c.slice(0, n)),
              a.push(...c);
          }
          return (
            !o &&
              0 == a.length &&
              s.push(
                (function XH(i) {
                  return new D(3014, !1);
                })()
              ),
            a
          );
        }
      }
      class Ad {
        constructor(t, e, n, r) {
          (this._driver = t),
            (this.element = e),
            (this.startTime = n),
            (this._elementTimelineStylesLookup = r),
            (this.duration = 0),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                e,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(t) {
          const e = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || e
            ? (this.forwardTime(this.currentTime + t),
              e && this.snapshotCurrentStyles())
            : (this.startTime += t);
        }
        fork(t, e) {
          return (
            this.applyStylesToKeyframe(),
            new Ad(
              this._driver,
              t,
              e || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(t) {
          this.applyStylesToKeyframe(),
            (this.duration = t),
            this._loadKeyframe();
        }
        _updateStyle(t, e) {
          this._localTimelineStyles.set(t, e),
            this._globalTimelineStyles.set(t, e),
            this._styleSummary.set(t, { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(t) {
          t && this._previousKeyframe.set("easing", t);
          for (let [e, n] of this._globalTimelineStyles)
            this._backFill.set(e, n || jn), this._currentKeyframe.set(e, jn);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(t, e, n, r) {
          e && this._previousKeyframe.set("easing", e);
          const o = (r && r.params) || {},
            s = (function Qz(i, t) {
              const e = new Map();
              let n;
              return (
                i.forEach((r) => {
                  if ("*" === r) {
                    n = n || t.keys();
                    for (let o of n) e.set(o, jn);
                  } else sr(r, e);
                }),
                e
              );
            })(t, this._globalTimelineStyles);
          for (let [a, l] of s) {
            const c = Ba(l, o, n);
            this._pendingStyles.set(a, c),
              this._localTimelineStyles.has(a) ||
                this._backFill.set(a, this._globalTimelineStyles.get(a) ?? jn),
              this._updateStyle(a, c);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((t, e) => {
              this._currentKeyframe.set(e, t);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((t, e) => {
              this._currentKeyframe.has(e) || this._currentKeyframe.set(e, t);
            }));
        }
        snapshotCurrentStyles() {
          for (let [t, e] of this._localTimelineStyles)
            this._pendingStyles.set(t, e), this._updateStyle(t, e);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const t = [];
          for (let e in this._currentKeyframe) t.push(e);
          return t;
        }
        mergeTimelineCollectedStyles(t) {
          t._styleSummary.forEach((e, n) => {
            const r = this._styleSummary.get(n);
            (!r || e.time > r.time) && this._updateStyle(n, e.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const t = new Set(),
            e = new Set(),
            n = 1 === this._keyframes.size && 0 === this.duration;
          let r = [];
          this._keyframes.forEach((a, l) => {
            const c = sr(a, new Map(), this._backFill);
            c.forEach((d, u) => {
              "!" === d ? t.add(u) : d === jn && e.add(u);
            }),
              n || c.set("offset", l / this.duration),
              r.push(c);
          });
          const o = t.size ? Cd(t.values()) : [],
            s = e.size ? Cd(e.values()) : [];
          if (n) {
            const a = r[0],
              l = new Map(a);
            a.set("offset", 0), l.set("offset", 1), (r = [a, l]);
          }
          return Wp(
            this.element,
            r,
            o,
            s,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class Wz extends Ad {
        constructor(t, e, n, r, o, s, a = !1) {
          super(t, e, s.delay),
            (this.keyframes = n),
            (this.preStyleProps = r),
            (this.postStyleProps = o),
            (this._stretchStartingKeyframe = a),
            (this.timings = {
              duration: s.duration,
              delay: s.delay,
              easing: s.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let t = this.keyframes,
            { delay: e, duration: n, easing: r } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const o = [],
              s = n + e,
              a = e / s,
              l = sr(t[0]);
            l.set("offset", 0), o.push(l);
            const c = sr(t[0]);
            c.set("offset", xE(a)), o.push(c);
            const d = t.length - 1;
            for (let u = 1; u <= d; u++) {
              let h = sr(t[u]);
              const f = h.get("offset");
              h.set("offset", xE((e + f * n) / s)), o.push(h);
            }
            (n = s), (e = 0), (r = ""), (t = o);
          }
          return Wp(
            this.element,
            t,
            this.preStyleProps,
            this.postStyleProps,
            n,
            e,
            r,
            !0
          );
        }
      }
      function xE(i, t = 3) {
        const e = Math.pow(10, t - 1);
        return Math.round(i * e) / e;
      }
      class Kp {}
      const Yz = new Set([
        "width",
        "height",
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight",
        "left",
        "top",
        "bottom",
        "right",
        "fontSize",
        "outlineWidth",
        "outlineOffset",
        "paddingTop",
        "paddingLeft",
        "paddingBottom",
        "paddingRight",
        "marginTop",
        "marginLeft",
        "marginBottom",
        "marginRight",
        "borderRadius",
        "borderWidth",
        "borderTopWidth",
        "borderLeftWidth",
        "borderRightWidth",
        "borderBottomWidth",
        "textIndent",
        "perspective",
      ]);
      class Kz extends Kp {
        normalizePropertyName(t, e) {
          return $p(t);
        }
        normalizeStyleValue(t, e, n, r) {
          let o = "";
          const s = n.toString().trim();
          if (Yz.has(e) && 0 !== n && "0" !== n)
            if ("number" == typeof n) o = "px";
            else {
              const a = n.match(/^[+-]?[\d\.]+([a-z]*)$/);
              a &&
                0 == a[1].length &&
                r.push(
                  (function jH(i, t) {
                    return new D(3005, !1);
                  })()
                );
            }
          return s + o;
        }
      }
      function CE(i, t, e, n, r, o, s, a, l, c, d, u, h) {
        return {
          type: 0,
          element: i,
          triggerName: t,
          isRemovalTransition: r,
          fromState: e,
          fromStyles: o,
          toState: n,
          toStyles: s,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: d,
          totalTime: u,
          errors: h,
        };
      }
      const Xp = {};
      class DE {
        constructor(t, e, n) {
          (this._triggerName = t), (this.ast = e), (this._stateStyles = n);
        }
        match(t, e, n, r) {
          return (function Xz(i, t, e, n, r) {
            return i.some((o) => o(t, e, n, r));
          })(this.ast.matchers, t, e, n, r);
        }
        buildStyles(t, e, n) {
          let r = this._stateStyles.get("*");
          return (
            void 0 !== t && (r = this._stateStyles.get(t?.toString()) || r),
            r ? r.buildStyles(e, n) : new Map()
          );
        }
        build(t, e, n, r, o, s, a, l, c, d) {
          const u = [],
            h = (this.ast.options && this.ast.options.params) || Xp,
            m = this.buildStyles(n, (a && a.params) || Xp, u),
            p = (l && l.params) || Xp,
            g = this.buildStyles(r, p, u),
            b = new Set(),
            y = new Map(),
            _ = new Map(),
            x = "void" === r,
            T = { params: Zz(p, h), delay: this.ast.options?.delay },
            I = d ? [] : Qp(t, e, this.ast.animation, o, s, m, g, T, c, u);
          let R = 0;
          if (
            (I.forEach((De) => {
              R = Math.max(De.duration + De.delay, R);
            }),
            u.length)
          )
            return CE(e, this._triggerName, n, r, x, m, g, [], [], y, _, R, u);
          I.forEach((De) => {
            const Oe = De.element,
              wn = _i(y, Oe, new Set());
            De.preStyleProps.forEach((st) => wn.add(st));
            const Ni = _i(_, Oe, new Set());
            De.postStyleProps.forEach((st) => Ni.add(st)),
              Oe !== e && b.add(Oe);
          });
          const z = Cd(b.values());
          return CE(e, this._triggerName, n, r, x, m, g, I, z, y, _, R);
        }
      }
      function Zz(i, t) {
        const e = Na(t);
        for (const n in i) i.hasOwnProperty(n) && null != i[n] && (e[n] = i[n]);
        return e;
      }
      class Jz {
        constructor(t, e, n) {
          (this.styles = t), (this.defaultParams = e), (this.normalizer = n);
        }
        buildStyles(t, e) {
          const n = new Map(),
            r = Na(this.defaultParams);
          return (
            Object.keys(t).forEach((o) => {
              const s = t[o];
              null !== s && (r[o] = s);
            }),
            this.styles.styles.forEach((o) => {
              "string" != typeof o &&
                o.forEach((s, a) => {
                  s && (s = Ba(s, r, e));
                  const l = this.normalizer.normalizePropertyName(a, e);
                  (s = this.normalizer.normalizeStyleValue(a, l, s, e)),
                    n.set(a, s);
                });
            }),
            n
          );
        }
      }
      class tU {
        constructor(t, e, n) {
          (this.name = t),
            (this.ast = e),
            (this._normalizer = n),
            (this.transitionFactories = []),
            (this.states = new Map()),
            e.states.forEach((r) => {
              this.states.set(
                r.name,
                new Jz(r.style, (r.options && r.options.params) || {}, n)
              );
            }),
            EE(this.states, "true", "1"),
            EE(this.states, "false", "0"),
            e.transitions.forEach((r) => {
              this.transitionFactories.push(new DE(t, r, this.states));
            }),
            (this.fallbackTransition = (function iU(i, t, e) {
              return new DE(
                i,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(s, a) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                t
              );
            })(t, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(t, e, n, r) {
          return (
            this.transitionFactories.find((s) => s.match(t, e, n, r)) || null
          );
        }
        matchStyles(t, e, n) {
          return this.fallbackTransition.buildStyles(t, e, n);
        }
      }
      function EE(i, t, e) {
        i.has(t)
          ? i.has(e) || i.set(e, i.get(t))
          : i.has(e) && i.set(t, i.get(e));
      }
      const nU = new kd();
      class rU {
        constructor(t, e, n) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = n),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(t, e) {
          const n = [],
            o = Gp(this._driver, e, n, []);
          if (n.length)
            throw (function rz(i) {
              return new D(3503, !1);
            })();
          this._animations.set(t, o);
        }
        _buildPlayer(t, e, n) {
          const r = t.element,
            o = nE(0, this._normalizer, 0, t.keyframes, e, n);
          return this._driver.animate(
            r,
            o,
            t.duration,
            t.delay,
            t.easing,
            [],
            !0
          );
        }
        create(t, e, n = {}) {
          const r = [],
            o = this._animations.get(t);
          let s;
          const a = new Map();
          if (
            (o
              ? ((s = Qp(
                  this._driver,
                  e,
                  o,
                  jp,
                  vd,
                  new Map(),
                  new Map(),
                  n,
                  nU,
                  r
                )),
                s.forEach((d) => {
                  const u = _i(a, d.element, new Map());
                  d.postStyleProps.forEach((h) => u.set(h, null));
                }))
              : (r.push(
                  (function oz() {
                    return new D(3300, !1);
                  })()
                ),
                (s = [])),
            r.length)
          )
            throw (function sz(i) {
              return new D(3504, !1);
            })();
          a.forEach((d, u) => {
            d.forEach((h, f) => {
              d.set(f, this._driver.computeStyle(u, f, jn));
            });
          });
          const c = or(
            s.map((d) => {
              const u = a.get(d.element);
              return this._buildPlayer(d, new Map(), u);
            })
          );
          return (
            this._playersById.set(t, c),
            c.onDestroy(() => this.destroy(t)),
            this.players.push(c),
            c
          );
        }
        destroy(t) {
          const e = this._getPlayer(t);
          e.destroy(), this._playersById.delete(t);
          const n = this.players.indexOf(e);
          n >= 0 && this.players.splice(n, 1);
        }
        _getPlayer(t) {
          const e = this._playersById.get(t);
          if (!e)
            throw (function az(i) {
              return new D(3301, !1);
            })();
          return e;
        }
        listen(t, e, n, r) {
          const o = Np(e, "", "", "");
          return Fp(this._getPlayer(t), n, o, r), () => {};
        }
        command(t, e, n, r) {
          if ("register" == n) return void this.register(t, r[0]);
          if ("create" == n) return void this.create(t, e, r[0] || {});
          const o = this._getPlayer(t);
          switch (n) {
            case "play":
              o.play();
              break;
            case "pause":
              o.pause();
              break;
            case "reset":
              o.reset();
              break;
            case "restart":
              o.restart();
              break;
            case "finish":
              o.finish();
              break;
            case "init":
              o.init();
              break;
            case "setPosition":
              o.setPosition(parseFloat(r[0]));
              break;
            case "destroy":
              this.destroy(t);
          }
        }
      }
      const ME = "ng-animate-queued",
        Zp = "ng-animate-disabled",
        cU = [],
        SE = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        dU = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        Ii = "__ng_removed";
      class Jp {
        get params() {
          return this.options.params;
        }
        constructor(t, e = "") {
          this.namespaceId = e;
          const n = t && t.hasOwnProperty("value");
          if (
            ((this.value = (function mU(i) {
              return i ?? null;
            })(n ? t.value : t)),
            n)
          ) {
            const o = Na(t);
            delete o.value, (this.options = o);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        absorbOptions(t) {
          const e = t.params;
          if (e) {
            const n = this.options.params;
            Object.keys(e).forEach((r) => {
              null == n[r] && (n[r] = e[r]);
            });
          }
        }
      }
      const Va = "void",
        eg = new Jp(Va);
      class uU {
        constructor(t, e, n) {
          (this.id = t),
            (this.hostElement = e),
            (this._engine = n),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + t),
            Ai(e, this._hostClassName);
        }
        listen(t, e, n, r) {
          if (!this._triggers.has(e))
            throw (function lz(i, t) {
              return new D(3302, !1);
            })();
          if (null == n || 0 == n.length)
            throw (function cz(i) {
              return new D(3303, !1);
            })();
          if (
            !(function pU(i) {
              return "start" == i || "done" == i;
            })(n)
          )
            throw (function dz(i, t) {
              return new D(3400, !1);
            })();
          const o = _i(this._elementListeners, t, []),
            s = { name: e, phase: n, callback: r };
          o.push(s);
          const a = _i(this._engine.statesByElement, t, new Map());
          return (
            a.has(e) || (Ai(t, yd), Ai(t, yd + "-" + e), a.set(e, eg)),
            () => {
              this._engine.afterFlush(() => {
                const l = o.indexOf(s);
                l >= 0 && o.splice(l, 1), this._triggers.has(e) || a.delete(e);
              });
            }
          );
        }
        register(t, e) {
          return !this._triggers.has(t) && (this._triggers.set(t, e), !0);
        }
        _getTrigger(t) {
          const e = this._triggers.get(t);
          if (!e)
            throw (function uz(i) {
              return new D(3401, !1);
            })();
          return e;
        }
        trigger(t, e, n, r = !0) {
          const o = this._getTrigger(e),
            s = new tg(this.id, e, t);
          let a = this._engine.statesByElement.get(t);
          a ||
            (Ai(t, yd),
            Ai(t, yd + "-" + e),
            this._engine.statesByElement.set(t, (a = new Map())));
          let l = a.get(e);
          const c = new Jp(n, this.id);
          if (
            (!(n && n.hasOwnProperty("value")) &&
              l &&
              c.absorbOptions(l.options),
            a.set(e, c),
            l || (l = eg),
            c.value !== Va && l.value === c.value)
          ) {
            if (
              !(function bU(i, t) {
                const e = Object.keys(i),
                  n = Object.keys(t);
                if (e.length != n.length) return !1;
                for (let r = 0; r < e.length; r++) {
                  const o = e[r];
                  if (!t.hasOwnProperty(o) || i[o] !== t[o]) return !1;
                }
                return !0;
              })(l.params, c.params)
            ) {
              const p = [],
                g = o.matchStyles(l.value, l.params, p),
                b = o.matchStyles(c.value, c.params, p);
              p.length
                ? this._engine.reportError(p)
                : this._engine.afterFlush(() => {
                    Gr(t, g), gn(t, b);
                  });
            }
            return;
          }
          const h = _i(this._engine.playersByElement, t, []);
          h.forEach((p) => {
            p.namespaceId == this.id &&
              p.triggerName == e &&
              p.queued &&
              p.destroy();
          });
          let f = o.matchTransition(l.value, c.value, t, c.params),
            m = !1;
          if (!f) {
            if (!r) return;
            (f = o.fallbackTransition), (m = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: t,
              triggerName: e,
              transition: f,
              fromState: l,
              toState: c,
              player: s,
              isFallbackTransition: m,
            }),
            m ||
              (Ai(t, ME),
              s.onStart(() => {
                rs(t, ME);
              })),
            s.onDone(() => {
              let p = this.players.indexOf(s);
              p >= 0 && this.players.splice(p, 1);
              const g = this._engine.playersByElement.get(t);
              if (g) {
                let b = g.indexOf(s);
                b >= 0 && g.splice(b, 1);
              }
            }),
            this.players.push(s),
            h.push(s),
            s
          );
        }
        deregister(t) {
          this._triggers.delete(t),
            this._engine.statesByElement.forEach((e) => e.delete(t)),
            this._elementListeners.forEach((e, n) => {
              this._elementListeners.set(
                n,
                e.filter((r) => r.name != t)
              );
            });
        }
        clearElementCache(t) {
          this._engine.statesByElement.delete(t),
            this._elementListeners.delete(t);
          const e = this._engine.playersByElement.get(t);
          e &&
            (e.forEach((n) => n.destroy()),
            this._engine.playersByElement.delete(t));
        }
        _signalRemovalForInnerTriggers(t, e) {
          const n = this._engine.driver.query(t, wd, !0);
          n.forEach((r) => {
            if (r[Ii]) return;
            const o = this._engine.fetchNamespacesByElement(r);
            o.size
              ? o.forEach((s) => s.triggerLeaveAnimation(r, e, !1, !0))
              : this.clearElementCache(r);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              n.forEach((r) => this.clearElementCache(r))
            );
        }
        triggerLeaveAnimation(t, e, n, r) {
          const o = this._engine.statesByElement.get(t),
            s = new Map();
          if (o) {
            const a = [];
            if (
              (o.forEach((l, c) => {
                if ((s.set(c, l.value), this._triggers.has(c))) {
                  const d = this.trigger(t, c, Va, r);
                  d && a.push(d);
                }
              }),
              a.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, t, !0, e, s),
                n && or(a).onDone(() => this._engine.processLeaveNode(t)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(t) {
          const e = this._elementListeners.get(t),
            n = this._engine.statesByElement.get(t);
          if (e && n) {
            const r = new Set();
            e.forEach((o) => {
              const s = o.name;
              if (r.has(s)) return;
              r.add(s);
              const l = this._triggers.get(s).fallbackTransition,
                c = n.get(s) || eg,
                d = new Jp(Va),
                u = new tg(this.id, s, t);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: t,
                  triggerName: s,
                  transition: l,
                  fromState: c,
                  toState: d,
                  player: u,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(t, e) {
          const n = this._engine;
          if (
            (t.childElementCount && this._signalRemovalForInnerTriggers(t, e),
            this.triggerLeaveAnimation(t, e, !0))
          )
            return;
          let r = !1;
          if (n.totalAnimations) {
            const o = n.players.length ? n.playersByQueriedElement.get(t) : [];
            if (o && o.length) r = !0;
            else {
              let s = t;
              for (; (s = s.parentNode); )
                if (n.statesByElement.get(s)) {
                  r = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(t), r))
            n.markElementAsRemoved(this.id, t, !1, e);
          else {
            const o = t[Ii];
            (!o || o === SE) &&
              (n.afterFlush(() => this.clearElementCache(t)),
              n.destroyInnerAnimations(t),
              n._onRemovalComplete(t, e));
          }
        }
        insertNode(t, e) {
          Ai(t, this._hostClassName);
        }
        drainQueuedTransitions(t) {
          const e = [];
          return (
            this._queue.forEach((n) => {
              const r = n.player;
              if (r.destroyed) return;
              const o = n.element,
                s = this._elementListeners.get(o);
              s &&
                s.forEach((a) => {
                  if (a.name == n.triggerName) {
                    const l = Np(
                      o,
                      n.triggerName,
                      n.fromState.value,
                      n.toState.value
                    );
                    (l._data = t), Fp(n.player, a.phase, l, a.callback);
                  }
                }),
                r.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      r.destroy();
                    })
                  : e.push(n);
            }),
            (this._queue = []),
            e.sort((n, r) => {
              const o = n.transition.ast.depCount,
                s = r.transition.ast.depCount;
              return 0 == o || 0 == s
                ? o - s
                : this._engine.driver.containsElement(n.element, r.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(t) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, t);
        }
        elementContainsData(t) {
          let e = !1;
          return (
            this._elementListeners.has(t) && (e = !0),
            (e = !!this._queue.find((n) => n.element === t) || e),
            e
          );
        }
      }
      class hU {
        _onRemovalComplete(t, e) {
          this.onRemovalComplete(t, e);
        }
        constructor(t, e, n) {
          (this.bodyNode = t),
            (this.driver = e),
            (this._normalizer = n),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (r, o) => {});
        }
        get queuedPlayers() {
          const t = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((n) => {
                n.queued && t.push(n);
              });
            }),
            t
          );
        }
        createNamespace(t, e) {
          const n = new uU(t, e, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, e)
              ? this._balanceNamespaceList(n, e)
              : (this.newHostElements.set(e, n), this.collectEnterElement(e)),
            (this._namespaceLookup[t] = n)
          );
        }
        _balanceNamespaceList(t, e) {
          const n = this._namespaceList,
            r = this.namespacesByHostElement;
          if (n.length - 1 >= 0) {
            let s = !1,
              a = this.driver.getParentElement(e);
            for (; a; ) {
              const l = r.get(a);
              if (l) {
                const c = n.indexOf(l);
                n.splice(c + 1, 0, t), (s = !0);
                break;
              }
              a = this.driver.getParentElement(a);
            }
            s || n.unshift(t);
          } else n.push(t);
          return r.set(e, t), t;
        }
        register(t, e) {
          let n = this._namespaceLookup[t];
          return n || (n = this.createNamespace(t, e)), n;
        }
        registerTrigger(t, e, n) {
          let r = this._namespaceLookup[t];
          r && r.register(e, n) && this.totalAnimations++;
        }
        destroy(t, e) {
          if (!t) return;
          const n = this._fetchNamespace(t);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(n.hostElement),
              delete this._namespaceLookup[t];
            const r = this._namespaceList.indexOf(n);
            r >= 0 && this._namespaceList.splice(r, 1);
          }),
            this.afterFlushAnimationsDone(() => n.destroy(e));
        }
        _fetchNamespace(t) {
          return this._namespaceLookup[t];
        }
        fetchNamespacesByElement(t) {
          const e = new Set(),
            n = this.statesByElement.get(t);
          if (n)
            for (let r of n.values())
              if (r.namespaceId) {
                const o = this._fetchNamespace(r.namespaceId);
                o && e.add(o);
              }
          return e;
        }
        trigger(t, e, n, r) {
          if (Rd(e)) {
            const o = this._fetchNamespace(t);
            if (o) return o.trigger(e, n, r), !0;
          }
          return !1;
        }
        insertNode(t, e, n, r) {
          if (!Rd(e)) return;
          const o = e[Ii];
          if (o && o.setForRemoval) {
            (o.setForRemoval = !1), (o.setForMove = !0);
            const s = this.collectedLeaveElements.indexOf(e);
            s >= 0 && this.collectedLeaveElements.splice(s, 1);
          }
          if (t) {
            const s = this._fetchNamespace(t);
            s && s.insertNode(e, n);
          }
          r && this.collectEnterElement(e);
        }
        collectEnterElement(t) {
          this.collectedEnterElements.push(t);
        }
        markElementAsDisabled(t, e) {
          e
            ? this.disabledNodes.has(t) ||
              (this.disabledNodes.add(t), Ai(t, Zp))
            : this.disabledNodes.has(t) &&
              (this.disabledNodes.delete(t), rs(t, Zp));
        }
        removeNode(t, e, n, r) {
          if (Rd(e)) {
            const o = t ? this._fetchNamespace(t) : null;
            if (
              (o ? o.removeNode(e, r) : this.markElementAsRemoved(t, e, !1, r),
              n)
            ) {
              const s = this.namespacesByHostElement.get(e);
              s && s.id !== t && s.removeNode(e, r);
            }
          } else this._onRemovalComplete(e, r);
        }
        markElementAsRemoved(t, e, n, r, o) {
          this.collectedLeaveElements.push(e),
            (e[Ii] = {
              namespaceId: t,
              setForRemoval: r,
              hasAnimation: n,
              removedBeforeQueried: !1,
              previousTriggersValues: o,
            });
        }
        listen(t, e, n, r, o) {
          return Rd(e) ? this._fetchNamespace(t).listen(e, n, r, o) : () => {};
        }
        _buildInstruction(t, e, n, r, o) {
          return t.transition.build(
            this.driver,
            t.element,
            t.fromState.value,
            t.toState.value,
            n,
            r,
            t.fromState.options,
            t.toState.options,
            e,
            o
          );
        }
        destroyInnerAnimations(t) {
          let e = this.driver.query(t, wd, !0);
          e.forEach((n) => this.destroyActiveAnimationsForElement(n)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(t, Hp, !0)),
              e.forEach((n) => this.finishActiveQueriedAnimationOnElement(n)));
        }
        destroyActiveAnimationsForElement(t) {
          const e = this.playersByElement.get(t);
          e &&
            e.forEach((n) => {
              n.queued ? (n.markedForDestroy = !0) : n.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(t) {
          const e = this.playersByQueriedElement.get(t);
          e && e.forEach((n) => n.finish());
        }
        whenRenderingDone() {
          return new Promise((t) => {
            if (this.players.length) return or(this.players).onDone(() => t());
            t();
          });
        }
        processLeaveNode(t) {
          const e = t[Ii];
          if (e && e.setForRemoval) {
            if (((t[Ii] = SE), e.namespaceId)) {
              this.destroyInnerAnimations(t);
              const n = this._fetchNamespace(e.namespaceId);
              n && n.clearElementCache(t);
            }
            this._onRemovalComplete(t, e.setForRemoval);
          }
          t.classList?.contains(Zp) && this.markElementAsDisabled(t, !1),
            this.driver.query(t, ".ng-animate-disabled", !0).forEach((n) => {
              this.markElementAsDisabled(n, !1);
            });
        }
        flush(t = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((n, r) =>
                this._balanceNamespaceList(n, r)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let n = 0; n < this.collectedEnterElements.length; n++)
              Ai(this.collectedEnterElements[n], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const n = [];
            try {
              e = this._flushAnimations(n, t);
            } finally {
              for (let r = 0; r < n.length; r++) n[r]();
            }
          } else
            for (let n = 0; n < this.collectedLeaveElements.length; n++)
              this.processLeaveNode(this.collectedLeaveElements[n]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((n) => n()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const n = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? or(e).onDone(() => {
                    n.forEach((r) => r());
                  })
                : n.forEach((r) => r());
          }
        }
        reportError(t) {
          throw (function hz(i) {
            return new D(3402, !1);
          })();
        }
        _flushAnimations(t, e) {
          const n = new kd(),
            r = [],
            o = new Map(),
            s = [],
            a = new Map(),
            l = new Map(),
            c = new Map(),
            d = new Set();
          this.disabledNodes.forEach((L) => {
            d.add(L);
            const H = this.driver.query(L, ".ng-animate-queued", !0);
            for (let V = 0; V < H.length; V++) d.add(H[V]);
          });
          const u = this.bodyNode,
            h = Array.from(this.statesByElement.keys()),
            f = IE(h, this.collectedEnterElements),
            m = new Map();
          let p = 0;
          f.forEach((L, H) => {
            const V = jp + p++;
            m.set(H, V), L.forEach((ge) => Ai(ge, V));
          });
          const g = [],
            b = new Set(),
            y = new Set();
          for (let L = 0; L < this.collectedLeaveElements.length; L++) {
            const H = this.collectedLeaveElements[L],
              V = H[Ii];
            V &&
              V.setForRemoval &&
              (g.push(H),
              b.add(H),
              V.hasAnimation
                ? this.driver
                    .query(H, ".ng-star-inserted", !0)
                    .forEach((ge) => b.add(ge))
                : y.add(H));
          }
          const _ = new Map(),
            x = IE(h, Array.from(b));
          x.forEach((L, H) => {
            const V = vd + p++;
            _.set(H, V), L.forEach((ge) => Ai(ge, V));
          }),
            t.push(() => {
              f.forEach((L, H) => {
                const V = m.get(H);
                L.forEach((ge) => rs(ge, V));
              }),
                x.forEach((L, H) => {
                  const V = _.get(H);
                  L.forEach((ge) => rs(ge, V));
                }),
                g.forEach((L) => {
                  this.processLeaveNode(L);
                });
            });
          const T = [],
            I = [];
          for (let L = this._namespaceList.length - 1; L >= 0; L--)
            this._namespaceList[L].drainQueuedTransitions(e).forEach((V) => {
              const ge = V.player,
                Ne = V.element;
              if ((T.push(ge), this.collectedEnterElements.length)) {
                const $t = Ne[Ii];
                if ($t && $t.setForMove) {
                  if (
                    $t.previousTriggersValues &&
                    $t.previousTriggersValues.has(V.triggerName)
                  ) {
                    const po = $t.previousTriggersValues.get(V.triggerName),
                      Li = this.statesByElement.get(V.element);
                    if (Li && Li.has(V.triggerName)) {
                      const _h = Li.get(V.triggerName);
                      (_h.value = po), Li.set(V.triggerName, _h);
                    }
                  }
                  return void ge.destroy();
                }
              }
              const si = !u || !this.driver.containsElement(u, Ne),
                Ut = _.get(Ne),
                yr = m.get(Ne),
                et = this._buildInstruction(V, n, yr, Ut, si);
              if (et.errors && et.errors.length) return void I.push(et);
              if (si)
                return (
                  ge.onStart(() => Gr(Ne, et.fromStyles)),
                  ge.onDestroy(() => gn(Ne, et.toStyles)),
                  void r.push(ge)
                );
              if (V.isFallbackTransition)
                return (
                  ge.onStart(() => Gr(Ne, et.fromStyles)),
                  ge.onDestroy(() => gn(Ne, et.toStyles)),
                  void r.push(ge)
                );
              const iR = [];
              et.timelines.forEach(($t) => {
                ($t.stretchStartingKeyframe = !0),
                  this.disabledNodes.has($t.element) || iR.push($t);
              }),
                (et.timelines = iR),
                n.append(Ne, et.timelines),
                s.push({ instruction: et, player: ge, element: Ne }),
                et.queriedElements.forEach(($t) => _i(a, $t, []).push(ge)),
                et.preStyleProps.forEach(($t, po) => {
                  if ($t.size) {
                    let Li = l.get(po);
                    Li || l.set(po, (Li = new Set())),
                      $t.forEach((_h, tv) => Li.add(tv));
                  }
                }),
                et.postStyleProps.forEach(($t, po) => {
                  let Li = c.get(po);
                  Li || c.set(po, (Li = new Set())),
                    $t.forEach((_h, tv) => Li.add(tv));
                });
            });
          if (I.length) {
            const L = [];
            I.forEach((H) => {
              L.push(
                (function fz(i, t) {
                  return new D(3505, !1);
                })()
              );
            }),
              T.forEach((H) => H.destroy()),
              this.reportError(L);
          }
          const R = new Map(),
            z = new Map();
          s.forEach((L) => {
            const H = L.element;
            n.has(H) &&
              (z.set(H, H),
              this._beforeAnimationBuild(
                L.player.namespaceId,
                L.instruction,
                R
              ));
          }),
            r.forEach((L) => {
              const H = L.element;
              this._getPreviousPlayers(
                H,
                !1,
                L.namespaceId,
                L.triggerName,
                null
              ).forEach((ge) => {
                _i(R, H, []).push(ge), ge.destroy();
              });
            });
          const De = g.filter((L) => RE(L, l, c)),
            Oe = new Map();
          kE(Oe, this.driver, y, c, jn).forEach((L) => {
            RE(L, l, c) && De.push(L);
          });
          const Ni = new Map();
          f.forEach((L, H) => {
            kE(Ni, this.driver, new Set(L), l, "!");
          }),
            De.forEach((L) => {
              const H = Oe.get(L),
                V = Ni.get(L);
              Oe.set(
                L,
                new Map([
                  ...Array.from(H?.entries() ?? []),
                  ...Array.from(V?.entries() ?? []),
                ])
              );
            });
          const st = [],
            Qn = [],
            Ll = {};
          s.forEach((L) => {
            const { element: H, player: V, instruction: ge } = L;
            if (n.has(H)) {
              if (d.has(H))
                return (
                  V.onDestroy(() => gn(H, ge.toStyles)),
                  (V.disabled = !0),
                  V.overrideTotalTime(ge.totalTime),
                  void r.push(V)
                );
              let Ne = Ll;
              if (z.size > 1) {
                let Ut = H;
                const yr = [];
                for (; (Ut = Ut.parentNode); ) {
                  const et = z.get(Ut);
                  if (et) {
                    Ne = et;
                    break;
                  }
                  yr.push(Ut);
                }
                yr.forEach((et) => z.set(et, Ne));
              }
              const si = this._buildAnimation(V.namespaceId, ge, R, o, Ni, Oe);
              if ((V.setRealPlayer(si), Ne === Ll)) st.push(V);
              else {
                const Ut = this.playersByElement.get(Ne);
                Ut && Ut.length && (V.parentPlayer = or(Ut)), r.push(V);
              }
            } else
              Gr(H, ge.fromStyles),
                V.onDestroy(() => gn(H, ge.toStyles)),
                Qn.push(V),
                d.has(H) && r.push(V);
          }),
            Qn.forEach((L) => {
              const H = o.get(L.element);
              if (H && H.length) {
                const V = or(H);
                L.setRealPlayer(V);
              }
            }),
            r.forEach((L) => {
              L.parentPlayer ? L.syncPlayerEvents(L.parentPlayer) : L.destroy();
            });
          for (let L = 0; L < g.length; L++) {
            const H = g[L],
              V = H[Ii];
            if ((rs(H, vd), V && V.hasAnimation)) continue;
            let ge = [];
            if (a.size) {
              let si = a.get(H);
              si && si.length && ge.push(...si);
              let Ut = this.driver.query(H, Hp, !0);
              for (let yr = 0; yr < Ut.length; yr++) {
                let et = a.get(Ut[yr]);
                et && et.length && ge.push(...et);
              }
            }
            const Ne = ge.filter((si) => !si.destroyed);
            Ne.length ? gU(this, H, Ne) : this.processLeaveNode(H);
          }
          return (
            (g.length = 0),
            st.forEach((L) => {
              this.players.push(L),
                L.onDone(() => {
                  L.destroy();
                  const H = this.players.indexOf(L);
                  this.players.splice(H, 1);
                }),
                L.play();
            }),
            st
          );
        }
        elementContainsData(t, e) {
          let n = !1;
          const r = e[Ii];
          return (
            r && r.setForRemoval && (n = !0),
            this.playersByElement.has(e) && (n = !0),
            this.playersByQueriedElement.has(e) && (n = !0),
            this.statesByElement.has(e) && (n = !0),
            this._fetchNamespace(t).elementContainsData(e) || n
          );
        }
        afterFlush(t) {
          this._flushFns.push(t);
        }
        afterFlushAnimationsDone(t) {
          this._whenQuietFns.push(t);
        }
        _getPreviousPlayers(t, e, n, r, o) {
          let s = [];
          if (e) {
            const a = this.playersByQueriedElement.get(t);
            a && (s = a);
          } else {
            const a = this.playersByElement.get(t);
            if (a) {
              const l = !o || o == Va;
              a.forEach((c) => {
                c.queued || (!l && c.triggerName != r) || s.push(c);
              });
            }
          }
          return (
            (n || r) &&
              (s = s.filter(
                (a) => !((n && n != a.namespaceId) || (r && r != a.triggerName))
              )),
            s
          );
        }
        _beforeAnimationBuild(t, e, n) {
          const o = e.element,
            s = e.isRemovalTransition ? void 0 : t,
            a = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const l of e.timelines) {
            const c = l.element,
              d = c !== o,
              u = _i(n, c, []);
            this._getPreviousPlayers(c, d, s, a, e.toState).forEach((f) => {
              const m = f.getRealPlayer();
              m.beforeDestroy && m.beforeDestroy(), f.destroy(), u.push(f);
            });
          }
          Gr(o, e.fromStyles);
        }
        _buildAnimation(t, e, n, r, o, s) {
          const a = e.triggerName,
            l = e.element,
            c = [],
            d = new Set(),
            u = new Set(),
            h = e.timelines.map((m) => {
              const p = m.element;
              d.add(p);
              const g = p[Ii];
              if (g && g.removedBeforeQueried)
                return new Pa(m.duration, m.delay);
              const b = p !== l,
                y = (function _U(i) {
                  const t = [];
                  return AE(i, t), t;
                })((n.get(p) || cU).map((R) => R.getRealPlayer())).filter(
                  (R) => !!R.element && R.element === p
                ),
                _ = o.get(p),
                x = s.get(p),
                T = nE(0, this._normalizer, 0, m.keyframes, _, x),
                I = this._buildPlayer(m, T, y);
              if ((m.subTimeline && r && u.add(p), b)) {
                const R = new tg(t, a, p);
                R.setRealPlayer(I), c.push(R);
              }
              return I;
            });
          c.forEach((m) => {
            _i(this.playersByQueriedElement, m.element, []).push(m),
              m.onDone(() =>
                (function fU(i, t, e) {
                  let n = i.get(t);
                  if (n) {
                    if (n.length) {
                      const r = n.indexOf(e);
                      n.splice(r, 1);
                    }
                    0 == n.length && i.delete(t);
                  }
                  return n;
                })(this.playersByQueriedElement, m.element, m)
              );
          }),
            d.forEach((m) => Ai(m, hE));
          const f = or(h);
          return (
            f.onDestroy(() => {
              d.forEach((m) => rs(m, hE)), gn(l, e.toStyles);
            }),
            u.forEach((m) => {
              _i(r, m, []).push(f);
            }),
            f
          );
        }
        _buildPlayer(t, e, n) {
          return e.length > 0
            ? this.driver.animate(
                t.element,
                e,
                t.duration,
                t.delay,
                t.easing,
                n
              )
            : new Pa(t.duration, t.delay);
        }
      }
      class tg {
        constructor(t, e, n) {
          (this.namespaceId = t),
            (this.triggerName = e),
            (this.element = n),
            (this._player = new Pa()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(t) {
          this._containsRealPlayer ||
            ((this._player = t),
            this._queuedCallbacks.forEach((e, n) => {
              e.forEach((r) => Fp(t, n, void 0, r));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(t.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(t) {
          this.totalTime = t;
        }
        syncPlayerEvents(t) {
          const e = this._player;
          e.triggerCallback && t.onStart(() => e.triggerCallback("start")),
            t.onDone(() => this.finish()),
            t.onDestroy(() => this.destroy());
        }
        _queueEvent(t, e) {
          _i(this._queuedCallbacks, t, []).push(e);
        }
        onDone(t) {
          this.queued && this._queueEvent("done", t), this._player.onDone(t);
        }
        onStart(t) {
          this.queued && this._queueEvent("start", t), this._player.onStart(t);
        }
        onDestroy(t) {
          this.queued && this._queueEvent("destroy", t),
            this._player.onDestroy(t);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(t) {
          this.queued || this._player.setPosition(t);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(t) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(t);
        }
      }
      function Rd(i) {
        return i && 1 === i.nodeType;
      }
      function TE(i, t) {
        const e = i.style.display;
        return (i.style.display = t ?? "none"), e;
      }
      function kE(i, t, e, n, r) {
        const o = [];
        e.forEach((l) => o.push(TE(l)));
        const s = [];
        n.forEach((l, c) => {
          const d = new Map();
          l.forEach((u) => {
            const h = t.computeStyle(c, u, r);
            d.set(u, h), (!h || 0 == h.length) && ((c[Ii] = dU), s.push(c));
          }),
            i.set(c, d);
        });
        let a = 0;
        return e.forEach((l) => TE(l, o[a++])), s;
      }
      function IE(i, t) {
        const e = new Map();
        if ((i.forEach((a) => e.set(a, [])), 0 == t.length)) return e;
        const r = new Set(t),
          o = new Map();
        function s(a) {
          if (!a) return 1;
          let l = o.get(a);
          if (l) return l;
          const c = a.parentNode;
          return (l = e.has(c) ? c : r.has(c) ? 1 : s(c)), o.set(a, l), l;
        }
        return (
          t.forEach((a) => {
            const l = s(a);
            1 !== l && e.get(l).push(a);
          }),
          e
        );
      }
      function Ai(i, t) {
        i.classList?.add(t);
      }
      function rs(i, t) {
        i.classList?.remove(t);
      }
      function gU(i, t, e) {
        or(e).onDone(() => i.processLeaveNode(t));
      }
      function AE(i, t) {
        for (let e = 0; e < i.length; e++) {
          const n = i[e];
          n instanceof tE ? AE(n.players, t) : t.push(n);
        }
      }
      function RE(i, t, e) {
        const n = e.get(i);
        if (!n) return !1;
        let r = t.get(i);
        return r ? n.forEach((o) => r.add(o)) : t.set(i, n), e.delete(i), !0;
      }
      class Od {
        constructor(t, e, n) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = n),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (r, o) => {}),
            (this._transitionEngine = new hU(t, e, n)),
            (this._timelineEngine = new rU(t, e, n)),
            (this._transitionEngine.onRemovalComplete = (r, o) =>
              this.onRemovalComplete(r, o));
        }
        registerTrigger(t, e, n, r, o) {
          const s = t + "-" + r;
          let a = this._triggerCache[s];
          if (!a) {
            const l = [],
              d = Gp(this._driver, o, l, []);
            if (l.length)
              throw (function iz(i, t) {
                return new D(3404, !1);
              })();
            (a = (function eU(i, t, e) {
              return new tU(i, t, e);
            })(r, d, this._normalizer)),
              (this._triggerCache[s] = a);
          }
          this._transitionEngine.registerTrigger(e, r, a);
        }
        register(t, e) {
          this._transitionEngine.register(t, e);
        }
        destroy(t, e) {
          this._transitionEngine.destroy(t, e);
        }
        onInsert(t, e, n, r) {
          this._transitionEngine.insertNode(t, e, n, r);
        }
        onRemove(t, e, n, r) {
          this._transitionEngine.removeNode(t, e, r || !1, n);
        }
        disableAnimations(t, e) {
          this._transitionEngine.markElementAsDisabled(t, e);
        }
        process(t, e, n, r) {
          if ("@" == n.charAt(0)) {
            const [o, s] = rE(n);
            this._timelineEngine.command(o, e, s, r);
          } else this._transitionEngine.trigger(t, e, n, r);
        }
        listen(t, e, n, r, o) {
          if ("@" == n.charAt(0)) {
            const [s, a] = rE(n);
            return this._timelineEngine.listen(s, e, a, o);
          }
          return this._transitionEngine.listen(t, e, n, r, o);
        }
        flush(t = -1) {
          this._transitionEngine.flush(t);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      let yU = (() => {
        class i {
          constructor(e, n, r) {
            (this._element = e),
              (this._startStyles = n),
              (this._endStyles = r),
              (this._state = 0);
            let o = i.initialStylesByElement.get(e);
            o || i.initialStylesByElement.set(e, (o = new Map())),
              (this._initialStyles = o);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                gn(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (gn(this._element, this._initialStyles),
                this._endStyles &&
                  (gn(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (i.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (Gr(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (Gr(this._element, this._endStyles),
                  (this._endStyles = null)),
                gn(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (i.initialStylesByElement = new WeakMap()), i;
      })();
      function ig(i) {
        let t = null;
        return (
          i.forEach((e, n) => {
            (function wU(i) {
              return "display" === i || "position" === i;
            })(n) && ((t = t || new Map()), t.set(n, e));
          }),
          t
        );
      }
      class OE {
        constructor(t, e, n, r) {
          (this.element = t),
            (this.keyframes = e),
            (this.options = n),
            (this._specialStyles = r),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = n.duration),
            (this._delay = n.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((t) => t()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const t = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            t,
            this.options
          )),
            (this._finalKeyframe = t.length ? t[t.length - 1] : new Map()),
            this.domPlayer.addEventListener("finish", () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(t) {
          const e = [];
          return (
            t.forEach((n) => {
              e.push(Object.fromEntries(n));
            }),
            e
          );
        }
        _triggerWebAnimation(t, e, n) {
          return t.animate(this._convertKeyframesToObject(e), n);
        }
        onStart(t) {
          this._originalOnStartFns.push(t), this._onStartFns.push(t);
        }
        onDone(t) {
          this._originalOnDoneFns.push(t), this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((t) => t()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        setPosition(t) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = t * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const t = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((n, r) => {
              "offset" !== r &&
                t.set(r, this._finished ? n : bE(this.element, r));
            }),
            (this.currentSnapshot = t);
        }
        triggerCallback(t) {
          const e = "start" === t ? this._onStartFns : this._onDoneFns;
          e.forEach((n) => n()), (e.length = 0);
        }
      }
      class xU {
        validateStyleProperty(t) {
          return !0;
        }
        validateAnimatableStyleProperty(t) {
          return !0;
        }
        matchesElement(t, e) {
          return !1;
        }
        containsElement(t, e) {
          return lE(t, e);
        }
        getParentElement(t) {
          return Bp(t);
        }
        query(t, e, n) {
          return cE(t, e, n);
        }
        computeStyle(t, e, n) {
          return window.getComputedStyle(t)[e];
        }
        animate(t, e, n, r, o, s = []) {
          const l = {
            duration: n,
            delay: r,
            fill: 0 == r ? "both" : "forwards",
          };
          o && (l.easing = o);
          const c = new Map(),
            d = s.filter((f) => f instanceof OE);
          (function Mz(i, t) {
            return 0 === i || 0 === t;
          })(n, r) &&
            d.forEach((f) => {
              f.currentSnapshot.forEach((m, p) => c.set(p, m));
            });
          let u = (function xz(i) {
            return i.length
              ? i[0] instanceof Map
                ? i
                : i.map((t) => fE(t))
              : [];
          })(e).map((f) => sr(f));
          u = (function Sz(i, t, e) {
            if (e.size && t.length) {
              let n = t[0],
                r = [];
              if (
                (e.forEach((o, s) => {
                  n.has(s) || r.push(s), n.set(s, o);
                }),
                r.length)
              )
                for (let o = 1; o < t.length; o++) {
                  let s = t[o];
                  r.forEach((a) => s.set(a, bE(i, a)));
                }
            }
            return t;
          })(t, u, c);
          const h = (function vU(i, t) {
            let e = null,
              n = null;
            return (
              Array.isArray(t) && t.length
                ? ((e = ig(t[0])), t.length > 1 && (n = ig(t[t.length - 1])))
                : t instanceof Map && (e = ig(t)),
              e || n ? new yU(i, e, n) : null
            );
          })(t, u);
          return new OE(t, u, l, h);
        }
      }
      let CU = (() => {
        class i extends ZD {
          constructor(e, n) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = e.createRenderer(n.body, {
                id: "0",
                encapsulation: Vi.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(e) {
            const n = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const r = Array.isArray(e) ? JD(e) : e;
            return (
              FE(this._renderer, null, n, "register", [r]),
              new DU(n, this._renderer)
            );
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(da), w(le));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      class DU extends RH {
        constructor(t, e) {
          super(), (this._id = t), (this._renderer = e);
        }
        create(t, e) {
          return new EU(this._id, t, e || {}, this._renderer);
        }
      }
      class EU {
        constructor(t, e, n, r) {
          (this.id = t),
            (this.element = e),
            (this._renderer = r),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", n);
        }
        _listen(t, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${t}`, e);
        }
        _command(t, ...e) {
          return FE(this._renderer, this.element, this.id, t, e);
        }
        onDone(t) {
          this._listen("done", t);
        }
        onStart(t) {
          this._listen("start", t);
        }
        onDestroy(t) {
          this._listen("destroy", t);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(t) {
          this._command("setPosition", t);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function FE(i, t, e, n, r) {
        return i.setProperty(t, `@@${e}:${n}`, r);
      }
      const PE = "@.disabled";
      let MU = (() => {
        class i {
          constructor(e, n, r) {
            (this.delegate = e),
              (this.engine = n),
              (this._zone = r),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (n.onRemovalComplete = (o, s) => {
                const a = s?.parentNode(o);
                a && s.removeChild(a, o);
              });
          }
          createRenderer(e, n) {
            const o = this.delegate.createRenderer(e, n);
            if (!(e && n && n.data && n.data.animation)) {
              let d = this._rendererCache.get(o);
              return (
                d ||
                  ((d = new NE("", o, this.engine, () =>
                    this._rendererCache.delete(o)
                  )),
                  this._rendererCache.set(o, d)),
                d
              );
            }
            const s = n.id,
              a = n.id + "-" + this._currentId;
            this._currentId++, this.engine.register(a, e);
            const l = (d) => {
              Array.isArray(d)
                ? d.forEach(l)
                : this.engine.registerTrigger(s, a, e, d.name, d);
            };
            return n.data.animation.forEach(l), new SU(this, a, o, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(e, n, r) {
            e >= 0 && e < this._microtaskId
              ? this._zone.run(() => n(r))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((o) => {
                        const [s, a] = o;
                        s(a);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([n, r]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(da), w(Od), w(Z));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      class NE {
        constructor(t, e, n, r) {
          (this.namespaceId = t),
            (this.delegate = e),
            (this.engine = n),
            (this._onDestroy = r),
            (this.destroyNode = this.delegate.destroyNode
              ? (o) => e.destroyNode(o)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy(),
            this._onDestroy?.();
        }
        createElement(t, e) {
          return this.delegate.createElement(t, e);
        }
        createComment(t) {
          return this.delegate.createComment(t);
        }
        createText(t) {
          return this.delegate.createText(t);
        }
        appendChild(t, e) {
          this.delegate.appendChild(t, e),
            this.engine.onInsert(this.namespaceId, e, t, !1);
        }
        insertBefore(t, e, n, r = !0) {
          this.delegate.insertBefore(t, e, n),
            this.engine.onInsert(this.namespaceId, e, t, r);
        }
        removeChild(t, e, n) {
          this.engine.onRemove(this.namespaceId, e, this.delegate, n);
        }
        selectRootElement(t, e) {
          return this.delegate.selectRootElement(t, e);
        }
        parentNode(t) {
          return this.delegate.parentNode(t);
        }
        nextSibling(t) {
          return this.delegate.nextSibling(t);
        }
        setAttribute(t, e, n, r) {
          this.delegate.setAttribute(t, e, n, r);
        }
        removeAttribute(t, e, n) {
          this.delegate.removeAttribute(t, e, n);
        }
        addClass(t, e) {
          this.delegate.addClass(t, e);
        }
        removeClass(t, e) {
          this.delegate.removeClass(t, e);
        }
        setStyle(t, e, n, r) {
          this.delegate.setStyle(t, e, n, r);
        }
        removeStyle(t, e, n) {
          this.delegate.removeStyle(t, e, n);
        }
        setProperty(t, e, n) {
          "@" == e.charAt(0) && e == PE
            ? this.disableAnimations(t, !!n)
            : this.delegate.setProperty(t, e, n);
        }
        setValue(t, e) {
          this.delegate.setValue(t, e);
        }
        listen(t, e, n) {
          return this.delegate.listen(t, e, n);
        }
        disableAnimations(t, e) {
          this.engine.disableAnimations(t, e);
        }
      }
      class SU extends NE {
        constructor(t, e, n, r, o) {
          super(e, n, r, o), (this.factory = t), (this.namespaceId = e);
        }
        setProperty(t, e, n) {
          "@" == e.charAt(0)
            ? "." == e.charAt(1) && e == PE
              ? this.disableAnimations(t, (n = void 0 === n || !!n))
              : this.engine.process(this.namespaceId, t, e.slice(1), n)
            : this.delegate.setProperty(t, e, n);
        }
        listen(t, e, n) {
          if ("@" == e.charAt(0)) {
            const r = (function TU(i) {
              switch (i) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return i;
              }
            })(t);
            let o = e.slice(1),
              s = "";
            return (
              "@" != o.charAt(0) &&
                ([o, s] = (function kU(i) {
                  const t = i.indexOf(".");
                  return [i.substring(0, t), i.slice(t + 1)];
                })(o)),
              this.engine.listen(this.namespaceId, r, o, s, (a) => {
                this.factory.scheduleListenerCallback(a._data || -1, n, a);
              })
            );
          }
          return this.delegate.listen(t, e, n);
        }
      }
      let IU = (() => {
        class i extends Od {
          constructor(e, n, r, o) {
            super(e.body, n, r);
          }
          ngOnDestroy() {
            this.flush();
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(le), w(Vp), w(Kp), w(ts));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      const LE = [
          { provide: ZD, useClass: CU },
          {
            provide: Kp,
            useFactory: function AU() {
              return new Kz();
            },
          },
          { provide: Od, useClass: IU },
          {
            provide: da,
            useFactory: function RU(i, t, e) {
              return new MU(i, t, e);
            },
            deps: [bd, Od, Z],
          },
        ],
        ng = [
          { provide: Vp, useFactory: () => new xU() },
          { provide: ir, useValue: "BrowserAnimations" },
          ...LE,
        ],
        BE = [
          { provide: Vp, useClass: dE },
          { provide: ir, useValue: "NoopAnimations" },
          ...LE,
        ];
      let OU = (() => {
        class i {
          static withConfig(e) {
            return { ngModule: i, providers: e.disableAnimations ? BE : ng };
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵmod = K({ type: i })),
          (i.ɵinj = Q({ providers: ng, imports: [WD] })),
          i
        );
      })();
      function j(...i) {
        return Ye(i, zs(i));
      }
      class Jt extends se {
        constructor(t) {
          super(), (this._value = t);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(t) {
          const e = super._subscribe(t);
          return !e.closed && t.next(this._value), e;
        }
        getValue() {
          const { hasError: t, thrownError: e, _value: n } = this;
          if (t) throw e;
          return this._throwIfClosed(), n;
        }
        next(t) {
          super.next((this._value = t));
        }
      }
      const Pd = js(
          (i) =>
            function () {
              i(this),
                (this.name = "EmptyError"),
                (this.message = "no elements in sequence");
            }
        ),
        { isArray: FU } = Array,
        { getPrototypeOf: PU, prototype: NU, keys: LU } = Object;
      function VE(i) {
        if (1 === i.length) {
          const t = i[0];
          if (FU(t)) return { args: t, keys: null };
          if (
            (function BU(i) {
              return i && "object" == typeof i && PU(i) === NU;
            })(t)
          ) {
            const e = LU(t);
            return { args: e.map((n) => t[n]), keys: e };
          }
        }
        return { args: i, keys: null };
      }
      const { isArray: VU } = Array;
      function rg(i) {
        return $((t) =>
          (function jU(i, t) {
            return VU(t) ? i(...t) : i(t);
          })(i, t)
        );
      }
      function jE(i, t) {
        return i.reduce((e, n, r) => ((e[n] = t[r]), e), {});
      }
      function og(...i) {
        const t = zs(i),
          e = xv(i),
          { args: n, keys: r } = VE(i);
        if (0 === n.length) return Ye([], t);
        const o = new be(
          (function HU(i, t, e = Yn) {
            return (n) => {
              HE(
                t,
                () => {
                  const { length: r } = i,
                    o = new Array(r);
                  let s = r,
                    a = r;
                  for (let l = 0; l < r; l++)
                    HE(
                      t,
                      () => {
                        const c = Ye(i[l], t);
                        let d = !1;
                        c.subscribe(
                          Ge(
                            n,
                            (u) => {
                              (o[l] = u),
                                d || ((d = !0), a--),
                                a || n.next(e(o.slice()));
                            },
                            () => {
                              --s || n.complete();
                            }
                          )
                        );
                      },
                      n
                    );
                },
                n
              );
            };
          })(n, t, r ? (s) => jE(r, s) : Yn)
        );
        return e ? o.pipe(rg(e)) : o;
      }
      function HE(i, t, e) {
        i ? Cn(e, i, t) : t();
      }
      function Nd(...i) {
        return (function zU() {
          return _o(1);
        })()(Ye(i, zs(i)));
      }
      function zE(i) {
        return new be((t) => {
          Gt(i()).subscribe(t);
        });
      }
      function os(i, t) {
        const e = _e(i) ? i : () => i,
          n = (r) => r.error(e());
        return new be(t ? (r) => t.schedule(n, 0, r) : n);
      }
      function sg() {
        return tt((i, t) => {
          let e = null;
          i._refCount++;
          const n = Ge(t, void 0, void 0, void 0, () => {
            if (!i || i._refCount <= 0 || 0 < --i._refCount)
              return void (e = null);
            const r = i._connection,
              o = e;
            (e = null),
              r && (!o || r === o) && r.unsubscribe(),
              t.unsubscribe();
          });
          i.subscribe(n), n.closed || (e = i.connect());
        });
      }
      class ag extends be {
        constructor(t, e) {
          super(),
            (this.source = t),
            (this.subjectFactory = e),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            cv(t) && (this.lift = t.lift);
        }
        _subscribe(t) {
          return this.getSubject().subscribe(t);
        }
        getSubject() {
          const t = this._subject;
          return (
            (!t || t.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: t } = this;
          (this._subject = this._connection = null), t?.unsubscribe();
        }
        connect() {
          let t = this._connection;
          if (!t) {
            t = this._connection = new ut();
            const e = this.getSubject();
            t.add(
              this.source.subscribe(
                Ge(
                  e,
                  void 0,
                  () => {
                    this._teardown(), e.complete();
                  },
                  (n) => {
                    this._teardown(), e.error(n);
                  },
                  () => this._teardown()
                )
              )
            ),
              t.closed && ((this._connection = null), (t = ut.EMPTY));
          }
          return t;
        }
        refCount() {
          return sg()(this);
        }
      }
      function _n(i, t) {
        return tt((e, n) => {
          let r = null,
            o = 0,
            s = !1;
          const a = () => s && !r && n.complete();
          e.subscribe(
            Ge(
              n,
              (l) => {
                r?.unsubscribe();
                let c = 0;
                const d = o++;
                Gt(i(l, d)).subscribe(
                  (r = Ge(
                    n,
                    (u) => n.next(t ? t(l, u, d, c++) : u),
                    () => {
                      (r = null), a();
                    }
                  ))
                );
              },
              () => {
                (s = !0), a();
              }
            )
          );
        });
      }
      function Ri(i) {
        return i <= 0
          ? () => Ji
          : tt((t, e) => {
              let n = 0;
              t.subscribe(
                Ge(e, (r) => {
                  ++n <= i && (e.next(r), i <= n && e.complete());
                })
              );
            });
      }
      function Ld(...i) {
        const t = zs(i);
        return tt((e, n) => {
          (t ? Nd(i, e, t) : Nd(i, e)).subscribe(n);
        });
      }
      function vi(i, t) {
        return tt((e, n) => {
          let r = 0;
          e.subscribe(Ge(n, (o) => i.call(t, o, r++) && n.next(o)));
        });
      }
      function Bd(i) {
        return tt((t, e) => {
          let n = !1;
          t.subscribe(
            Ge(
              e,
              (r) => {
                (n = !0), e.next(r);
              },
              () => {
                n || e.next(i), e.complete();
              }
            )
          );
        });
      }
      function UE(i = UU) {
        return tt((t, e) => {
          let n = !1;
          t.subscribe(
            Ge(
              e,
              (r) => {
                (n = !0), e.next(r);
              },
              () => (n ? e.complete() : e.error(i()))
            )
          );
        });
      }
      function UU() {
        return new Pd();
      }
      function ar(i, t) {
        const e = arguments.length >= 2;
        return (n) =>
          n.pipe(
            i ? vi((r, o) => i(r, o, n)) : Yn,
            Ri(1),
            e ? Bd(t) : UE(() => new Pd())
          );
      }
      function lr(i, t) {
        return _e(t) ? Dt(i, t, 1) : Dt(i, 1);
      }
      function pt(i, t, e) {
        const n = _e(i) || t || e ? { next: i, error: t, complete: e } : i;
        return n
          ? tt((r, o) => {
              var s;
              null === (s = n.subscribe) || void 0 === s || s.call(n);
              let a = !0;
              r.subscribe(
                Ge(
                  o,
                  (l) => {
                    var c;
                    null === (c = n.next) || void 0 === c || c.call(n, l),
                      o.next(l);
                  },
                  () => {
                    var l;
                    (a = !1),
                      null === (l = n.complete) || void 0 === l || l.call(n),
                      o.complete();
                  },
                  (l) => {
                    var c;
                    (a = !1),
                      null === (c = n.error) || void 0 === c || c.call(n, l),
                      o.error(l);
                  },
                  () => {
                    var l, c;
                    a &&
                      (null === (l = n.unsubscribe) ||
                        void 0 === l ||
                        l.call(n)),
                      null === (c = n.finalize) || void 0 === c || c.call(n);
                  }
                )
              );
            })
          : Yn;
      }
      function Un(i) {
        return tt((t, e) => {
          let o,
            n = null,
            r = !1;
          (n = t.subscribe(
            Ge(e, void 0, void 0, (s) => {
              (o = Gt(i(s, Un(i)(t)))),
                n ? (n.unsubscribe(), (n = null), o.subscribe(e)) : (r = !0);
            })
          )),
            r && (n.unsubscribe(), (n = null), o.subscribe(e));
        });
      }
      function $U(i, t, e, n, r) {
        return (o, s) => {
          let a = e,
            l = t,
            c = 0;
          o.subscribe(
            Ge(
              s,
              (d) => {
                const u = c++;
                (l = a ? i(l, d, u) : ((a = !0), d)), n && s.next(l);
              },
              r &&
                (() => {
                  a && s.next(l), s.complete();
                })
            )
          );
        };
      }
      function $E(i, t) {
        return tt($U(i, t, arguments.length >= 2, !0));
      }
      function lg(i) {
        return i <= 0
          ? () => Ji
          : tt((t, e) => {
              let n = [];
              t.subscribe(
                Ge(
                  e,
                  (r) => {
                    n.push(r), i < n.length && n.shift();
                  },
                  () => {
                    for (const r of n) e.next(r);
                    e.complete();
                  },
                  void 0,
                  () => {
                    n = null;
                  }
                )
              );
            });
      }
      function GE(i, t) {
        const e = arguments.length >= 2;
        return (n) =>
          n.pipe(
            i ? vi((r, o) => i(r, o, n)) : Yn,
            lg(1),
            e ? Bd(t) : UE(() => new Pd())
          );
      }
      function Vd(i) {
        return tt((t, e) => {
          try {
            t.subscribe(e);
          } finally {
            e.add(i);
          }
        });
      }
      const ie = "primary",
        ja = Symbol("RouteTitle");
      class WU {
        constructor(t) {
          this.params = t || {};
        }
        has(t) {
          return Object.prototype.hasOwnProperty.call(this.params, t);
        }
        get(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e[0] : e;
          }
          return null;
        }
        getAll(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e : [e];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function ss(i) {
        return new WU(i);
      }
      function QU(i, t, e) {
        const n = e.path.split("/");
        if (
          n.length > i.length ||
          ("full" === e.pathMatch && (t.hasChildren() || n.length < i.length))
        )
          return null;
        const r = {};
        for (let o = 0; o < n.length; o++) {
          const s = n[o],
            a = i[o];
          if (s.startsWith(":")) r[s.substring(1)] = a;
          else if (s !== a.path) return null;
        }
        return { consumed: i.slice(0, n.length), posParams: r };
      }
      function bn(i, t) {
        const e = i ? Object.keys(i) : void 0,
          n = t ? Object.keys(t) : void 0;
        if (!e || !n || e.length != n.length) return !1;
        let r;
        for (let o = 0; o < e.length; o++)
          if (((r = e[o]), !qE(i[r], t[r]))) return !1;
        return !0;
      }
      function qE(i, t) {
        if (Array.isArray(i) && Array.isArray(t)) {
          if (i.length !== t.length) return !1;
          const e = [...i].sort(),
            n = [...t].sort();
          return e.every((r, o) => n[o] === r);
        }
        return i === t;
      }
      function WE(i) {
        return Array.prototype.concat.apply([], i);
      }
      function QE(i) {
        return i.length > 0 ? i[i.length - 1] : null;
      }
      function At(i, t) {
        for (const e in i) i.hasOwnProperty(e) && t(i[e], e);
      }
      function cr(i) {
        return gm(i) ? i : _a(i) ? Ye(Promise.resolve(i)) : j(i);
      }
      const jd = !1,
        KU = {
          exact: function XE(i, t, e) {
            if (
              !Qr(i.segments, t.segments) ||
              !Hd(i.segments, t.segments, e) ||
              i.numberOfChildren !== t.numberOfChildren
            )
              return !1;
            for (const n in t.children)
              if (!i.children[n] || !XE(i.children[n], t.children[n], e))
                return !1;
            return !0;
          },
          subset: ZE,
        },
        YE = {
          exact: function XU(i, t) {
            return bn(i, t);
          },
          subset: function ZU(i, t) {
            return (
              Object.keys(t).length <= Object.keys(i).length &&
              Object.keys(t).every((e) => qE(i[e], t[e]))
            );
          },
          ignored: () => !0,
        };
      function KE(i, t, e) {
        return (
          KU[e.paths](i.root, t.root, e.matrixParams) &&
          YE[e.queryParams](i.queryParams, t.queryParams) &&
          !("exact" === e.fragment && i.fragment !== t.fragment)
        );
      }
      function ZE(i, t, e) {
        return JE(i, t, t.segments, e);
      }
      function JE(i, t, e, n) {
        if (i.segments.length > e.length) {
          const r = i.segments.slice(0, e.length);
          return !(!Qr(r, e) || t.hasChildren() || !Hd(r, e, n));
        }
        if (i.segments.length === e.length) {
          if (!Qr(i.segments, e) || !Hd(i.segments, e, n)) return !1;
          for (const r in t.children)
            if (!i.children[r] || !ZE(i.children[r], t.children[r], n))
              return !1;
          return !0;
        }
        {
          const r = e.slice(0, i.segments.length),
            o = e.slice(i.segments.length);
          return (
            !!(Qr(i.segments, r) && Hd(i.segments, r, n) && i.children[ie]) &&
            JE(i.children[ie], t, o, n)
          );
        }
      }
      function Hd(i, t, e) {
        return t.every((n, r) => YE[e](i[r].parameters, n.parameters));
      }
      class Wr {
        constructor(t = new de([], {}), e = {}, n = null) {
          (this.root = t), (this.queryParams = e), (this.fragment = n);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ss(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return t4.serialize(this);
        }
      }
      class de {
        constructor(t, e) {
          (this.segments = t),
            (this.children = e),
            (this.parent = null),
            At(e, (n, r) => (n.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return zd(this);
        }
      }
      class Ha {
        constructor(t, e) {
          (this.path = t), (this.parameters = e);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = ss(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return iM(this);
        }
      }
      function Qr(i, t) {
        return i.length === t.length && i.every((e, n) => e.path === t[n].path);
      }
      let za = (() => {
        class i {}
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵprov = k({
            token: i,
            factory: function () {
              return new cg();
            },
            providedIn: "root",
          })),
          i
        );
      })();
      class cg {
        parse(t) {
          const e = new u4(t);
          return new Wr(
            e.parseRootSegment(),
            e.parseQueryParams(),
            e.parseFragment()
          );
        }
        serialize(t) {
          const e = `/${Ua(t.root, !0)}`,
            n = (function o4(i) {
              const t = Object.keys(i)
                .map((e) => {
                  const n = i[e];
                  return Array.isArray(n)
                    ? n.map((r) => `${Ud(e)}=${Ud(r)}`).join("&")
                    : `${Ud(e)}=${Ud(n)}`;
                })
                .filter((e) => !!e);
              return t.length ? `?${t.join("&")}` : "";
            })(t.queryParams);
          return `${e}${n}${
            "string" == typeof t.fragment
              ? `#${(function n4(i) {
                  return encodeURI(i);
                })(t.fragment)}`
              : ""
          }`;
        }
      }
      const t4 = new cg();
      function zd(i) {
        return i.segments.map((t) => iM(t)).join("/");
      }
      function Ua(i, t) {
        if (!i.hasChildren()) return zd(i);
        if (t) {
          const e = i.children[ie] ? Ua(i.children[ie], !1) : "",
            n = [];
          return (
            At(i.children, (r, o) => {
              o !== ie && n.push(`${o}:${Ua(r, !1)}`);
            }),
            n.length > 0 ? `${e}(${n.join("//")})` : e
          );
        }
        {
          const e = (function e4(i, t) {
            let e = [];
            return (
              At(i.children, (n, r) => {
                r === ie && (e = e.concat(t(n, r)));
              }),
              At(i.children, (n, r) => {
                r !== ie && (e = e.concat(t(n, r)));
              }),
              e
            );
          })(i, (n, r) =>
            r === ie ? [Ua(i.children[ie], !1)] : [`${r}:${Ua(n, !1)}`]
          );
          return 1 === Object.keys(i.children).length && null != i.children[ie]
            ? `${zd(i)}/${e[0]}`
            : `${zd(i)}/(${e.join("//")})`;
        }
      }
      function eM(i) {
        return encodeURIComponent(i)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function Ud(i) {
        return eM(i).replace(/%3B/gi, ";");
      }
      function dg(i) {
        return eM(i)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function $d(i) {
        return decodeURIComponent(i);
      }
      function tM(i) {
        return $d(i.replace(/\+/g, "%20"));
      }
      function iM(i) {
        return `${dg(i.path)}${(function r4(i) {
          return Object.keys(i)
            .map((t) => `;${dg(t)}=${dg(i[t])}`)
            .join("");
        })(i.parameters)}`;
      }
      const s4 = /^[^\/()?;=#]+/;
      function Gd(i) {
        const t = i.match(s4);
        return t ? t[0] : "";
      }
      const a4 = /^[^=?&#]+/,
        c4 = /^[^&#]+/;
      class u4 {
        constructor(t) {
          (this.url = t), (this.remaining = t);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new de([], {})
              : new de([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const t = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(t);
            } while (this.consumeOptional("&"));
          return t;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const t = [];
          for (
            this.peekStartsWith("(") || t.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), t.push(this.parseSegment());
          let e = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (e = this.parseParens(!0)));
          let n = {};
          return (
            this.peekStartsWith("(") && (n = this.parseParens(!1)),
            (t.length > 0 || Object.keys(e).length > 0) &&
              (n[ie] = new de(t, e)),
            n
          );
        }
        parseSegment() {
          const t = Gd(this.remaining);
          if ("" === t && this.peekStartsWith(";")) throw new D(4009, jd);
          return this.capture(t), new Ha($d(t), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const t = {};
          for (; this.consumeOptional(";"); ) this.parseParam(t);
          return t;
        }
        parseParam(t) {
          const e = Gd(this.remaining);
          if (!e) return;
          this.capture(e);
          let n = "";
          if (this.consumeOptional("=")) {
            const r = Gd(this.remaining);
            r && ((n = r), this.capture(n));
          }
          t[$d(e)] = $d(n);
        }
        parseQueryParam(t) {
          const e = (function l4(i) {
            const t = i.match(a4);
            return t ? t[0] : "";
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let n = "";
          if (this.consumeOptional("=")) {
            const s = (function d4(i) {
              const t = i.match(c4);
              return t ? t[0] : "";
            })(this.remaining);
            s && ((n = s), this.capture(n));
          }
          const r = tM(e),
            o = tM(n);
          if (t.hasOwnProperty(r)) {
            let s = t[r];
            Array.isArray(s) || ((s = [s]), (t[r] = s)), s.push(o);
          } else t[r] = o;
        }
        parseParens(t) {
          const e = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const n = Gd(this.remaining),
              r = this.remaining[n.length];
            if ("/" !== r && ")" !== r && ";" !== r) throw new D(4010, jd);
            let o;
            n.indexOf(":") > -1
              ? ((o = n.slice(0, n.indexOf(":"))),
                this.capture(o),
                this.capture(":"))
              : t && (o = ie);
            const s = this.parseChildren();
            (e[o] = 1 === Object.keys(s).length ? s[ie] : new de([], s)),
              this.consumeOptional("//");
          }
          return e;
        }
        peekStartsWith(t) {
          return this.remaining.startsWith(t);
        }
        consumeOptional(t) {
          return (
            !!this.peekStartsWith(t) &&
            ((this.remaining = this.remaining.substring(t.length)), !0)
          );
        }
        capture(t) {
          if (!this.consumeOptional(t)) throw new D(4011, jd);
        }
      }
      function ug(i) {
        return i.segments.length > 0 ? new de([], { [ie]: i }) : i;
      }
      function qd(i) {
        const t = {};
        for (const n of Object.keys(i.children)) {
          const o = qd(i.children[n]);
          (o.segments.length > 0 || o.hasChildren()) && (t[n] = o);
        }
        return (function h4(i) {
          if (1 === i.numberOfChildren && i.children[ie]) {
            const t = i.children[ie];
            return new de(i.segments.concat(t.segments), t.children);
          }
          return i;
        })(new de(i.segments, t));
      }
      function Yr(i) {
        return i instanceof Wr;
      }
      function p4(i, t, e, n, r) {
        if (0 === e.length) return as(t.root, t.root, t.root, n, r);
        const o = (function oM(i) {
          if ("string" == typeof i[0] && 1 === i.length && "/" === i[0])
            return new rM(!0, 0, i);
          let t = 0,
            e = !1;
          const n = i.reduce((r, o, s) => {
            if ("object" == typeof o && null != o) {
              if (o.outlets) {
                const a = {};
                return (
                  At(o.outlets, (l, c) => {
                    a[c] = "string" == typeof l ? l.split("/") : l;
                  }),
                  [...r, { outlets: a }]
                );
              }
              if (o.segmentPath) return [...r, o.segmentPath];
            }
            return "string" != typeof o
              ? [...r, o]
              : 0 === s
              ? (o.split("/").forEach((a, l) => {
                  (0 == l && "." === a) ||
                    (0 == l && "" === a
                      ? (e = !0)
                      : ".." === a
                      ? t++
                      : "" != a && r.push(a));
                }),
                r)
              : [...r, o];
          }, []);
          return new rM(e, t, n);
        })(e);
        return o.toRoot()
          ? as(t.root, t.root, new de([], {}), n, r)
          : (function s(l) {
              const c = (function _4(i, t, e, n) {
                  if (i.isAbsolute) return new ls(t.root, !0, 0);
                  if (-1 === n) return new ls(e, e === t.root, 0);
                  return (function sM(i, t, e) {
                    let n = i,
                      r = t,
                      o = e;
                    for (; o > r; ) {
                      if (((o -= r), (n = n.parent), !n)) throw new D(4005, !1);
                      r = n.segments.length;
                    }
                    return new ls(n, !1, r - o);
                  })(e, n + ($a(i.commands[0]) ? 0 : 1), i.numberOfDoubleDots);
                })(o, t, i.snapshot?._urlSegment, l),
                d = c.processChildren
                  ? cs(c.segmentGroup, c.index, o.commands)
                  : fg(c.segmentGroup, c.index, o.commands);
              return as(t.root, c.segmentGroup, d, n, r);
            })(i.snapshot?._lastPathIndex);
      }
      function $a(i) {
        return (
          "object" == typeof i && null != i && !i.outlets && !i.segmentPath
        );
      }
      function Ga(i) {
        return "object" == typeof i && null != i && i.outlets;
      }
      function as(i, t, e, n, r) {
        let s,
          o = {};
        n &&
          At(n, (l, c) => {
            o[c] = Array.isArray(l) ? l.map((d) => `${d}`) : `${l}`;
          }),
          (s = i === t ? e : nM(i, t, e));
        const a = ug(qd(s));
        return new Wr(a, o, r);
      }
      function nM(i, t, e) {
        const n = {};
        return (
          At(i.children, (r, o) => {
            n[o] = r === t ? e : nM(r, t, e);
          }),
          new de(i.segments, n)
        );
      }
      class rM {
        constructor(t, e, n) {
          if (
            ((this.isAbsolute = t),
            (this.numberOfDoubleDots = e),
            (this.commands = n),
            t && n.length > 0 && $a(n[0]))
          )
            throw new D(4003, !1);
          const r = n.find(Ga);
          if (r && r !== QE(n)) throw new D(4004, !1);
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class ls {
        constructor(t, e, n) {
          (this.segmentGroup = t), (this.processChildren = e), (this.index = n);
        }
      }
      function fg(i, t, e) {
        if (
          (i || (i = new de([], {})),
          0 === i.segments.length && i.hasChildren())
        )
          return cs(i, t, e);
        const n = (function v4(i, t, e) {
            let n = 0,
              r = t;
            const o = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; r < i.segments.length; ) {
              if (n >= e.length) return o;
              const s = i.segments[r],
                a = e[n];
              if (Ga(a)) break;
              const l = `${a}`,
                c = n < e.length - 1 ? e[n + 1] : null;
              if (r > 0 && void 0 === l) break;
              if (l && c && "object" == typeof c && void 0 === c.outlets) {
                if (!lM(l, c, s)) return o;
                n += 2;
              } else {
                if (!lM(l, {}, s)) return o;
                n++;
              }
              r++;
            }
            return { match: !0, pathIndex: r, commandIndex: n };
          })(i, t, e),
          r = e.slice(n.commandIndex);
        if (n.match && n.pathIndex < i.segments.length) {
          const o = new de(i.segments.slice(0, n.pathIndex), {});
          return (
            (o.children[ie] = new de(
              i.segments.slice(n.pathIndex),
              i.children
            )),
            cs(o, 0, r)
          );
        }
        return n.match && 0 === r.length
          ? new de(i.segments, {})
          : n.match && !i.hasChildren()
          ? mg(i, t, e)
          : n.match
          ? cs(i, 0, r)
          : mg(i, t, e);
      }
      function cs(i, t, e) {
        if (0 === e.length) return new de(i.segments, {});
        {
          const n = (function b4(i) {
              return Ga(i[0]) ? i[0].outlets : { [ie]: i };
            })(e),
            r = {};
          return !n[ie] &&
            i.children[ie] &&
            1 === i.numberOfChildren &&
            0 === i.children[ie].segments.length
            ? cs(i.children[ie], t, e)
            : (At(n, (o, s) => {
                "string" == typeof o && (o = [o]),
                  null !== o && (r[s] = fg(i.children[s], t, o));
              }),
              At(i.children, (o, s) => {
                void 0 === n[s] && (r[s] = o);
              }),
              new de(i.segments, r));
        }
      }
      function mg(i, t, e) {
        const n = i.segments.slice(0, t);
        let r = 0;
        for (; r < e.length; ) {
          const o = e[r];
          if (Ga(o)) {
            const l = y4(o.outlets);
            return new de(n, l);
          }
          if (0 === r && $a(e[0])) {
            n.push(new Ha(i.segments[t].path, aM(e[0]))), r++;
            continue;
          }
          const s = Ga(o) ? o.outlets[ie] : `${o}`,
            a = r < e.length - 1 ? e[r + 1] : null;
          s && a && $a(a)
            ? (n.push(new Ha(s, aM(a))), (r += 2))
            : (n.push(new Ha(s, {})), r++);
        }
        return new de(n, {});
      }
      function y4(i) {
        const t = {};
        return (
          At(i, (e, n) => {
            "string" == typeof e && (e = [e]),
              null !== e && (t[n] = mg(new de([], {}), 0, e));
          }),
          t
        );
      }
      function aM(i) {
        const t = {};
        return At(i, (e, n) => (t[n] = `${e}`)), t;
      }
      function lM(i, t, e) {
        return i == e.path && bn(t, e.parameters);
      }
      const qa = "imperative";
      class vn {
        constructor(t, e) {
          (this.id = t), (this.url = e);
        }
      }
      class pg extends vn {
        constructor(t, e, n = "imperative", r = null) {
          super(t, e),
            (this.type = 0),
            (this.navigationTrigger = n),
            (this.restoredState = r);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Kr extends vn {
        constructor(t, e, n) {
          super(t, e), (this.urlAfterRedirects = n), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class Wd extends vn {
        constructor(t, e, n, r) {
          super(t, e), (this.reason = n), (this.code = r), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class cM extends vn {
        constructor(t, e, n, r) {
          super(t, e), (this.reason = n), (this.code = r), (this.type = 16);
        }
      }
      class dM extends vn {
        constructor(t, e, n, r) {
          super(t, e), (this.error = n), (this.target = r), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class w4 extends vn {
        constructor(t, e, n, r) {
          super(t, e),
            (this.urlAfterRedirects = n),
            (this.state = r),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class x4 extends vn {
        constructor(t, e, n, r) {
          super(t, e),
            (this.urlAfterRedirects = n),
            (this.state = r),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class C4 extends vn {
        constructor(t, e, n, r, o) {
          super(t, e),
            (this.urlAfterRedirects = n),
            (this.state = r),
            (this.shouldActivate = o),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class D4 extends vn {
        constructor(t, e, n, r) {
          super(t, e),
            (this.urlAfterRedirects = n),
            (this.state = r),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class E4 extends vn {
        constructor(t, e, n, r) {
          super(t, e),
            (this.urlAfterRedirects = n),
            (this.state = r),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class M4 {
        constructor(t) {
          (this.route = t), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class S4 {
        constructor(t) {
          (this.route = t), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class T4 {
        constructor(t) {
          (this.snapshot = t), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class k4 {
        constructor(t) {
          (this.snapshot = t), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class I4 {
        constructor(t) {
          (this.snapshot = t), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class A4 {
        constructor(t) {
          (this.snapshot = t), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class uM {
        constructor(t, e, n) {
          (this.routerEvent = t),
            (this.position = e),
            (this.anchor = n),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      let O4 = (() => {
          class i {
            createUrlTree(e, n, r, o, s, a) {
              return p4(e || n.root, r, o, s, a);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac })),
            i
          );
        })(),
        F4 = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵprov = k({
              token: i,
              factory: function (t) {
                return O4.ɵfac(t);
              },
              providedIn: "root",
            })),
            i
          );
        })();
      class hM {
        constructor(t) {
          this._root = t;
        }
        get root() {
          return this._root.value;
        }
        parent(t) {
          const e = this.pathFromRoot(t);
          return e.length > 1 ? e[e.length - 2] : null;
        }
        children(t) {
          const e = gg(t, this._root);
          return e ? e.children.map((n) => n.value) : [];
        }
        firstChild(t) {
          const e = gg(t, this._root);
          return e && e.children.length > 0 ? e.children[0].value : null;
        }
        siblings(t) {
          const e = _g(t, this._root);
          return e.length < 2
            ? []
            : e[e.length - 2].children
                .map((r) => r.value)
                .filter((r) => r !== t);
        }
        pathFromRoot(t) {
          return _g(t, this._root).map((e) => e.value);
        }
      }
      function gg(i, t) {
        if (i === t.value) return t;
        for (const e of t.children) {
          const n = gg(i, e);
          if (n) return n;
        }
        return null;
      }
      function _g(i, t) {
        if (i === t.value) return [t];
        for (const e of t.children) {
          const n = _g(i, e);
          if (n.length) return n.unshift(t), n;
        }
        return [];
      }
      class $n {
        constructor(t, e) {
          (this.value = t), (this.children = e);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function ds(i) {
        const t = {};
        return i && i.children.forEach((e) => (t[e.value.outlet] = e)), t;
      }
      class fM extends hM {
        constructor(t, e) {
          super(t), (this.snapshot = e), bg(this, t);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function mM(i, t) {
        const e = (function P4(i, t) {
            const s = new Qd([], {}, {}, "", {}, ie, t, null, i.root, -1, {});
            return new gM("", new $n(s, []));
          })(i, t),
          n = new Jt([new Ha("", {})]),
          r = new Jt({}),
          o = new Jt({}),
          s = new Jt({}),
          a = new Jt(""),
          l = new Xr(n, r, s, a, o, ie, t, e.root);
        return (l.snapshot = e.root), new fM(new $n(l, []), e);
      }
      class Xr {
        constructor(t, e, n, r, o, s, a, l) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = n),
            (this.fragment = r),
            (this.data = o),
            (this.outlet = s),
            (this.component = a),
            (this.title = this.data?.pipe($((c) => c[ja])) ?? j(void 0)),
            (this._futureSnapshot = l);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe($((t) => ss(t)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe($((t) => ss(t)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function pM(i, t = "emptyOnly") {
        const e = i.pathFromRoot;
        let n = 0;
        if ("always" !== t)
          for (n = e.length - 1; n >= 1; ) {
            const r = e[n],
              o = e[n - 1];
            if (r.routeConfig && "" === r.routeConfig.path) n--;
            else {
              if (o.component) break;
              n--;
            }
          }
        return (function N4(i) {
          return i.reduce(
            (t, e) => ({
              params: { ...t.params, ...e.params },
              data: { ...t.data, ...e.data },
              resolve: {
                ...e.data,
                ...t.resolve,
                ...e.routeConfig?.data,
                ...e._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(e.slice(n));
      }
      class Qd {
        get title() {
          return this.data?.[ja];
        }
        constructor(t, e, n, r, o, s, a, l, c, d, u) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = n),
            (this.fragment = r),
            (this.data = o),
            (this.outlet = s),
            (this.component = a),
            (this.routeConfig = l),
            (this._urlSegment = c),
            (this._lastPathIndex = d),
            (this._resolve = u);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = ss(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ss(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((n) => n.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class gM extends hM {
        constructor(t, e) {
          super(e), (this.url = t), bg(this, e);
        }
        toString() {
          return _M(this._root);
        }
      }
      function bg(i, t) {
        (t.value._routerState = i), t.children.forEach((e) => bg(i, e));
      }
      function _M(i) {
        const t =
          i.children.length > 0 ? ` { ${i.children.map(_M).join(", ")} } ` : "";
        return `${i.value}${t}`;
      }
      function vg(i) {
        if (i.snapshot) {
          const t = i.snapshot,
            e = i._futureSnapshot;
          (i.snapshot = e),
            bn(t.queryParams, e.queryParams) ||
              i.queryParams.next(e.queryParams),
            t.fragment !== e.fragment && i.fragment.next(e.fragment),
            bn(t.params, e.params) || i.params.next(e.params),
            (function YU(i, t) {
              if (i.length !== t.length) return !1;
              for (let e = 0; e < i.length; ++e) if (!bn(i[e], t[e])) return !1;
              return !0;
            })(t.url, e.url) || i.url.next(e.url),
            bn(t.data, e.data) || i.data.next(e.data);
        } else
          (i.snapshot = i._futureSnapshot), i.data.next(i._futureSnapshot.data);
      }
      function yg(i, t) {
        const e =
          bn(i.params, t.params) &&
          (function JU(i, t) {
            return (
              Qr(i, t) && i.every((e, n) => bn(e.parameters, t[n].parameters))
            );
          })(i.url, t.url);
        return (
          e &&
          !(!i.parent != !t.parent) &&
          (!i.parent || yg(i.parent, t.parent))
        );
      }
      function Wa(i, t, e) {
        if (e && i.shouldReuseRoute(t.value, e.value.snapshot)) {
          const n = e.value;
          n._futureSnapshot = t.value;
          const r = (function B4(i, t, e) {
            return t.children.map((n) => {
              for (const r of e.children)
                if (i.shouldReuseRoute(n.value, r.value.snapshot))
                  return Wa(i, n, r);
              return Wa(i, n);
            });
          })(i, t, e);
          return new $n(n, r);
        }
        {
          if (i.shouldAttach(t.value)) {
            const o = i.retrieve(t.value);
            if (null !== o) {
              const s = o.route;
              return (
                (s.value._futureSnapshot = t.value),
                (s.children = t.children.map((a) => Wa(i, a))),
                s
              );
            }
          }
          const n = (function V4(i) {
              return new Xr(
                new Jt(i.url),
                new Jt(i.params),
                new Jt(i.queryParams),
                new Jt(i.fragment),
                new Jt(i.data),
                i.outlet,
                i.component,
                i
              );
            })(t.value),
            r = t.children.map((o) => Wa(i, o));
          return new $n(n, r);
        }
      }
      const wg = "ngNavigationCancelingError";
      function bM(i, t) {
        const { redirectTo: e, navigationBehaviorOptions: n } = Yr(t)
            ? { redirectTo: t, navigationBehaviorOptions: void 0 }
            : t,
          r = vM(!1, 0, t);
        return (r.url = e), (r.navigationBehaviorOptions = n), r;
      }
      function vM(i, t, e) {
        const n = new Error("NavigationCancelingError: " + (i || ""));
        return (n[wg] = !0), (n.cancellationCode = t), e && (n.url = e), n;
      }
      function yM(i) {
        return wM(i) && Yr(i.url);
      }
      function wM(i) {
        return i && i[wg];
      }
      class j4 {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.injector = null),
            (this.children = new Qa()),
            (this.attachRef = null);
        }
      }
      let Qa = (() => {
        class i {
          constructor() {
            this.contexts = new Map();
          }
          onChildOutletCreated(e, n) {
            const r = this.getOrCreateContext(e);
            (r.outlet = n), this.contexts.set(e, r);
          }
          onChildOutletDestroyed(e) {
            const n = this.getContext(e);
            n && ((n.outlet = null), (n.attachRef = null));
          }
          onOutletDeactivated() {
            const e = this.contexts;
            return (this.contexts = new Map()), e;
          }
          onOutletReAttached(e) {
            this.contexts = e;
          }
          getOrCreateContext(e) {
            let n = this.getContext(e);
            return n || ((n = new j4()), this.contexts.set(e, n)), n;
          }
          getContext(e) {
            return this.contexts.get(e) || null;
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      const Yd = !1;
      let Kd = (() => {
        class i {
          constructor() {
            (this.activated = null),
              (this._activatedRoute = null),
              (this.name = ie),
              (this.activateEvents = new ve()),
              (this.deactivateEvents = new ve()),
              (this.attachEvents = new ve()),
              (this.detachEvents = new ve()),
              (this.parentContexts = Y(Qa)),
              (this.location = Y(kt)),
              (this.changeDetector = Y(Wi)),
              (this.environmentInjector = Y(sn));
          }
          ngOnChanges(e) {
            if (e.name) {
              const { firstChange: n, previousValue: r } = e.name;
              if (n) return;
              this.isTrackedInParentContexts(r) &&
                (this.deactivate(),
                this.parentContexts.onChildOutletDestroyed(r)),
                this.initializeOutletWithName();
            }
          }
          ngOnDestroy() {
            this.isTrackedInParentContexts(this.name) &&
              this.parentContexts.onChildOutletDestroyed(this.name);
          }
          isTrackedInParentContexts(e) {
            return this.parentContexts.getContext(e)?.outlet === this;
          }
          ngOnInit() {
            this.initializeOutletWithName();
          }
          initializeOutletWithName() {
            if (
              (this.parentContexts.onChildOutletCreated(this.name, this),
              this.activated)
            )
              return;
            const e = this.parentContexts.getContext(this.name);
            e?.route &&
              (e.attachRef
                ? this.attach(e.attachRef, e.route)
                : this.activateWith(e.route, e.injector));
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new D(4012, Yd);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new D(4012, Yd);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new D(4012, Yd);
            this.location.detach();
            const e = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(e.instance),
              e
            );
          }
          attach(e, n) {
            (this.activated = e),
              (this._activatedRoute = n),
              this.location.insert(e.hostView),
              this.attachEvents.emit(e.instance);
          }
          deactivate() {
            if (this.activated) {
              const e = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(e);
            }
          }
          activateWith(e, n) {
            if (this.isActivated) throw new D(4013, Yd);
            this._activatedRoute = e;
            const r = this.location,
              s = e.snapshot.component,
              a = this.parentContexts.getOrCreateContext(this.name).children,
              l = new H4(e, a, r.injector);
            if (
              n &&
              (function z4(i) {
                return !!i.resolveComponentFactory;
              })(n)
            ) {
              const c = n.resolveComponentFactory(s);
              this.activated = r.createComponent(c, r.length, l);
            } else
              this.activated = r.createComponent(s, {
                index: r.length,
                injector: l,
                environmentInjector: n ?? this.environmentInjector,
              });
            this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵdir = M({
            type: i,
            selectors: [["router-outlet"]],
            inputs: { name: "name" },
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
              attachEvents: "attach",
              detachEvents: "detach",
            },
            exportAs: ["outlet"],
            standalone: !0,
            features: [Lt],
          })),
          i
        );
      })();
      class H4 {
        constructor(t, e, n) {
          (this.route = t), (this.childContexts = e), (this.parent = n);
        }
        get(t, e) {
          return t === Xr
            ? this.route
            : t === Qa
            ? this.childContexts
            : this.parent.get(t, e);
        }
      }
      let xg = (() => {
        class i {}
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵcmp = Te({
            type: i,
            selectors: [["ng-component"]],
            standalone: !0,
            features: [Rm],
            decls: 1,
            vars: 0,
            template: function (e, n) {
              1 & e && Ze(0, "router-outlet");
            },
            dependencies: [Kd],
            encapsulation: 2,
          })),
          i
        );
      })();
      function xM(i, t) {
        return (
          i.providers &&
            !i._injector &&
            (i._injector = Gc(i.providers, t, `Route: ${i.path}`)),
          i._injector ?? t
        );
      }
      function Dg(i) {
        const t = i.children && i.children.map(Dg),
          e = t ? { ...i, children: t } : { ...i };
        return (
          !e.component &&
            !e.loadComponent &&
            (t || e.loadChildren) &&
            e.outlet &&
            e.outlet !== ie &&
            (e.component = xg),
          e
        );
      }
      function Oi(i) {
        return i.outlet || ie;
      }
      function CM(i, t) {
        const e = i.filter((n) => Oi(n) === t);
        return e.push(...i.filter((n) => Oi(n) !== t)), e;
      }
      function Ya(i) {
        if (!i) return null;
        if (i.routeConfig?._injector) return i.routeConfig._injector;
        for (let t = i.parent; t; t = t.parent) {
          const e = t.routeConfig;
          if (e?._loadedInjector) return e._loadedInjector;
          if (e?._injector) return e._injector;
        }
        return null;
      }
      class W4 {
        constructor(t, e, n, r) {
          (this.routeReuseStrategy = t),
            (this.futureState = e),
            (this.currState = n),
            (this.forwardEvent = r);
        }
        activate(t) {
          const e = this.futureState._root,
            n = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(e, n, t),
            vg(this.futureState.root),
            this.activateChildRoutes(e, n, t);
        }
        deactivateChildRoutes(t, e, n) {
          const r = ds(e);
          t.children.forEach((o) => {
            const s = o.value.outlet;
            this.deactivateRoutes(o, r[s], n), delete r[s];
          }),
            At(r, (o, s) => {
              this.deactivateRouteAndItsChildren(o, n);
            });
        }
        deactivateRoutes(t, e, n) {
          const r = t.value,
            o = e ? e.value : null;
          if (r === o)
            if (r.component) {
              const s = n.getContext(r.outlet);
              s && this.deactivateChildRoutes(t, e, s.children);
            } else this.deactivateChildRoutes(t, e, n);
          else o && this.deactivateRouteAndItsChildren(e, n);
        }
        deactivateRouteAndItsChildren(t, e) {
          t.value.component &&
          this.routeReuseStrategy.shouldDetach(t.value.snapshot)
            ? this.detachAndStoreRouteSubtree(t, e)
            : this.deactivateRouteAndOutlet(t, e);
        }
        detachAndStoreRouteSubtree(t, e) {
          const n = e.getContext(t.value.outlet),
            r = n && t.value.component ? n.children : e,
            o = ds(t);
          for (const s of Object.keys(o))
            this.deactivateRouteAndItsChildren(o[s], r);
          if (n && n.outlet) {
            const s = n.outlet.detach(),
              a = n.children.onOutletDeactivated();
            this.routeReuseStrategy.store(t.value.snapshot, {
              componentRef: s,
              route: t,
              contexts: a,
            });
          }
        }
        deactivateRouteAndOutlet(t, e) {
          const n = e.getContext(t.value.outlet),
            r = n && t.value.component ? n.children : e,
            o = ds(t);
          for (const s of Object.keys(o))
            this.deactivateRouteAndItsChildren(o[s], r);
          n &&
            n.outlet &&
            (n.outlet.deactivate(),
            n.children.onOutletDeactivated(),
            (n.attachRef = null),
            (n.resolver = null),
            (n.route = null));
        }
        activateChildRoutes(t, e, n) {
          const r = ds(e);
          t.children.forEach((o) => {
            this.activateRoutes(o, r[o.value.outlet], n),
              this.forwardEvent(new A4(o.value.snapshot));
          }),
            t.children.length && this.forwardEvent(new k4(t.value.snapshot));
        }
        activateRoutes(t, e, n) {
          const r = t.value,
            o = e ? e.value : null;
          if ((vg(r), r === o))
            if (r.component) {
              const s = n.getOrCreateContext(r.outlet);
              this.activateChildRoutes(t, e, s.children);
            } else this.activateChildRoutes(t, e, n);
          else if (r.component) {
            const s = n.getOrCreateContext(r.outlet);
            if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
              const a = this.routeReuseStrategy.retrieve(r.snapshot);
              this.routeReuseStrategy.store(r.snapshot, null),
                s.children.onOutletReAttached(a.contexts),
                (s.attachRef = a.componentRef),
                (s.route = a.route.value),
                s.outlet && s.outlet.attach(a.componentRef, a.route.value),
                vg(a.route.value),
                this.activateChildRoutes(t, null, s.children);
            } else {
              const a = Ya(r.snapshot),
                l = a?.get(Pr) ?? null;
              (s.attachRef = null),
                (s.route = r),
                (s.resolver = l),
                (s.injector = a),
                s.outlet && s.outlet.activateWith(r, s.injector),
                this.activateChildRoutes(t, null, s.children);
            }
          } else this.activateChildRoutes(t, null, n);
        }
      }
      class DM {
        constructor(t) {
          (this.path = t), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Xd {
        constructor(t, e) {
          (this.component = t), (this.route = e);
        }
      }
      function Q4(i, t, e) {
        const n = i._root;
        return Ka(n, t ? t._root : null, e, [n.value]);
      }
      function us(i, t) {
        const e = Symbol(),
          n = t.get(i, e);
        return n === e
          ? "function" != typeof i ||
            (function zR(i) {
              return null !== Wl(i);
            })(i)
            ? t.get(i)
            : i
          : n;
      }
      function Ka(
        i,
        t,
        e,
        n,
        r = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const o = ds(t);
        return (
          i.children.forEach((s) => {
            (function K4(
              i,
              t,
              e,
              n,
              r = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const o = i.value,
                s = t ? t.value : null,
                a = e ? e.getContext(i.value.outlet) : null;
              if (s && o.routeConfig === s.routeConfig) {
                const l = (function X4(i, t, e) {
                  if ("function" == typeof e) return e(i, t);
                  switch (e) {
                    case "pathParamsChange":
                      return !Qr(i.url, t.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !Qr(i.url, t.url) || !bn(i.queryParams, t.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !yg(i, t) || !bn(i.queryParams, t.queryParams);
                    default:
                      return !yg(i, t);
                  }
                })(s, o, o.routeConfig.runGuardsAndResolvers);
                l
                  ? r.canActivateChecks.push(new DM(n))
                  : ((o.data = s.data), (o._resolvedData = s._resolvedData)),
                  Ka(i, t, o.component ? (a ? a.children : null) : e, n, r),
                  l &&
                    a &&
                    a.outlet &&
                    a.outlet.isActivated &&
                    r.canDeactivateChecks.push(new Xd(a.outlet.component, s));
              } else
                s && Xa(t, a, r),
                  r.canActivateChecks.push(new DM(n)),
                  Ka(i, null, o.component ? (a ? a.children : null) : e, n, r);
            })(s, o[s.value.outlet], e, n.concat([s.value]), r),
              delete o[s.value.outlet];
          }),
          At(o, (s, a) => Xa(s, e.getContext(a), r)),
          r
        );
      }
      function Xa(i, t, e) {
        const n = ds(i),
          r = i.value;
        At(n, (o, s) => {
          Xa(o, r.component ? (t ? t.children.getContext(s) : null) : t, e);
        }),
          e.canDeactivateChecks.push(
            new Xd(
              r.component && t && t.outlet && t.outlet.isActivated
                ? t.outlet.component
                : null,
              r
            )
          );
      }
      function Za(i) {
        return "function" == typeof i;
      }
      function Eg(i) {
        return i instanceof Pd || "EmptyError" === i?.name;
      }
      const Zd = Symbol("INITIAL_VALUE");
      function hs() {
        return _n((i) =>
          og(i.map((t) => t.pipe(Ri(1), Ld(Zd)))).pipe(
            $((t) => {
              for (const e of t)
                if (!0 !== e) {
                  if (e === Zd) return Zd;
                  if (!1 === e || e instanceof Wr) return e;
                }
              return !0;
            }),
            vi((t) => t !== Zd),
            Ri(1)
          )
        );
      }
      function EM(i) {
        return (function uR(...i) {
          return sv(i);
        })(
          pt((t) => {
            if (Yr(t)) throw bM(0, t);
          }),
          $((t) => !0 === t)
        );
      }
      const Mg = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function MM(i, t, e, n, r) {
        const o = Sg(i, t, e);
        return o.matched
          ? (function p3(i, t, e, n) {
              const r = t.canMatch;
              return r && 0 !== r.length
                ? j(
                    r.map((s) => {
                      const a = us(s, i);
                      return cr(
                        (function r3(i) {
                          return i && Za(i.canMatch);
                        })(a)
                          ? a.canMatch(t, e)
                          : i.runInContext(() => a(t, e))
                      );
                    })
                  ).pipe(hs(), EM())
                : j(!0);
            })((n = xM(t, n)), t, e).pipe($((s) => (!0 === s ? o : { ...Mg })))
          : j(o);
      }
      function Sg(i, t, e) {
        if ("" === t.path)
          return "full" === t.pathMatch && (i.hasChildren() || e.length > 0)
            ? { ...Mg }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: e,
                parameters: {},
                positionalParamSegments: {},
              };
        const r = (t.matcher || QU)(e, i, t);
        if (!r) return { ...Mg };
        const o = {};
        At(r.posParams, (a, l) => {
          o[l] = a.path;
        });
        const s =
          r.consumed.length > 0
            ? { ...o, ...r.consumed[r.consumed.length - 1].parameters }
            : o;
        return {
          matched: !0,
          consumedSegments: r.consumed,
          remainingSegments: e.slice(r.consumed.length),
          parameters: s,
          positionalParamSegments: r.posParams ?? {},
        };
      }
      function Jd(i, t, e, n) {
        if (
          e.length > 0 &&
          (function b3(i, t, e) {
            return e.some((n) => eu(i, t, n) && Oi(n) !== ie);
          })(i, e, n)
        ) {
          const o = new de(
            t,
            (function _3(i, t, e, n) {
              const r = {};
              (r[ie] = n),
                (n._sourceSegment = i),
                (n._segmentIndexShift = t.length);
              for (const o of e)
                if ("" === o.path && Oi(o) !== ie) {
                  const s = new de([], {});
                  (s._sourceSegment = i),
                    (s._segmentIndexShift = t.length),
                    (r[Oi(o)] = s);
                }
              return r;
            })(i, t, n, new de(e, i.children))
          );
          return (
            (o._sourceSegment = i),
            (o._segmentIndexShift = t.length),
            { segmentGroup: o, slicedSegments: [] }
          );
        }
        if (
          0 === e.length &&
          (function v3(i, t, e) {
            return e.some((n) => eu(i, t, n));
          })(i, e, n)
        ) {
          const o = new de(
            i.segments,
            (function g3(i, t, e, n, r) {
              const o = {};
              for (const s of n)
                if (eu(i, e, s) && !r[Oi(s)]) {
                  const a = new de([], {});
                  (a._sourceSegment = i),
                    (a._segmentIndexShift = t.length),
                    (o[Oi(s)] = a);
                }
              return { ...r, ...o };
            })(i, t, e, n, i.children)
          );
          return (
            (o._sourceSegment = i),
            (o._segmentIndexShift = t.length),
            { segmentGroup: o, slicedSegments: e }
          );
        }
        const r = new de(i.segments, i.children);
        return (
          (r._sourceSegment = i),
          (r._segmentIndexShift = t.length),
          { segmentGroup: r, slicedSegments: e }
        );
      }
      function eu(i, t, e) {
        return (
          (!(i.hasChildren() || t.length > 0) || "full" !== e.pathMatch) &&
          "" === e.path
        );
      }
      function SM(i, t, e, n) {
        return (
          !!(Oi(i) === n || (n !== ie && eu(t, e, i))) &&
          ("**" === i.path || Sg(t, i, e).matched)
        );
      }
      function TM(i, t, e) {
        return 0 === t.length && !i.children[e];
      }
      const tu = !1;
      class iu {
        constructor(t) {
          this.segmentGroup = t || null;
        }
      }
      class kM {
        constructor(t) {
          this.urlTree = t;
        }
      }
      function Ja(i) {
        return os(new iu(i));
      }
      function IM(i) {
        return os(new kM(i));
      }
      class C3 {
        constructor(t, e, n, r, o) {
          (this.injector = t),
            (this.configLoader = e),
            (this.urlSerializer = n),
            (this.urlTree = r),
            (this.config = o),
            (this.allowRedirects = !0);
        }
        apply() {
          const t = Jd(this.urlTree.root, [], [], this.config).segmentGroup,
            e = new de(t.segments, t.children);
          return this.expandSegmentGroup(this.injector, this.config, e, ie)
            .pipe(
              $((o) =>
                this.createUrlTree(
                  qd(o),
                  this.urlTree.queryParams,
                  this.urlTree.fragment
                )
              )
            )
            .pipe(
              Un((o) => {
                if (o instanceof kM)
                  return (this.allowRedirects = !1), this.match(o.urlTree);
                throw o instanceof iu ? this.noMatchError(o) : o;
              })
            );
        }
        match(t) {
          return this.expandSegmentGroup(this.injector, this.config, t.root, ie)
            .pipe(
              $((r) => this.createUrlTree(qd(r), t.queryParams, t.fragment))
            )
            .pipe(
              Un((r) => {
                throw r instanceof iu ? this.noMatchError(r) : r;
              })
            );
        }
        noMatchError(t) {
          return new D(4002, tu);
        }
        createUrlTree(t, e, n) {
          const r = ug(t);
          return new Wr(r, e, n);
        }
        expandSegmentGroup(t, e, n, r) {
          return 0 === n.segments.length && n.hasChildren()
            ? this.expandChildren(t, e, n).pipe($((o) => new de([], o)))
            : this.expandSegment(t, n, e, n.segments, r, !0);
        }
        expandChildren(t, e, n) {
          const r = [];
          for (const o of Object.keys(n.children))
            "primary" === o ? r.unshift(o) : r.push(o);
          return Ye(r).pipe(
            lr((o) => {
              const s = n.children[o],
                a = CM(e, o);
              return this.expandSegmentGroup(t, a, s, o).pipe(
                $((l) => ({ segment: l, outlet: o }))
              );
            }),
            $E((o, s) => ((o[s.outlet] = s.segment), o), {}),
            GE()
          );
        }
        expandSegment(t, e, n, r, o, s) {
          return Ye(n).pipe(
            lr((a) =>
              this.expandSegmentAgainstRoute(t, e, n, a, r, o, s).pipe(
                Un((c) => {
                  if (c instanceof iu) return j(null);
                  throw c;
                })
              )
            ),
            ar((a) => !!a),
            Un((a, l) => {
              if (Eg(a)) return TM(e, r, o) ? j(new de([], {})) : Ja(e);
              throw a;
            })
          );
        }
        expandSegmentAgainstRoute(t, e, n, r, o, s, a) {
          return SM(r, e, o, s)
            ? void 0 === r.redirectTo
              ? this.matchSegmentAgainstRoute(t, e, r, o, s)
              : a && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(t, e, n, r, o, s)
              : Ja(e)
            : Ja(e);
        }
        expandSegmentAgainstRouteUsingRedirect(t, e, n, r, o, s) {
          return "**" === r.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(t, n, r, s)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                t,
                e,
                n,
                r,
                o,
                s
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(t, e, n, r) {
          const o = this.applyRedirectCommands([], n.redirectTo, {});
          return n.redirectTo.startsWith("/")
            ? IM(o)
            : this.lineralizeSegments(n, o).pipe(
                Dt((s) => {
                  const a = new de(s, {});
                  return this.expandSegment(t, a, e, s, r, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(t, e, n, r, o, s) {
          const {
            matched: a,
            consumedSegments: l,
            remainingSegments: c,
            positionalParamSegments: d,
          } = Sg(e, r, o);
          if (!a) return Ja(e);
          const u = this.applyRedirectCommands(l, r.redirectTo, d);
          return r.redirectTo.startsWith("/")
            ? IM(u)
            : this.lineralizeSegments(r, u).pipe(
                Dt((h) => this.expandSegment(t, e, n, h.concat(c), s, !1))
              );
        }
        matchSegmentAgainstRoute(t, e, n, r, o) {
          return "**" === n.path
            ? ((t = xM(n, t)),
              n.loadChildren
                ? (n._loadedRoutes
                    ? j({
                        routes: n._loadedRoutes,
                        injector: n._loadedInjector,
                      })
                    : this.configLoader.loadChildren(t, n)
                  ).pipe(
                    $(
                      (a) => (
                        (n._loadedRoutes = a.routes),
                        (n._loadedInjector = a.injector),
                        new de(r, {})
                      )
                    )
                  )
                : j(new de(r, {})))
            : MM(e, n, r, t).pipe(
                _n(
                  ({ matched: s, consumedSegments: a, remainingSegments: l }) =>
                    s
                      ? this.getChildConfig((t = n._injector ?? t), n, r).pipe(
                          Dt((d) => {
                            const u = d.injector ?? t,
                              h = d.routes,
                              { segmentGroup: f, slicedSegments: m } = Jd(
                                e,
                                a,
                                l,
                                h
                              ),
                              p = new de(f.segments, f.children);
                            if (0 === m.length && p.hasChildren())
                              return this.expandChildren(u, h, p).pipe(
                                $((_) => new de(a, _))
                              );
                            if (0 === h.length && 0 === m.length)
                              return j(new de(a, {}));
                            const g = Oi(n) === o;
                            return this.expandSegment(
                              u,
                              p,
                              h,
                              m,
                              g ? ie : o,
                              !0
                            ).pipe(
                              $((y) => new de(a.concat(y.segments), y.children))
                            );
                          })
                        )
                      : Ja(e)
                )
              );
        }
        getChildConfig(t, e, n) {
          return e.children
            ? j({ routes: e.children, injector: t })
            : e.loadChildren
            ? void 0 !== e._loadedRoutes
              ? j({ routes: e._loadedRoutes, injector: e._loadedInjector })
              : (function m3(i, t, e, n) {
                  const r = t.canLoad;
                  return void 0 === r || 0 === r.length
                    ? j(!0)
                    : j(
                        r.map((s) => {
                          const a = us(s, i);
                          return cr(
                            (function J4(i) {
                              return i && Za(i.canLoad);
                            })(a)
                              ? a.canLoad(t, e)
                              : i.runInContext(() => a(t, e))
                          );
                        })
                      ).pipe(hs(), EM());
                })(t, e, n).pipe(
                  Dt((r) =>
                    r
                      ? this.configLoader.loadChildren(t, e).pipe(
                          pt((o) => {
                            (e._loadedRoutes = o.routes),
                              (e._loadedInjector = o.injector);
                          })
                        )
                      : (function w3(i) {
                          return os(vM(tu, 3));
                        })()
                  )
                )
            : j({ routes: [], injector: t });
        }
        lineralizeSegments(t, e) {
          let n = [],
            r = e.root;
          for (;;) {
            if (((n = n.concat(r.segments)), 0 === r.numberOfChildren))
              return j(n);
            if (r.numberOfChildren > 1 || !r.children[ie])
              return os(new D(4e3, tu));
            r = r.children[ie];
          }
        }
        applyRedirectCommands(t, e, n) {
          return this.applyRedirectCreateUrlTree(
            e,
            this.urlSerializer.parse(e),
            t,
            n
          );
        }
        applyRedirectCreateUrlTree(t, e, n, r) {
          const o = this.createSegmentGroup(t, e.root, n, r);
          return new Wr(
            o,
            this.createQueryParams(e.queryParams, this.urlTree.queryParams),
            e.fragment
          );
        }
        createQueryParams(t, e) {
          const n = {};
          return (
            At(t, (r, o) => {
              if ("string" == typeof r && r.startsWith(":")) {
                const a = r.substring(1);
                n[o] = e[a];
              } else n[o] = r;
            }),
            n
          );
        }
        createSegmentGroup(t, e, n, r) {
          const o = this.createSegments(t, e.segments, n, r);
          let s = {};
          return (
            At(e.children, (a, l) => {
              s[l] = this.createSegmentGroup(t, a, n, r);
            }),
            new de(o, s)
          );
        }
        createSegments(t, e, n, r) {
          return e.map((o) =>
            o.path.startsWith(":")
              ? this.findPosParam(t, o, r)
              : this.findOrReturn(o, n)
          );
        }
        findPosParam(t, e, n) {
          const r = n[e.path.substring(1)];
          if (!r) throw new D(4001, tu);
          return r;
        }
        findOrReturn(t, e) {
          let n = 0;
          for (const r of e) {
            if (r.path === t.path) return e.splice(n), r;
            n++;
          }
          return t;
        }
      }
      class E3 {}
      class T3 {
        constructor(t, e, n, r, o, s, a) {
          (this.injector = t),
            (this.rootComponentType = e),
            (this.config = n),
            (this.urlTree = r),
            (this.url = o),
            (this.paramsInheritanceStrategy = s),
            (this.urlSerializer = a);
        }
        recognize() {
          const t = Jd(
            this.urlTree.root,
            [],
            [],
            this.config.filter((e) => void 0 === e.redirectTo)
          ).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            t,
            ie
          ).pipe(
            $((e) => {
              if (null === e) return null;
              const n = new Qd(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  ie,
                  this.rootComponentType,
                  null,
                  this.urlTree.root,
                  -1,
                  {}
                ),
                r = new $n(n, e),
                o = new gM(this.url, r);
              return this.inheritParamsAndData(o._root), o;
            })
          );
        }
        inheritParamsAndData(t) {
          const e = t.value,
            n = pM(e, this.paramsInheritanceStrategy);
          (e.params = Object.freeze(n.params)),
            (e.data = Object.freeze(n.data)),
            t.children.forEach((r) => this.inheritParamsAndData(r));
        }
        processSegmentGroup(t, e, n, r) {
          return 0 === n.segments.length && n.hasChildren()
            ? this.processChildren(t, e, n)
            : this.processSegment(t, e, n, n.segments, r);
        }
        processChildren(t, e, n) {
          return Ye(Object.keys(n.children)).pipe(
            lr((r) => {
              const o = n.children[r],
                s = CM(e, r);
              return this.processSegmentGroup(t, s, o, r);
            }),
            $E((r, o) => (r && o ? (r.push(...o), r) : null)),
            (function GU(i, t = !1) {
              return tt((e, n) => {
                let r = 0;
                e.subscribe(
                  Ge(n, (o) => {
                    const s = i(o, r++);
                    (s || t) && n.next(o), !s && n.complete();
                  })
                );
              });
            })((r) => null !== r),
            Bd(null),
            GE(),
            $((r) => {
              if (null === r) return null;
              const o = RM(r);
              return (
                (function k3(i) {
                  i.sort((t, e) =>
                    t.value.outlet === ie
                      ? -1
                      : e.value.outlet === ie
                      ? 1
                      : t.value.outlet.localeCompare(e.value.outlet)
                  );
                })(o),
                o
              );
            })
          );
        }
        processSegment(t, e, n, r, o) {
          return Ye(e).pipe(
            lr((s) =>
              this.processSegmentAgainstRoute(s._injector ?? t, s, n, r, o)
            ),
            ar((s) => !!s),
            Un((s) => {
              if (Eg(s)) return TM(n, r, o) ? j([]) : j(null);
              throw s;
            })
          );
        }
        processSegmentAgainstRoute(t, e, n, r, o) {
          if (e.redirectTo || !SM(e, n, r, o)) return j(null);
          let s;
          if ("**" === e.path) {
            const a = r.length > 0 ? QE(r).parameters : {},
              l = FM(n) + r.length;
            s = j({
              snapshot: new Qd(
                r,
                a,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                PM(e),
                Oi(e),
                e.component ?? e._loadedComponent ?? null,
                e,
                OM(n),
                l,
                NM(e)
              ),
              consumedSegments: [],
              remainingSegments: [],
            });
          } else
            s = MM(n, e, r, t).pipe(
              $(
                ({
                  matched: a,
                  consumedSegments: l,
                  remainingSegments: c,
                  parameters: d,
                }) => {
                  if (!a) return null;
                  const u = FM(n) + l.length;
                  return {
                    snapshot: new Qd(
                      l,
                      d,
                      Object.freeze({ ...this.urlTree.queryParams }),
                      this.urlTree.fragment,
                      PM(e),
                      Oi(e),
                      e.component ?? e._loadedComponent ?? null,
                      e,
                      OM(n),
                      u,
                      NM(e)
                    ),
                    consumedSegments: l,
                    remainingSegments: c,
                  };
                }
              )
            );
          return s.pipe(
            _n((a) => {
              if (null === a) return j(null);
              const {
                snapshot: l,
                consumedSegments: c,
                remainingSegments: d,
              } = a;
              t = e._injector ?? t;
              const u = e._loadedInjector ?? t,
                h = (function I3(i) {
                  return i.children
                    ? i.children
                    : i.loadChildren
                    ? i._loadedRoutes
                    : [];
                })(e),
                { segmentGroup: f, slicedSegments: m } = Jd(
                  n,
                  c,
                  d,
                  h.filter((g) => void 0 === g.redirectTo)
                );
              if (0 === m.length && f.hasChildren())
                return this.processChildren(u, h, f).pipe(
                  $((g) => (null === g ? null : [new $n(l, g)]))
                );
              if (0 === h.length && 0 === m.length) return j([new $n(l, [])]);
              const p = Oi(e) === o;
              return this.processSegment(u, h, f, m, p ? ie : o).pipe(
                $((g) => (null === g ? null : [new $n(l, g)]))
              );
            })
          );
        }
      }
      function A3(i) {
        const t = i.value.routeConfig;
        return t && "" === t.path && void 0 === t.redirectTo;
      }
      function RM(i) {
        const t = [],
          e = new Set();
        for (const n of i) {
          if (!A3(n)) {
            t.push(n);
            continue;
          }
          const r = t.find((o) => n.value.routeConfig === o.value.routeConfig);
          void 0 !== r ? (r.children.push(...n.children), e.add(r)) : t.push(n);
        }
        for (const n of e) {
          const r = RM(n.children);
          t.push(new $n(n.value, r));
        }
        return t.filter((n) => !e.has(n));
      }
      function OM(i) {
        let t = i;
        for (; t._sourceSegment; ) t = t._sourceSegment;
        return t;
      }
      function FM(i) {
        let t = i,
          e = t._segmentIndexShift ?? 0;
        for (; t._sourceSegment; )
          (t = t._sourceSegment), (e += t._segmentIndexShift ?? 0);
        return e - 1;
      }
      function PM(i) {
        return i.data || {};
      }
      function NM(i) {
        return i.resolve || {};
      }
      function LM(i) {
        return "string" == typeof i.title || null === i.title;
      }
      function Tg(i) {
        return _n((t) => {
          const e = i(t);
          return e ? Ye(e).pipe($(() => t)) : j(t);
        });
      }
      const fs = new E("ROUTES");
      let kg = (() => {
        class i {
          constructor(e, n) {
            (this.injector = e),
              (this.compiler = n),
              (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap());
          }
          loadComponent(e) {
            if (this.componentLoaders.get(e))
              return this.componentLoaders.get(e);
            if (e._loadedComponent) return j(e._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(e);
            const n = cr(e.loadComponent()).pipe(
                $(VM),
                pt((o) => {
                  this.onLoadEndListener && this.onLoadEndListener(e),
                    (e._loadedComponent = o);
                }),
                Vd(() => {
                  this.componentLoaders.delete(e);
                })
              ),
              r = new ag(n, () => new se()).pipe(sg());
            return this.componentLoaders.set(e, r), r;
          }
          loadChildren(e, n) {
            if (this.childrenLoaders.get(n)) return this.childrenLoaders.get(n);
            if (n._loadedRoutes)
              return j({
                routes: n._loadedRoutes,
                injector: n._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(n);
            const o = this.loadModuleFactoryOrRoutes(n.loadChildren).pipe(
                $((a) => {
                  this.onLoadEndListener && this.onLoadEndListener(n);
                  let l,
                    c,
                    d = !1;
                  Array.isArray(a)
                    ? (c = a)
                    : ((l = a.create(e).injector),
                      (c = WE(l.get(fs, [], q.Self | q.Optional))));
                  return { routes: c.map(Dg), injector: l };
                }),
                Vd(() => {
                  this.childrenLoaders.delete(n);
                })
              ),
              s = new ag(o, () => new se()).pipe(sg());
            return this.childrenLoaders.set(n, s), s;
          }
          loadModuleFactoryOrRoutes(e) {
            return cr(e()).pipe(
              $(VM),
              Dt((r) =>
                r instanceof zx || Array.isArray(r)
                  ? j(r)
                  : Ye(this.compiler.compileModuleAsync(r))
              )
            );
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(vt), w(IC));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      function VM(i) {
        return (function j3(i) {
          return i && "object" == typeof i && "default" in i;
        })(i)
          ? i.default
          : i;
      }
      let ru = (() => {
        class i {
          get hasRequestedNavigation() {
            return 0 !== this.navigationId;
          }
          constructor() {
            (this.currentNavigation = null),
              (this.lastSuccessfulNavigation = null),
              (this.events = new se()),
              (this.configLoader = Y(kg)),
              (this.environmentInjector = Y(sn)),
              (this.urlSerializer = Y(za)),
              (this.rootContexts = Y(Qa)),
              (this.navigationId = 0),
              (this.afterPreactivation = () => j(void 0)),
              (this.rootComponentType = null),
              (this.configLoader.onLoadEndListener = (r) =>
                this.events.next(new S4(r))),
              (this.configLoader.onLoadStartListener = (r) =>
                this.events.next(new M4(r)));
          }
          complete() {
            this.transitions?.complete();
          }
          handleNavigationRequest(e) {
            const n = ++this.navigationId;
            this.transitions?.next({ ...this.transitions.value, ...e, id: n });
          }
          setupNavigations(e) {
            return (
              (this.transitions = new Jt({
                id: 0,
                targetPageId: 0,
                currentUrlTree: e.currentUrlTree,
                currentRawUrl: e.currentUrlTree,
                extractedUrl: e.urlHandlingStrategy.extract(e.currentUrlTree),
                urlAfterRedirects: e.urlHandlingStrategy.extract(
                  e.currentUrlTree
                ),
                rawUrl: e.currentUrlTree,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: qa,
                restoredState: null,
                currentSnapshot: e.routerState.snapshot,
                targetSnapshot: null,
                currentRouterState: e.routerState,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              this.transitions.pipe(
                vi((n) => 0 !== n.id),
                $((n) => ({
                  ...n,
                  extractedUrl: e.urlHandlingStrategy.extract(n.rawUrl),
                })),
                _n((n) => {
                  let r = !1,
                    o = !1;
                  return j(n).pipe(
                    pt((s) => {
                      this.currentNavigation = {
                        id: s.id,
                        initialUrl: s.rawUrl,
                        extractedUrl: s.extractedUrl,
                        trigger: s.source,
                        extras: s.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? {
                              ...this.lastSuccessfulNavigation,
                              previousNavigation: null,
                            }
                          : null,
                      };
                    }),
                    _n((s) => {
                      const a = e.browserUrlTree.toString(),
                        l =
                          !e.navigated ||
                          s.extractedUrl.toString() !== a ||
                          a !== e.currentUrlTree.toString();
                      if (
                        !l &&
                        "reload" !==
                          (s.extras.onSameUrlNavigation ??
                            e.onSameUrlNavigation)
                      ) {
                        const d = "";
                        return (
                          this.events.next(
                            new cM(s.id, e.serializeUrl(n.rawUrl), d, 0)
                          ),
                          (e.rawUrlTree = s.rawUrl),
                          s.resolve(null),
                          Ji
                        );
                      }
                      if (e.urlHandlingStrategy.shouldProcessUrl(s.rawUrl))
                        return (
                          jM(s.source) && (e.browserUrlTree = s.extractedUrl),
                          j(s).pipe(
                            _n((d) => {
                              const u = this.transitions?.getValue();
                              return (
                                this.events.next(
                                  new pg(
                                    d.id,
                                    this.urlSerializer.serialize(
                                      d.extractedUrl
                                    ),
                                    d.source,
                                    d.restoredState
                                  )
                                ),
                                u !== this.transitions?.getValue()
                                  ? Ji
                                  : Promise.resolve(d)
                              );
                            }),
                            (function D3(i, t, e, n) {
                              return _n((r) =>
                                (function x3(i, t, e, n, r) {
                                  return new C3(i, t, e, n, r).apply();
                                })(i, t, e, r.extractedUrl, n).pipe(
                                  $((o) => ({ ...r, urlAfterRedirects: o }))
                                )
                              );
                            })(
                              this.environmentInjector,
                              this.configLoader,
                              this.urlSerializer,
                              e.config
                            ),
                            pt((d) => {
                              (this.currentNavigation = {
                                ...this.currentNavigation,
                                finalUrl: d.urlAfterRedirects,
                              }),
                                (n.urlAfterRedirects = d.urlAfterRedirects);
                            }),
                            (function O3(i, t, e, n, r) {
                              return Dt((o) =>
                                (function S3(
                                  i,
                                  t,
                                  e,
                                  n,
                                  r,
                                  o,
                                  s = "emptyOnly"
                                ) {
                                  return new T3(i, t, e, n, r, s, o)
                                    .recognize()
                                    .pipe(
                                      _n((a) =>
                                        null === a
                                          ? (function M3(i) {
                                              return new be((t) => t.error(i));
                                            })(new E3())
                                          : j(a)
                                      )
                                    );
                                })(
                                  i,
                                  t,
                                  e,
                                  o.urlAfterRedirects,
                                  n.serialize(o.urlAfterRedirects),
                                  n,
                                  r
                                ).pipe($((s) => ({ ...o, targetSnapshot: s })))
                              );
                            })(
                              this.environmentInjector,
                              this.rootComponentType,
                              e.config,
                              this.urlSerializer,
                              e.paramsInheritanceStrategy
                            ),
                            pt((d) => {
                              if (
                                ((n.targetSnapshot = d.targetSnapshot),
                                "eager" === e.urlUpdateStrategy)
                              ) {
                                if (!d.extras.skipLocationChange) {
                                  const h = e.urlHandlingStrategy.merge(
                                    d.urlAfterRedirects,
                                    d.rawUrl
                                  );
                                  e.setBrowserUrl(h, d);
                                }
                                e.browserUrlTree = d.urlAfterRedirects;
                              }
                              const u = new w4(
                                d.id,
                                this.urlSerializer.serialize(d.extractedUrl),
                                this.urlSerializer.serialize(
                                  d.urlAfterRedirects
                                ),
                                d.targetSnapshot
                              );
                              this.events.next(u);
                            })
                          )
                        );
                      if (
                        l &&
                        e.urlHandlingStrategy.shouldProcessUrl(e.rawUrlTree)
                      ) {
                        const {
                            id: d,
                            extractedUrl: u,
                            source: h,
                            restoredState: f,
                            extras: m,
                          } = s,
                          p = new pg(d, this.urlSerializer.serialize(u), h, f);
                        this.events.next(p);
                        const g = mM(u, this.rootComponentType).snapshot;
                        return j(
                          (n = {
                            ...s,
                            targetSnapshot: g,
                            urlAfterRedirects: u,
                            extras: {
                              ...m,
                              skipLocationChange: !1,
                              replaceUrl: !1,
                            },
                          })
                        );
                      }
                      {
                        const d = "";
                        return (
                          this.events.next(
                            new cM(s.id, e.serializeUrl(n.extractedUrl), d, 1)
                          ),
                          (e.rawUrlTree = s.rawUrl),
                          s.resolve(null),
                          Ji
                        );
                      }
                    }),
                    pt((s) => {
                      const a = new x4(
                        s.id,
                        this.urlSerializer.serialize(s.extractedUrl),
                        this.urlSerializer.serialize(s.urlAfterRedirects),
                        s.targetSnapshot
                      );
                      this.events.next(a);
                    }),
                    $(
                      (s) =>
                        (n = {
                          ...s,
                          guards: Q4(
                            s.targetSnapshot,
                            s.currentSnapshot,
                            this.rootContexts
                          ),
                        })
                    ),
                    (function s3(i, t) {
                      return Dt((e) => {
                        const {
                          targetSnapshot: n,
                          currentSnapshot: r,
                          guards: {
                            canActivateChecks: o,
                            canDeactivateChecks: s,
                          },
                        } = e;
                        return 0 === s.length && 0 === o.length
                          ? j({ ...e, guardsResult: !0 })
                          : (function a3(i, t, e, n) {
                              return Ye(i).pipe(
                                Dt((r) =>
                                  (function f3(i, t, e, n, r) {
                                    const o =
                                      t && t.routeConfig
                                        ? t.routeConfig.canDeactivate
                                        : null;
                                    return o && 0 !== o.length
                                      ? j(
                                          o.map((a) => {
                                            const l = Ya(t) ?? r,
                                              c = us(a, l);
                                            return cr(
                                              (function n3(i) {
                                                return i && Za(i.canDeactivate);
                                              })(c)
                                                ? c.canDeactivate(i, t, e, n)
                                                : l.runInContext(() =>
                                                    c(i, t, e, n)
                                                  )
                                            ).pipe(ar());
                                          })
                                        ).pipe(hs())
                                      : j(!0);
                                  })(r.component, r.route, e, t, n)
                                ),
                                ar((r) => !0 !== r, !0)
                              );
                            })(s, n, r, i).pipe(
                              Dt((a) =>
                                a &&
                                (function Z4(i) {
                                  return "boolean" == typeof i;
                                })(a)
                                  ? (function l3(i, t, e, n) {
                                      return Ye(t).pipe(
                                        lr((r) =>
                                          Nd(
                                            (function d3(i, t) {
                                              return (
                                                null !== i && t && t(new T4(i)),
                                                j(!0)
                                              );
                                            })(r.route.parent, n),
                                            (function c3(i, t) {
                                              return (
                                                null !== i && t && t(new I4(i)),
                                                j(!0)
                                              );
                                            })(r.route, n),
                                            (function h3(i, t, e) {
                                              const n = t[t.length - 1],
                                                o = t
                                                  .slice(0, t.length - 1)
                                                  .reverse()
                                                  .map((s) =>
                                                    (function Y4(i) {
                                                      const t = i.routeConfig
                                                        ? i.routeConfig
                                                            .canActivateChild
                                                        : null;
                                                      return t && 0 !== t.length
                                                        ? { node: i, guards: t }
                                                        : null;
                                                    })(s)
                                                  )
                                                  .filter((s) => null !== s)
                                                  .map((s) =>
                                                    zE(() =>
                                                      j(
                                                        s.guards.map((l) => {
                                                          const c =
                                                              Ya(s.node) ?? e,
                                                            d = us(l, c);
                                                          return cr(
                                                            (function t3(i) {
                                                              return (
                                                                i &&
                                                                Za(
                                                                  i.canActivateChild
                                                                )
                                                              );
                                                            })(d)
                                                              ? d.canActivateChild(
                                                                  n,
                                                                  i
                                                                )
                                                              : c.runInContext(
                                                                  () => d(n, i)
                                                                )
                                                          ).pipe(ar());
                                                        })
                                                      ).pipe(hs())
                                                    )
                                                  );
                                              return j(o).pipe(hs());
                                            })(i, r.path, e),
                                            (function u3(i, t, e) {
                                              const n = t.routeConfig
                                                ? t.routeConfig.canActivate
                                                : null;
                                              if (!n || 0 === n.length)
                                                return j(!0);
                                              const r = n.map((o) =>
                                                zE(() => {
                                                  const s = Ya(t) ?? e,
                                                    a = us(o, s);
                                                  return cr(
                                                    (function e3(i) {
                                                      return (
                                                        i && Za(i.canActivate)
                                                      );
                                                    })(a)
                                                      ? a.canActivate(t, i)
                                                      : s.runInContext(() =>
                                                          a(t, i)
                                                        )
                                                  ).pipe(ar());
                                                })
                                              );
                                              return j(r).pipe(hs());
                                            })(i, r.route, e)
                                          )
                                        ),
                                        ar((r) => !0 !== r, !0)
                                      );
                                    })(n, o, i, t)
                                  : j(a)
                              ),
                              $((a) => ({ ...e, guardsResult: a }))
                            );
                      });
                    })(this.environmentInjector, (s) => this.events.next(s)),
                    pt((s) => {
                      if (
                        ((n.guardsResult = s.guardsResult), Yr(s.guardsResult))
                      )
                        throw bM(0, s.guardsResult);
                      const a = new C4(
                        s.id,
                        this.urlSerializer.serialize(s.extractedUrl),
                        this.urlSerializer.serialize(s.urlAfterRedirects),
                        s.targetSnapshot,
                        !!s.guardsResult
                      );
                      this.events.next(a);
                    }),
                    vi(
                      (s) =>
                        !!s.guardsResult ||
                        (e.restoreHistory(s),
                        this.cancelNavigationTransition(s, "", 3),
                        !1)
                    ),
                    Tg((s) => {
                      if (s.guards.canActivateChecks.length)
                        return j(s).pipe(
                          pt((a) => {
                            const l = new D4(
                              a.id,
                              this.urlSerializer.serialize(a.extractedUrl),
                              this.urlSerializer.serialize(a.urlAfterRedirects),
                              a.targetSnapshot
                            );
                            this.events.next(l);
                          }),
                          _n((a) => {
                            let l = !1;
                            return j(a).pipe(
                              (function F3(i, t) {
                                return Dt((e) => {
                                  const {
                                    targetSnapshot: n,
                                    guards: { canActivateChecks: r },
                                  } = e;
                                  if (!r.length) return j(e);
                                  let o = 0;
                                  return Ye(r).pipe(
                                    lr((s) =>
                                      (function P3(i, t, e, n) {
                                        const r = i.routeConfig,
                                          o = i._resolve;
                                        return (
                                          void 0 !== r?.title &&
                                            !LM(r) &&
                                            (o[ja] = r.title),
                                          (function N3(i, t, e, n) {
                                            const r = (function L3(i) {
                                              return [
                                                ...Object.keys(i),
                                                ...Object.getOwnPropertySymbols(
                                                  i
                                                ),
                                              ];
                                            })(i);
                                            if (0 === r.length) return j({});
                                            const o = {};
                                            return Ye(r).pipe(
                                              Dt((s) =>
                                                (function B3(i, t, e, n) {
                                                  const r = Ya(t) ?? n,
                                                    o = us(i, r);
                                                  return cr(
                                                    o.resolve
                                                      ? o.resolve(t, e)
                                                      : r.runInContext(() =>
                                                          o(t, e)
                                                        )
                                                  );
                                                })(i[s], t, e, n).pipe(
                                                  ar(),
                                                  pt((a) => {
                                                    o[s] = a;
                                                  })
                                                )
                                              ),
                                              lg(1),
                                              (function qU(i) {
                                                return $(() => i);
                                              })(o),
                                              Un((s) => (Eg(s) ? Ji : os(s)))
                                            );
                                          })(o, i, t, n).pipe(
                                            $(
                                              (s) => (
                                                (i._resolvedData = s),
                                                (i.data = pM(i, e).resolve),
                                                r &&
                                                  LM(r) &&
                                                  (i.data[ja] = r.title),
                                                null
                                              )
                                            )
                                          )
                                        );
                                      })(s.route, n, i, t)
                                    ),
                                    pt(() => o++),
                                    lg(1),
                                    Dt((s) => (o === r.length ? j(e) : Ji))
                                  );
                                });
                              })(
                                e.paramsInheritanceStrategy,
                                this.environmentInjector
                              ),
                              pt({
                                next: () => (l = !0),
                                complete: () => {
                                  l ||
                                    (e.restoreHistory(a),
                                    this.cancelNavigationTransition(a, "", 2));
                                },
                              })
                            );
                          }),
                          pt((a) => {
                            const l = new E4(
                              a.id,
                              this.urlSerializer.serialize(a.extractedUrl),
                              this.urlSerializer.serialize(a.urlAfterRedirects),
                              a.targetSnapshot
                            );
                            this.events.next(l);
                          })
                        );
                    }),
                    Tg((s) => {
                      const a = (l) => {
                        const c = [];
                        l.routeConfig?.loadComponent &&
                          !l.routeConfig._loadedComponent &&
                          c.push(
                            this.configLoader.loadComponent(l.routeConfig).pipe(
                              pt((d) => {
                                l.component = d;
                              }),
                              $(() => {})
                            )
                          );
                        for (const d of l.children) c.push(...a(d));
                        return c;
                      };
                      return og(a(s.targetSnapshot.root)).pipe(Bd(), Ri(1));
                    }),
                    Tg(() => this.afterPreactivation()),
                    $((s) => {
                      const a = (function L4(i, t, e) {
                        const n = Wa(i, t._root, e ? e._root : void 0);
                        return new fM(n, t);
                      })(
                        e.routeReuseStrategy,
                        s.targetSnapshot,
                        s.currentRouterState
                      );
                      return (n = { ...s, targetRouterState: a });
                    }),
                    pt((s) => {
                      (e.currentUrlTree = s.urlAfterRedirects),
                        (e.rawUrlTree = e.urlHandlingStrategy.merge(
                          s.urlAfterRedirects,
                          s.rawUrl
                        )),
                        (e.routerState = s.targetRouterState),
                        "deferred" === e.urlUpdateStrategy &&
                          (s.extras.skipLocationChange ||
                            e.setBrowserUrl(e.rawUrlTree, s),
                          (e.browserUrlTree = s.urlAfterRedirects));
                    }),
                    ((i, t, e) =>
                      $(
                        (n) => (
                          new W4(
                            t,
                            n.targetRouterState,
                            n.currentRouterState,
                            e
                          ).activate(i),
                          n
                        )
                      ))(this.rootContexts, e.routeReuseStrategy, (s) =>
                      this.events.next(s)
                    ),
                    pt({
                      next: (s) => {
                        (r = !0),
                          (this.lastSuccessfulNavigation =
                            this.currentNavigation),
                          (e.navigated = !0),
                          this.events.next(
                            new Kr(
                              s.id,
                              this.urlSerializer.serialize(s.extractedUrl),
                              this.urlSerializer.serialize(e.currentUrlTree)
                            )
                          ),
                          e.titleStrategy?.updateTitle(
                            s.targetRouterState.snapshot
                          ),
                          s.resolve(!0);
                      },
                      complete: () => {
                        r = !0;
                      },
                    }),
                    Vd(() => {
                      r || o || this.cancelNavigationTransition(n, "", 1),
                        this.currentNavigation?.id === n.id &&
                          (this.currentNavigation = null);
                    }),
                    Un((s) => {
                      if (((o = !0), wM(s))) {
                        yM(s) || ((e.navigated = !0), e.restoreHistory(n, !0));
                        const a = new Wd(
                          n.id,
                          this.urlSerializer.serialize(n.extractedUrl),
                          s.message,
                          s.cancellationCode
                        );
                        if ((this.events.next(a), yM(s))) {
                          const l = e.urlHandlingStrategy.merge(
                              s.url,
                              e.rawUrlTree
                            ),
                            c = {
                              skipLocationChange: n.extras.skipLocationChange,
                              replaceUrl:
                                "eager" === e.urlUpdateStrategy || jM(n.source),
                            };
                          e.scheduleNavigation(l, qa, null, c, {
                            resolve: n.resolve,
                            reject: n.reject,
                            promise: n.promise,
                          });
                        } else n.resolve(!1);
                      } else {
                        e.restoreHistory(n, !0);
                        const a = new dM(
                          n.id,
                          this.urlSerializer.serialize(n.extractedUrl),
                          s,
                          n.targetSnapshot ?? void 0
                        );
                        this.events.next(a);
                        try {
                          n.resolve(e.errorHandler(s));
                        } catch (l) {
                          n.reject(l);
                        }
                      }
                      return Ji;
                    })
                  );
                })
              )
            );
          }
          cancelNavigationTransition(e, n, r) {
            const o = new Wd(
              e.id,
              this.urlSerializer.serialize(e.extractedUrl),
              n,
              r
            );
            this.events.next(o), e.resolve(!1);
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      function jM(i) {
        return i !== qa;
      }
      let HM = (() => {
          class i {
            buildTitle(e) {
              let n,
                r = e.root;
              for (; void 0 !== r; )
                (n = this.getResolvedTitleForRoute(r) ?? n),
                  (r = r.children.find((o) => o.outlet === ie));
              return n;
            }
            getResolvedTitleForRoute(e) {
              return e.data[ja];
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵprov = k({
              token: i,
              factory: function () {
                return Y(H3);
              },
              providedIn: "root",
            })),
            i
          );
        })(),
        H3 = (() => {
          class i extends HM {
            constructor(e) {
              super(), (this.title = e);
            }
            updateTitle(e) {
              const n = this.buildTitle(e);
              void 0 !== n && this.title.setTitle(n);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(QD));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })(),
        z3 = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵprov = k({
              token: i,
              factory: function () {
                return Y($3);
              },
              providedIn: "root",
            })),
            i
          );
        })();
      class U3 {
        shouldDetach(t) {
          return !1;
        }
        store(t, e) {}
        shouldAttach(t) {
          return !1;
        }
        retrieve(t) {
          return null;
        }
        shouldReuseRoute(t, e) {
          return t.routeConfig === e.routeConfig;
        }
      }
      let $3 = (() => {
        class i extends U3 {}
        return (
          (i.ɵfac = (function () {
            let t;
            return function (n) {
              return (t || (t = ue(i)))(n || i);
            };
          })()),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      const ou = new E("", { providedIn: "root", factory: () => ({}) });
      let q3 = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵprov = k({
              token: i,
              factory: function () {
                return Y(W3);
              },
              providedIn: "root",
            })),
            i
          );
        })(),
        W3 = (() => {
          class i {
            shouldProcessUrl(e) {
              return !0;
            }
            extract(e) {
              return e;
            }
            merge(e, n) {
              return e;
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })();
      function Q3(i) {
        throw i;
      }
      function Y3(i, t, e) {
        return t.parse("/");
      }
      const K3 = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        X3 = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      let ei = (() => {
        class i {
          get navigationId() {
            return this.navigationTransitions.navigationId;
          }
          get browserPageId() {
            return this.location.getState()?.ɵrouterPageId;
          }
          get events() {
            return this.navigationTransitions.events;
          }
          constructor() {
            (this.disposed = !1),
              (this.currentPageId = 0),
              (this.console = Y(gB)),
              (this.isNgZoneEnabled = !1),
              (this.options = Y(ou, { optional: !0 }) || {}),
              (this.errorHandler = this.options.errorHandler || Q3),
              (this.malformedUriErrorHandler =
                this.options.malformedUriErrorHandler || Y3),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.urlHandlingStrategy = Y(q3)),
              (this.routeReuseStrategy = Y(z3)),
              (this.urlCreationStrategy = Y(F4)),
              (this.titleStrategy = Y(HM)),
              (this.onSameUrlNavigation =
                this.options.onSameUrlNavigation || "ignore"),
              (this.paramsInheritanceStrategy =
                this.options.paramsInheritanceStrategy || "emptyOnly"),
              (this.urlUpdateStrategy =
                this.options.urlUpdateStrategy || "deferred"),
              (this.canceledNavigationResolution =
                this.options.canceledNavigationResolution || "replace"),
              (this.config = WE(Y(fs, { optional: !0 }) ?? [])),
              (this.navigationTransitions = Y(ru)),
              (this.urlSerializer = Y(za)),
              (this.location = Y(nd)),
              (this.isNgZoneEnabled = Y(Z) instanceof Z && Z.isInAngularZone()),
              this.resetConfig(this.config),
              (this.currentUrlTree = new Wr()),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.routerState = mM(this.currentUrlTree, null)),
              this.navigationTransitions.setupNavigations(this).subscribe(
                (e) => {
                  (this.lastSuccessfulId = e.id),
                    (this.currentPageId = e.targetPageId);
                },
                (e) => {
                  this.console.warn(`Unhandled Navigation Error: ${e}`);
                }
              );
          }
          resetRootComponentType(e) {
            (this.routerState.root.component = e),
              (this.navigationTransitions.rootComponentType = e);
          }
          initialNavigation() {
            if (
              (this.setUpLocationChangeListener(),
              !this.navigationTransitions.hasRequestedNavigation)
            ) {
              const e = this.location.getState();
              this.navigateToSyncWithBrowser(this.location.path(!0), qa, e);
            }
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((e) => {
                const n = "popstate" === e.type ? "popstate" : "hashchange";
                "popstate" === n &&
                  setTimeout(() => {
                    this.navigateToSyncWithBrowser(e.url, n, e.state);
                  }, 0);
              }));
          }
          navigateToSyncWithBrowser(e, n, r) {
            const o = { replaceUrl: !0 },
              s = r?.navigationId ? r : null;
            if (r) {
              const l = { ...r };
              delete l.navigationId,
                delete l.ɵrouterPageId,
                0 !== Object.keys(l).length && (o.state = l);
            }
            const a = this.parseUrl(e);
            this.scheduleNavigation(a, n, s, o);
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.navigationTransitions.currentNavigation;
          }
          resetConfig(e) {
            (this.config = e.map(Dg)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.navigationTransitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0);
          }
          createUrlTree(e, n = {}) {
            const {
                relativeTo: r,
                queryParams: o,
                fragment: s,
                queryParamsHandling: a,
                preserveFragment: l,
              } = n,
              c = l ? this.currentUrlTree.fragment : s;
            let d = null;
            switch (a) {
              case "merge":
                d = { ...this.currentUrlTree.queryParams, ...o };
                break;
              case "preserve":
                d = this.currentUrlTree.queryParams;
                break;
              default:
                d = o || null;
            }
            return (
              null !== d && (d = this.removeEmptyProps(d)),
              this.urlCreationStrategy.createUrlTree(
                r,
                this.routerState,
                this.currentUrlTree,
                e,
                d,
                c ?? null
              )
            );
          }
          navigateByUrl(e, n = { skipLocationChange: !1 }) {
            const r = Yr(e) ? e : this.parseUrl(e),
              o = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
            return this.scheduleNavigation(o, qa, null, n);
          }
          navigate(e, n = { skipLocationChange: !1 }) {
            return (
              (function Z3(i) {
                for (let t = 0; t < i.length; t++) {
                  if (null == i[t]) throw new D(4008, !1);
                }
              })(e),
              this.navigateByUrl(this.createUrlTree(e, n), n)
            );
          }
          serializeUrl(e) {
            return this.urlSerializer.serialize(e);
          }
          parseUrl(e) {
            let n;
            try {
              n = this.urlSerializer.parse(e);
            } catch (r) {
              n = this.malformedUriErrorHandler(r, this.urlSerializer, e);
            }
            return n;
          }
          isActive(e, n) {
            let r;
            if (((r = !0 === n ? { ...K3 } : !1 === n ? { ...X3 } : n), Yr(e)))
              return KE(this.currentUrlTree, e, r);
            const o = this.parseUrl(e);
            return KE(this.currentUrlTree, o, r);
          }
          removeEmptyProps(e) {
            return Object.keys(e).reduce((n, r) => {
              const o = e[r];
              return null != o && (n[r] = o), n;
            }, {});
          }
          scheduleNavigation(e, n, r, o, s) {
            if (this.disposed) return Promise.resolve(!1);
            let a, l, c, d;
            return (
              s
                ? ((a = s.resolve), (l = s.reject), (c = s.promise))
                : (c = new Promise((u, h) => {
                    (a = u), (l = h);
                  })),
              (d =
                "computed" === this.canceledNavigationResolution
                  ? r && r.ɵrouterPageId
                    ? r.ɵrouterPageId
                    : o.replaceUrl || o.skipLocationChange
                    ? this.browserPageId ?? 0
                    : (this.browserPageId ?? 0) + 1
                  : 0),
              this.navigationTransitions.handleNavigationRequest({
                targetPageId: d,
                source: n,
                restoredState: r,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                rawUrl: e,
                extras: o,
                resolve: a,
                reject: l,
                promise: c,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              c.catch((u) => Promise.reject(u))
            );
          }
          setBrowserUrl(e, n) {
            const r = this.urlSerializer.serialize(e),
              o = {
                ...n.extras.state,
                ...this.generateNgRouterState(n.id, n.targetPageId),
              };
            this.location.isCurrentPathEqualTo(r) || n.extras.replaceUrl
              ? this.location.replaceState(r, "", o)
              : this.location.go(r, "", o);
          }
          restoreHistory(e, n = !1) {
            if ("computed" === this.canceledNavigationResolution) {
              const r = this.currentPageId - e.targetPageId;
              ("popstate" !== e.source &&
                "eager" !== this.urlUpdateStrategy &&
                this.currentUrlTree !==
                  this.getCurrentNavigation()?.finalUrl) ||
              0 === r
                ? this.currentUrlTree ===
                    this.getCurrentNavigation()?.finalUrl &&
                  0 === r &&
                  (this.resetState(e),
                  (this.browserUrlTree = e.currentUrlTree),
                  this.resetUrlToCurrentUrlTree())
                : this.location.historyGo(r);
            } else
              "replace" === this.canceledNavigationResolution &&
                (n && this.resetState(e), this.resetUrlToCurrentUrlTree());
          }
          resetState(e) {
            (this.routerState = e.currentRouterState),
              (this.currentUrlTree = e.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                e.rawUrl
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId
              )
            );
          }
          generateNgRouterState(e, n) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: e, ɵrouterPageId: n }
              : { navigationId: e };
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      class UM {}
      let t5 = (() => {
        class i {
          constructor(e, n, r, o, s) {
            (this.router = e),
              (this.injector = r),
              (this.preloadingStrategy = o),
              (this.loader = s);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                vi((e) => e instanceof Kr),
                lr(() => this.preload())
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(e, n) {
            const r = [];
            for (const o of n) {
              o.providers &&
                !o._injector &&
                (o._injector = Gc(o.providers, e, `Route: ${o.path}`));
              const s = o._injector ?? e,
                a = o._loadedInjector ?? s;
              (o.loadChildren && !o._loadedRoutes && void 0 === o.canLoad) ||
              (o.loadComponent && !o._loadedComponent)
                ? r.push(this.preloadConfig(s, o))
                : (o.children || o._loadedRoutes) &&
                  r.push(this.processRoutes(a, o.children ?? o._loadedRoutes));
            }
            return Ye(r).pipe(_o());
          }
          preloadConfig(e, n) {
            return this.preloadingStrategy.preload(n, () => {
              let r;
              r =
                n.loadChildren && void 0 === n.canLoad
                  ? this.loader.loadChildren(e, n)
                  : j(null);
              const o = r.pipe(
                Dt((s) =>
                  null === s
                    ? j(void 0)
                    : ((n._loadedRoutes = s.routes),
                      (n._loadedInjector = s.injector),
                      this.processRoutes(s.injector ?? e, s.routes))
                )
              );
              return n.loadComponent && !n._loadedComponent
                ? Ye([o, this.loader.loadComponent(n)]).pipe(_o())
                : o;
            });
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(ei), w(IC), w(sn), w(UM), w(kg));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      const Ag = new E("");
      let $M = (() => {
        class i {
          constructor(e, n, r, o, s = {}) {
            (this.urlSerializer = e),
              (this.transitions = n),
              (this.viewportScroller = r),
              (this.zone = o),
              (this.options = s),
              (this.lastId = 0),
              (this.lastSource = "imperative"),
              (this.restoredId = 0),
              (this.store = {}),
              (s.scrollPositionRestoration =
                s.scrollPositionRestoration || "disabled"),
              (s.anchorScrolling = s.anchorScrolling || "disabled");
          }
          init() {
            "disabled" !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration("manual"),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.transitions.events.subscribe((e) => {
              e instanceof pg
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = e.navigationTrigger),
                  (this.restoredId = e.restoredState
                    ? e.restoredState.navigationId
                    : 0))
                : e instanceof Kr &&
                  ((this.lastId = e.id),
                  this.scheduleScrollEvent(
                    e,
                    this.urlSerializer.parse(e.urlAfterRedirects).fragment
                  ));
            });
          }
          consumeScrollEvents() {
            return this.transitions.events.subscribe((e) => {
              e instanceof uM &&
                (e.position
                  ? "top" === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : "enabled" === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(e.position)
                  : e.anchor && "enabled" === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(e.anchor)
                  : "disabled" !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(e, n) {
            this.zone.runOutsideAngular(() => {
              setTimeout(() => {
                this.zone.run(() => {
                  this.transitions.events.next(
                    new uM(
                      e,
                      "popstate" === this.lastSource
                        ? this.store[this.restoredId]
                        : null,
                      n
                    )
                  );
                });
              }, 0);
            });
          }
          ngOnDestroy() {
            this.routerEventsSubscription?.unsubscribe(),
              this.scrollEventsSubscription?.unsubscribe();
          }
        }
        return (
          (i.ɵfac = function (e) {
            kc();
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      function Zr(i, t) {
        return { ɵkind: i, ɵproviders: t };
      }
      function qM() {
        const i = Y(vt);
        return (t) => {
          const e = i.get(ts);
          if (t !== e.components[0]) return;
          const n = i.get(ei),
            r = i.get(WM);
          1 === i.get(Og) && n.initialNavigation(),
            i.get(QM, null, q.Optional)?.setUpPreloading(),
            i.get(Ag, null, q.Optional)?.init(),
            n.resetRootComponentType(e.componentTypes[0]),
            r.closed || (r.next(), r.unsubscribe());
        };
      }
      const WM = new E("", { factory: () => new se() }),
        Og = new E("", { providedIn: "root", factory: () => 1 });
      const QM = new E("");
      function a5(i) {
        return Zr(0, [
          { provide: QM, useExisting: t5 },
          { provide: UM, useExisting: i },
        ]);
      }
      const YM = new E("ROUTER_FORROOT_GUARD"),
        l5 = [
          nd,
          { provide: za, useClass: cg },
          ei,
          Qa,
          {
            provide: Xr,
            useFactory: function GM(i) {
              return i.routerState.root;
            },
            deps: [ei],
          },
          kg,
          [],
        ];
      function c5() {
        return new LC("Router", ei);
      }
      let KM = (() => {
        class i {
          constructor(e) {}
          static forRoot(e, n) {
            return {
              ngModule: i,
              providers: [
                l5,
                [],
                { provide: fs, multi: !0, useValue: e },
                {
                  provide: YM,
                  useFactory: f5,
                  deps: [[ei, new rn(), new Ir()]],
                },
                { provide: ou, useValue: n || {} },
                n?.useHash
                  ? { provide: Ur, useClass: rV }
                  : { provide: Ur, useClass: sD },
                {
                  provide: Ag,
                  useFactory: () => {
                    const i = Y(Mj),
                      t = Y(Z),
                      e = Y(ou),
                      n = Y(ru),
                      r = Y(za);
                    return (
                      e.scrollOffset && i.setOffset(e.scrollOffset),
                      new $M(r, n, i, t, e)
                    );
                  },
                },
                n?.preloadingStrategy
                  ? a5(n.preloadingStrategy).ɵproviders
                  : [],
                { provide: LC, multi: !0, useFactory: c5 },
                n?.initialNavigation ? m5(n) : [],
                [
                  { provide: XM, useFactory: qM },
                  { provide: kC, multi: !0, useExisting: XM },
                ],
              ],
            };
          }
          static forChild(e) {
            return {
              ngModule: i,
              providers: [{ provide: fs, multi: !0, useValue: e }],
            };
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(YM, 8));
          }),
          (i.ɵmod = K({ type: i })),
          (i.ɵinj = Q({ imports: [xg] })),
          i
        );
      })();
      function f5(i) {
        return "guarded";
      }
      function m5(i) {
        return [
          "disabled" === i.initialNavigation
            ? Zr(3, [
                {
                  provide: Kc,
                  multi: !0,
                  useFactory: () => {
                    const t = Y(ei);
                    return () => {
                      t.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: Og, useValue: 2 },
              ]).ɵproviders
            : [],
          "enabledBlocking" === i.initialNavigation
            ? Zr(2, [
                { provide: Og, useValue: 0 },
                {
                  provide: Kc,
                  multi: !0,
                  deps: [vt],
                  useFactory: (t) => {
                    const e = t.get(iV, Promise.resolve());
                    return () =>
                      e.then(
                        () =>
                          new Promise((r) => {
                            const o = t.get(ei),
                              s = t.get(WM);
                            (function n(r) {
                              t.get(ei)
                                .events.pipe(
                                  vi(
                                    (s) =>
                                      s instanceof Kr ||
                                      s instanceof Wd ||
                                      s instanceof dM
                                  ),
                                  $(
                                    (s) =>
                                      s instanceof Kr ||
                                      (s instanceof Wd &&
                                        (0 === s.code || 1 === s.code) &&
                                        null)
                                  ),
                                  vi((s) => null !== s),
                                  Ri(1)
                                )
                                .subscribe(() => {
                                  r();
                                });
                            })(() => {
                              r(!0);
                            }),
                              (t.get(ru).afterPreactivation = () => (
                                r(!0), s.closed ? j(void 0) : s
                              )),
                              o.initialNavigation();
                          })
                      );
                  },
                },
              ]).ɵproviders
            : [],
        ];
      }
      const XM = new E("");
      function ZM(i, t, e, n, r, o, s) {
        try {
          var a = i[o](s),
            l = a.value;
        } catch (c) {
          return void e(c);
        }
        a.done ? t(l) : Promise.resolve(l).then(n, r);
      }
      function JM(i) {
        return function () {
          var t = this,
            e = arguments;
          return new Promise(function (n, r) {
            var o = i.apply(t, e);
            function s(l) {
              ZM(o, n, r, s, a, "next", l);
            }
            function a(l) {
              ZM(o, n, r, s, a, "throw", l);
            }
            s(void 0);
          });
        };
      }
      function su(i) {
        return vi((t, e) => i <= e);
      }
      const Fg = { now: () => (Fg.delegate || Date).now(), delegate: void 0 };
      class g5 extends se {
        constructor(t = 1 / 0, e = 1 / 0, n = Fg) {
          super(),
            (this._bufferSize = t),
            (this._windowTime = e),
            (this._timestampProvider = n),
            (this._buffer = []),
            (this._infiniteTimeWindow = !0),
            (this._infiniteTimeWindow = e === 1 / 0),
            (this._bufferSize = Math.max(1, t)),
            (this._windowTime = Math.max(1, e));
        }
        next(t) {
          const {
            isStopped: e,
            _buffer: n,
            _infiniteTimeWindow: r,
            _timestampProvider: o,
            _windowTime: s,
          } = this;
          e || (n.push(t), !r && n.push(o.now() + s)),
            this._trimBuffer(),
            super.next(t);
        }
        _subscribe(t) {
          this._throwIfClosed(), this._trimBuffer();
          const e = this._innerSubscribe(t),
            { _infiniteTimeWindow: n, _buffer: r } = this,
            o = r.slice();
          for (let s = 0; s < o.length && !t.closed; s += n ? 1 : 2)
            t.next(o[s]);
          return this._checkFinalizedStatuses(t), e;
        }
        _trimBuffer() {
          const {
              _bufferSize: t,
              _timestampProvider: e,
              _buffer: n,
              _infiniteTimeWindow: r,
            } = this,
            o = (r ? 1 : 2) * t;
          if ((t < 1 / 0 && o < n.length && n.splice(0, n.length - o), !r)) {
            const s = e.now();
            let a = 0;
            for (let l = 1; l < n.length && n[l] <= s; l += 2) a = l;
            a && n.splice(0, a + 1);
          }
        }
      }
      class _5 extends se {
        constructor() {
          super(...arguments),
            (this._value = null),
            (this._hasValue = !1),
            (this._isComplete = !1);
        }
        _checkFinalizedStatuses(t) {
          const {
            hasError: e,
            _hasValue: n,
            _value: r,
            thrownError: o,
            isStopped: s,
            _isComplete: a,
          } = this;
          e ? t.error(o) : (s || a) && (n && t.next(r), t.complete());
        }
        next(t) {
          this.isStopped || ((this._value = t), (this._hasValue = !0));
        }
        complete() {
          const { _hasValue: t, _value: e, _isComplete: n } = this;
          n || ((this._isComplete = !0), t && super.next(e), super.complete());
        }
      }
      class b5 {
        constructor() {}
        loadScript(t, e, n, r = null) {
          if (typeof document < "u" && !document.getElementById(t)) {
            let o = document.createElement("script");
            (o.async = !0),
              (o.src = e),
              (o.onload = n),
              r || (r = document.head),
              r.appendChild(o);
          }
        }
      }
      class v5 {}
      const y5 = { oneTapEnabled: !0 };
      let Pg,
        ps = (() => {
          class i extends b5 {
            constructor(e, n) {
              super(),
                (this.clientId = e),
                (this.initOptions = n),
                (this.changeUser = new ve()),
                (this._socialUser = new Jt(null)),
                (this._accessToken = new Jt(null)),
                (this._receivedAccessToken = new ve()),
                (this.initOptions = { ...y5, ...this.initOptions }),
                this._socialUser.pipe(su(1)).subscribe(this.changeUser),
                this._accessToken
                  .pipe(su(1))
                  .subscribe(this._receivedAccessToken);
            }
            initialize(e) {
              return new Promise((n, r) => {
                try {
                  this.loadScript(
                    i.PROVIDER_ID,
                    "https://accounts.google.com/gsi/client",
                    () => {
                      if (
                        (google.accounts.id.initialize({
                          client_id: this.clientId,
                          auto_select: e,
                          callback: ({ credential: o }) => {
                            const s = this.createSocialUser(o);
                            this._socialUser.next(s);
                          },
                          prompt_parent_id: this.initOptions?.prompt_parent_id,
                          itp_support: this.initOptions.oneTapEnabled,
                        }),
                        this.initOptions.oneTapEnabled &&
                          this._socialUser
                            .pipe(vi((o) => null === o))
                            .subscribe(() =>
                              google.accounts.id.prompt(console.debug)
                            ),
                        this.initOptions.scopes)
                      ) {
                        const o =
                          this.initOptions.scopes instanceof Array
                            ? this.initOptions.scopes.filter((s) => s).join(" ")
                            : this.initOptions.scopes;
                        this._tokenClient =
                          google.accounts.oauth2.initTokenClient({
                            client_id: this.clientId,
                            scope: o,
                            prompt: this.initOptions.prompt,
                            callback: (s) => {
                              s.error
                                ? this._accessToken.error({
                                    code: s.error,
                                    description: s.error_description,
                                    uri: s.error_uri,
                                  })
                                : this._accessToken.next(s.access_token);
                            },
                          });
                      }
                      n();
                    }
                  );
                } catch (o) {
                  r(o);
                }
              });
            }
            getLoginStatus() {
              return new Promise((e, n) => {
                this._socialUser.value
                  ? e(this._socialUser.value)
                  : n(`No user is currently logged in with ${i.PROVIDER_ID}`);
              });
            }
            refreshToken() {
              return new Promise((e, n) => {
                google.accounts.id.revoke(this._socialUser.value.id, (r) => {
                  r.error ? n(r.error) : e(this._socialUser.value);
                });
              });
            }
            getAccessToken() {
              return new Promise((e, n) => {
                this._tokenClient
                  ? (this._tokenClient.requestAccessToken({
                      hint: this._socialUser.value?.email,
                    }),
                    this._receivedAccessToken.pipe(Ri(1)).subscribe(e))
                  : n(
                      this._socialUser.value
                        ? "No token client was instantiated, you should specify some scopes."
                        : "You should be logged-in first."
                    );
              });
            }
            revokeAccessToken() {
              return new Promise((e, n) => {
                this._tokenClient
                  ? this._accessToken.value
                    ? google.accounts.oauth2.revoke(
                        this._accessToken.value,
                        () => {
                          this._accessToken.next(null), e();
                        }
                      )
                    : n("No access token to revoke")
                  : n(
                      "No token client was instantiated, you should specify some scopes."
                    );
              });
            }
            signIn() {
              return Promise.reject(
                'You should not call this method directly for Google, use "<asl-google-signin-button>" wrapper or generate the button yourself with "google.accounts.id.renderButton()" (https://developers.google.com/identity/gsi/web/guides/display-button#javascript)'
              );
            }
            signOut() {
              var e = this;
              return JM(function* () {
                google.accounts.id.disableAutoSelect(),
                  e._socialUser.next(null);
              })();
            }
            createSocialUser(e) {
              const n = new v5();
              n.idToken = e;
              const r = this.decodeJwt(e);
              return (
                (n.id = r.sub),
                (n.name = r.name),
                (n.email = r.email),
                (n.photoUrl = r.picture),
                (n.firstName = r.given_name),
                (n.lastName = r.family_name),
                n
              );
            }
            decodeJwt(e) {
              const r = e.split(".")[1].replace(/-/g, "+").replace(/_/g, "/"),
                o = decodeURIComponent(
                  window
                    .atob(r)
                    .split("")
                    .map(function (s) {
                      return (
                        "%" + ("00" + s.charCodeAt(0).toString(16)).slice(-2)
                      );
                    })
                    .join("")
                );
              return JSON.parse(o);
            }
          }
          return (i.PROVIDER_ID = "GOOGLE"), i;
        })(),
        au = (() => {
          class i {
            get authState() {
              return this._authState.asObservable();
            }
            get initState() {
              return this._initState.asObservable();
            }
            constructor(e, n, r) {
              (this._ngZone = n),
                (this._injector = r),
                (this.providers = new Map()),
                (this.autoLogin = !1),
                (this._user = null),
                (this._authState = new g5(1)),
                (this.initialized = !1),
                (this._initState = new _5()),
                e instanceof Promise
                  ? e.then((o) => {
                      this.initialize(o);
                    })
                  : this.initialize(e);
            }
            initialize(e) {
              this.autoLogin = void 0 !== e.autoLogin && e.autoLogin;
              const { onError: n = console.error } = e;
              e.providers.forEach((r) => {
                this.providers.set(
                  r.id,
                  "prototype" in r.provider
                    ? this._injector.get(r.provider)
                    : r.provider
                );
              }),
                Promise.all(
                  Array.from(this.providers.values()).map((r) =>
                    r.initialize(this.autoLogin)
                  )
                )
                  .then(() => {
                    if (this.autoLogin) {
                      const r = [];
                      let o = !1;
                      this.providers.forEach((s, a) => {
                        const l = s.getLoginStatus();
                        r.push(l),
                          l
                            .then((c) => {
                              this.setUser(c, a), (o = !0);
                            })
                            .catch(console.debug);
                      }),
                        Promise.all(r).catch(() => {
                          o ||
                            ((this._user = null), this._authState.next(null));
                        });
                    }
                    this.providers.forEach((r, o) => {
                      (function eS(i) {
                        return (
                          !!i &&
                          (i instanceof be || (_e(i.lift) && _e(i.subscribe)))
                        );
                      })(r.changeUser) &&
                        r.changeUser.subscribe((s) => {
                          this._ngZone.run(() => {
                            this.setUser(s, o);
                          });
                        });
                    });
                  })
                  .catch((r) => {
                    n(r);
                  })
                  .finally(() => {
                    (this.initialized = !0),
                      this._initState.next(this.initialized),
                      this._initState.complete();
                  });
            }
            getAccessToken(e) {
              var n = this;
              return JM(function* () {
                const r = n.providers.get(e);
                if (!n.initialized) throw i.ERR_NOT_INITIALIZED;
                if (!r) throw i.ERR_LOGIN_PROVIDER_NOT_FOUND;
                if (!(r instanceof ps))
                  throw i.ERR_NOT_SUPPORTED_FOR_ACCESS_TOKEN;
                return yield r.getAccessToken();
              })();
            }
            refreshAuthToken(e) {
              return new Promise((n, r) => {
                if (this.initialized) {
                  const o = this.providers.get(e);
                  o
                    ? "function" != typeof o.refreshToken
                      ? r(i.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN)
                      : o
                          .refreshToken()
                          .then((s) => {
                            this.setUser(s, e), n();
                          })
                          .catch((s) => {
                            r(s);
                          })
                    : r(i.ERR_LOGIN_PROVIDER_NOT_FOUND);
                } else r(i.ERR_NOT_INITIALIZED);
              });
            }
            refreshAccessToken(e) {
              return new Promise((n, r) => {
                if (this.initialized)
                  if (e !== ps.PROVIDER_ID)
                    r(i.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN);
                  else {
                    const o = this.providers.get(e);
                    o instanceof ps
                      ? o.revokeAccessToken().then(n).catch(r)
                      : r(i.ERR_LOGIN_PROVIDER_NOT_FOUND);
                  }
                else r(i.ERR_NOT_INITIALIZED);
              });
            }
            signIn(e, n) {
              return new Promise((r, o) => {
                if (this.initialized) {
                  let s = this.providers.get(e);
                  s
                    ? s
                        .signIn(n)
                        .then((a) => {
                          this.setUser(a, e), r(a);
                        })
                        .catch((a) => {
                          o(a);
                        })
                    : o(i.ERR_LOGIN_PROVIDER_NOT_FOUND);
                } else o(i.ERR_NOT_INITIALIZED);
              });
            }
            signOut(e = !1) {
              return new Promise((n, r) => {
                if (this.initialized)
                  if (this._user) {
                    let s = this.providers.get(this._user.provider);
                    s
                      ? s
                          .signOut(e)
                          .then(() => {
                            n(), this.setUser(null);
                          })
                          .catch((a) => {
                            r(a);
                          })
                      : r(i.ERR_LOGIN_PROVIDER_NOT_FOUND);
                  } else r(i.ERR_NOT_LOGGED_IN);
                else r(i.ERR_NOT_INITIALIZED);
              });
            }
            setUser(e, n) {
              e && n && (e.provider = n),
                (this._user = e),
                this._authState.next(e);
            }
          }
          return (
            (i.ERR_LOGIN_PROVIDER_NOT_FOUND = "Login provider not found"),
            (i.ERR_NOT_LOGGED_IN = "Not logged in"),
            (i.ERR_NOT_INITIALIZED =
              "Login providers not ready yet. Are there errors on your console?"),
            (i.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN =
              "Chosen login provider is not supported for refreshing a token"),
            (i.ERR_NOT_SUPPORTED_FOR_ACCESS_TOKEN =
              "Chosen login provider is not supported for getting an access token"),
            (i.ɵfac = function (e) {
              return new (e || i)(w("SocialAuthServiceConfig"), w(Z), w(vt));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })(),
        w5 = (() => {
          class i {
            static initialize(e) {
              return {
                ngModule: i,
                providers: [
                  au,
                  { provide: "SocialAuthServiceConfig", useValue: e },
                ],
              };
            }
            constructor(e) {
              if (e)
                throw new Error(
                  "SocialLoginModule is already loaded. Import it in the AppModule only"
                );
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(i, 12));
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ providers: [au], imports: [gi] })),
            i
          );
        })();
      try {
        Pg = typeof Intl < "u" && Intl.v8BreakIterator;
      } catch {
        Pg = !1;
      }
      let tl,
        lu,
        eo,
        Ng,
        zt = (() => {
          class i {
            constructor(e) {
              (this._platformId = e),
                (this.isBrowser = this._platformId
                  ? (function Ej(i) {
                      return i === ED;
                    })(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !Pg) &&
                  typeof CSS < "u" &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(Zc));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })();
      function Jr(i) {
        return (function x5() {
          if (null == tl && typeof window < "u")
            try {
              window.addEventListener(
                "test",
                null,
                Object.defineProperty({}, "passive", { get: () => (tl = !0) })
              );
            } finally {
              tl = tl || !1;
            }
          return tl;
        })()
          ? i
          : !!i.capture;
      }
      function iS() {
        if (null == eo) {
          if (
            "object" != typeof document ||
            !document ||
            "function" != typeof Element ||
            !Element
          )
            return (eo = !1), eo;
          if ("scrollBehavior" in document.documentElement.style) eo = !0;
          else {
            const i = Element.prototype.scrollTo;
            eo = !!i && !/\{\s*\[native code\]\s*\}/.test(i.toString());
          }
        }
        return eo;
      }
      function il() {
        if ("object" != typeof document || !document) return 0;
        if (null == lu) {
          const i = document.createElement("div"),
            t = i.style;
          (i.dir = "rtl"),
            (t.width = "1px"),
            (t.overflow = "auto"),
            (t.visibility = "hidden"),
            (t.pointerEvents = "none"),
            (t.position = "absolute");
          const e = document.createElement("div"),
            n = e.style;
          (n.width = "2px"),
            (n.height = "1px"),
            i.appendChild(e),
            document.body.appendChild(i),
            (lu = 0),
            0 === i.scrollLeft &&
              ((i.scrollLeft = 1), (lu = 0 === i.scrollLeft ? 1 : 2)),
            i.remove();
        }
        return lu;
      }
      function dr(i) {
        return i.composedPath ? i.composedPath()[0] : i.target;
      }
      function Lg() {
        return (
          (typeof __karma__ < "u" && !!__karma__) ||
          (typeof jasmine < "u" && !!jasmine) ||
          (typeof jest < "u" && !!jest) ||
          (typeof Mocha < "u" && !!Mocha)
        );
      }
      class G5 extends ut {
        constructor(t, e) {
          super();
        }
        schedule(t, e = 0) {
          return this;
        }
      }
      const cu = {
        setInterval(i, t, ...e) {
          const { delegate: n } = cu;
          return n?.setInterval
            ? n.setInterval(i, t, ...e)
            : setInterval(i, t, ...e);
        },
        clearInterval(i) {
          const { delegate: t } = cu;
          return (t?.clearInterval || clearInterval)(i);
        },
        delegate: void 0,
      };
      class du extends G5 {
        constructor(t, e) {
          super(t, e),
            (this.scheduler = t),
            (this.work = e),
            (this.pending = !1);
        }
        schedule(t, e = 0) {
          var n;
          if (this.closed) return this;
          this.state = t;
          const r = this.id,
            o = this.scheduler;
          return (
            null != r && (this.id = this.recycleAsyncId(o, r, e)),
            (this.pending = !0),
            (this.delay = e),
            (this.id =
              null !== (n = this.id) && void 0 !== n
                ? n
                : this.requestAsyncId(o, this.id, e)),
            this
          );
        }
        requestAsyncId(t, e, n = 0) {
          return cu.setInterval(t.flush.bind(t, this), n);
        }
        recycleAsyncId(t, e, n = 0) {
          if (null != n && this.delay === n && !1 === this.pending) return e;
          null != e && cu.clearInterval(e);
        }
        execute(t, e) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const n = this._execute(t, e);
          if (n) return n;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(t, e) {
          let r,
            n = !1;
          try {
            this.work(t);
          } catch (o) {
            (n = !0),
              (r = o || new Error("Scheduled action threw falsy error"));
          }
          if (n) return this.unsubscribe(), r;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: t, scheduler: e } = this,
              { actions: n } = e;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              go(n, this),
              null != t && (this.id = this.recycleAsyncId(e, t, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
      class nl {
        constructor(t, e = nl.now) {
          (this.schedulerActionCtor = t), (this.now = e);
        }
        schedule(t, e = 0, n) {
          return new this.schedulerActionCtor(this, t).schedule(n, e);
        }
      }
      nl.now = Fg.now;
      class uu extends nl {
        constructor(t, e = nl.now) {
          super(t, e), (this.actions = []), (this._active = !1);
        }
        flush(t) {
          const { actions: e } = this;
          if (this._active) return void e.push(t);
          let n;
          this._active = !0;
          do {
            if ((n = t.execute(t.state, t.delay))) break;
          } while ((t = e.shift()));
          if (((this._active = !1), n)) {
            for (; (t = e.shift()); ) t.unsubscribe();
            throw n;
          }
        }
      }
      const Bg = new uu(du),
        q5 = Bg;
      function Q5(i, t) {
        return i === t;
      }
      function yi(i) {
        return tt((t, e) => {
          Gt(i).subscribe(Ge(e, () => e.complete(), bh)),
            !e.closed && t.subscribe(e);
        });
      }
      function ze(i) {
        return null != i && "false" != `${i}`;
      }
      function hu(i) {
        return Array.isArray(i) ? i : [i];
      }
      function gt(i) {
        return null == i ? "" : "string" == typeof i ? i : `${i}px`;
      }
      function to(i) {
        return i instanceof ce ? i.nativeElement : i;
      }
      let oS = (() => {
          class i {
            create(e) {
              return typeof MutationObserver > "u"
                ? null
                : new MutationObserver(e);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })(),
        fu = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ providers: [oS] })),
            i
          );
        })();
      const sS = new Set();
      let _s,
        Z5 = (() => {
          class i {
            constructor(e) {
              (this._platform = e),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia
                    ? window.matchMedia.bind(window)
                    : e8);
            }
            matchMedia(e) {
              return (
                (this._platform.WEBKIT || this._platform.BLINK) &&
                  (function J5(i) {
                    if (!sS.has(i))
                      try {
                        _s ||
                          ((_s = document.createElement("style")),
                          _s.setAttribute("type", "text/css"),
                          document.head.appendChild(_s)),
                          _s.sheet &&
                            (_s.sheet.insertRule(`@media ${i} {body{ }}`, 0),
                            sS.add(i));
                      } catch (t) {
                        console.error(t);
                      }
                  })(e),
                this._matchMedia(e)
              );
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(zt));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })();
      function e8(i) {
        return {
          matches: "all" === i || "" === i,
          media: i,
          addListener: () => {},
          removeListener: () => {},
        };
      }
      let Hg = (() => {
        class i {
          constructor(e, n) {
            (this._mediaMatcher = e),
              (this._zone = n),
              (this._queries = new Map()),
              (this._destroySubject = new se());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(e) {
            return aS(hu(e)).some((r) => this._registerQuery(r).mql.matches);
          }
          observe(e) {
            let o = og(aS(hu(e)).map((s) => this._registerQuery(s).observable));
            return (
              (o = Nd(
                o.pipe(Ri(1)),
                o.pipe(
                  su(1),
                  (function Vg(i, t = Bg) {
                    return tt((e, n) => {
                      let r = null,
                        o = null,
                        s = null;
                      const a = () => {
                        if (r) {
                          r.unsubscribe(), (r = null);
                          const c = o;
                          (o = null), n.next(c);
                        }
                      };
                      function l() {
                        const c = s + i,
                          d = t.now();
                        if (d < c)
                          return (
                            (r = this.schedule(void 0, c - d)), void n.add(r)
                          );
                        a();
                      }
                      e.subscribe(
                        Ge(
                          n,
                          (c) => {
                            (o = c),
                              (s = t.now()),
                              r || ((r = t.schedule(l, i)), n.add(r));
                          },
                          () => {
                            a(), n.complete();
                          },
                          void 0,
                          () => {
                            o = r = null;
                          }
                        )
                      );
                    });
                  })(0)
                )
              )),
              o.pipe(
                $((s) => {
                  const a = { matches: !1, breakpoints: {} };
                  return (
                    s.forEach(({ matches: l, query: c }) => {
                      (a.matches = a.matches || l), (a.breakpoints[c] = l);
                    }),
                    a
                  );
                })
              )
            );
          }
          _registerQuery(e) {
            if (this._queries.has(e)) return this._queries.get(e);
            const n = this._mediaMatcher.matchMedia(e),
              o = {
                observable: new be((s) => {
                  const a = (l) => this._zone.run(() => s.next(l));
                  return (
                    n.addListener(a),
                    () => {
                      n.removeListener(a);
                    }
                  );
                }).pipe(
                  Ld(n),
                  $(({ matches: s }) => ({ query: e, matches: s })),
                  yi(this._destroySubject)
                ),
                mql: n,
              };
            return this._queries.set(e, o), o;
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(Z5), w(Z));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      function aS(i) {
        return i
          .map((t) => t.split(","))
          .reduce((t, e) => t.concat(e))
          .map((t) => t.trim());
      }
      function uS(i) {
        return 0 === i.buttons || (0 === i.offsetX && 0 === i.offsetY);
      }
      function hS(i) {
        const t =
          (i.touches && i.touches[0]) ||
          (i.changedTouches && i.changedTouches[0]);
        return !(
          !t ||
          -1 !== t.identifier ||
          (null != t.radiusX && 1 !== t.radiusX) ||
          (null != t.radiusY && 1 !== t.radiusY)
        );
      }
      const h8 = new E("cdk-input-modality-detector-options"),
        f8 = { ignoreKeys: [18, 17, 224, 91, 16] },
        bs = Jr({ passive: !0, capture: !0 });
      let m8 = (() => {
        class i {
          get mostRecentModality() {
            return this._modality.value;
          }
          constructor(e, n, r, o) {
            (this._platform = e),
              (this._mostRecentTarget = null),
              (this._modality = new Jt(null)),
              (this._lastTouchMs = 0),
              (this._onKeydown = (s) => {
                this._options?.ignoreKeys?.some((a) => a === s.keyCode) ||
                  (this._modality.next("keyboard"),
                  (this._mostRecentTarget = dr(s)));
              }),
              (this._onMousedown = (s) => {
                Date.now() - this._lastTouchMs < 650 ||
                  (this._modality.next(uS(s) ? "keyboard" : "mouse"),
                  (this._mostRecentTarget = dr(s)));
              }),
              (this._onTouchstart = (s) => {
                hS(s)
                  ? this._modality.next("keyboard")
                  : ((this._lastTouchMs = Date.now()),
                    this._modality.next("touch"),
                    (this._mostRecentTarget = dr(s)));
              }),
              (this._options = { ...f8, ...o }),
              (this.modalityDetected = this._modality.pipe(su(1))),
              (this.modalityChanged = this.modalityDetected.pipe(
                (function W5(i, t = Yn) {
                  return (
                    (i = i ?? Q5),
                    tt((e, n) => {
                      let r,
                        o = !0;
                      e.subscribe(
                        Ge(n, (s) => {
                          const a = t(s);
                          (o || !i(r, a)) && ((o = !1), (r = a), n.next(s));
                        })
                      );
                    })
                  );
                })()
              )),
              e.isBrowser &&
                n.runOutsideAngular(() => {
                  r.addEventListener("keydown", this._onKeydown, bs),
                    r.addEventListener("mousedown", this._onMousedown, bs),
                    r.addEventListener("touchstart", this._onTouchstart, bs);
                });
          }
          ngOnDestroy() {
            this._modality.complete(),
              this._platform.isBrowser &&
                (document.removeEventListener("keydown", this._onKeydown, bs),
                document.removeEventListener(
                  "mousedown",
                  this._onMousedown,
                  bs
                ),
                document.removeEventListener(
                  "touchstart",
                  this._onTouchstart,
                  bs
                ));
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(zt), w(Z), w(le), w(h8, 8));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      const p8 = new E("liveAnnouncerElement", {
          providedIn: "root",
          factory: function g8() {
            return null;
          },
        }),
        _8 = new E("LIVE_ANNOUNCER_DEFAULT_OPTIONS");
      let b8 = 0,
        mS = (() => {
          class i {
            constructor(e, n, r, o) {
              (this._ngZone = n),
                (this._defaultOptions = o),
                (this._document = r),
                (this._liveElement = e || this._createLiveElement());
            }
            announce(e, ...n) {
              const r = this._defaultOptions;
              let o, s;
              return (
                1 === n.length && "number" == typeof n[0]
                  ? (s = n[0])
                  : ([o, s] = n),
                this.clear(),
                clearTimeout(this._previousTimeout),
                o || (o = r && r.politeness ? r.politeness : "polite"),
                null == s && r && (s = r.duration),
                this._liveElement.setAttribute("aria-live", o),
                this._liveElement.id &&
                  this._exposeAnnouncerToModals(this._liveElement.id),
                this._ngZone.runOutsideAngular(
                  () => (
                    this._currentPromise ||
                      (this._currentPromise = new Promise(
                        (a) => (this._currentResolve = a)
                      )),
                    clearTimeout(this._previousTimeout),
                    (this._previousTimeout = setTimeout(() => {
                      (this._liveElement.textContent = e),
                        "number" == typeof s &&
                          (this._previousTimeout = setTimeout(
                            () => this.clear(),
                            s
                          )),
                        this._currentResolve(),
                        (this._currentPromise = this._currentResolve = void 0);
                    }, 100)),
                    this._currentPromise
                  )
                )
              );
            }
            clear() {
              this._liveElement && (this._liveElement.textContent = "");
            }
            ngOnDestroy() {
              clearTimeout(this._previousTimeout),
                this._liveElement?.remove(),
                (this._liveElement = null),
                this._currentResolve?.(),
                (this._currentPromise = this._currentResolve = void 0);
            }
            _createLiveElement() {
              const e = "cdk-live-announcer-element",
                n = this._document.getElementsByClassName(e),
                r = this._document.createElement("div");
              for (let o = 0; o < n.length; o++) n[o].remove();
              return (
                r.classList.add(e),
                r.classList.add("cdk-visually-hidden"),
                r.setAttribute("aria-atomic", "true"),
                r.setAttribute("aria-live", "polite"),
                (r.id = "cdk-live-announcer-" + b8++),
                this._document.body.appendChild(r),
                r
              );
            }
            _exposeAnnouncerToModals(e) {
              const n = this._document.querySelectorAll(
                'body > .cdk-overlay-container [aria-modal="true"]'
              );
              for (let r = 0; r < n.length; r++) {
                const o = n[r],
                  s = o.getAttribute("aria-owns");
                s
                  ? -1 === s.indexOf(e) &&
                    o.setAttribute("aria-owns", s + " " + e)
                  : o.setAttribute("aria-owns", e);
              }
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(p8, 8), w(Z), w(le), w(_8, 8));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })();
      const v8 = new E("cdk-focus-monitor-default-options"),
        mu = Jr({ passive: !0, capture: !0 });
      let zg = (() => {
        class i {
          constructor(e, n, r, o, s) {
            (this._ngZone = e),
              (this._platform = n),
              (this._inputModalityDetector = r),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._originFromTouchInteraction = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0),
                  (this._windowFocusTimeoutId = window.setTimeout(
                    () => (this._windowFocused = !1)
                  ));
              }),
              (this._stopInputModalityDetector = new se()),
              (this._rootNodeFocusAndBlurListener = (a) => {
                for (let c = dr(a); c; c = c.parentElement)
                  "focus" === a.type ? this._onFocus(a, c) : this._onBlur(a, c);
              }),
              (this._document = o),
              (this._detectionMode = s?.detectionMode || 0);
          }
          monitor(e, n = !1) {
            const r = to(e);
            if (!this._platform.isBrowser || 1 !== r.nodeType) return j(null);
            const o =
                (function D5(i) {
                  if (
                    (function C5() {
                      if (null == Ng) {
                        const i = typeof document < "u" ? document.head : null;
                        Ng = !(!i || (!i.createShadowRoot && !i.attachShadow));
                      }
                      return Ng;
                    })()
                  ) {
                    const t = i.getRootNode ? i.getRootNode() : null;
                    if (
                      typeof ShadowRoot < "u" &&
                      ShadowRoot &&
                      t instanceof ShadowRoot
                    )
                      return t;
                  }
                  return null;
                })(r) || this._getDocument(),
              s = this._elementInfo.get(r);
            if (s) return n && (s.checkChildren = !0), s.subject;
            const a = { checkChildren: n, subject: new se(), rootNode: o };
            return (
              this._elementInfo.set(r, a),
              this._registerGlobalListeners(a),
              a.subject
            );
          }
          stopMonitoring(e) {
            const n = to(e),
              r = this._elementInfo.get(n);
            r &&
              (r.subject.complete(),
              this._setClasses(n),
              this._elementInfo.delete(n),
              this._removeGlobalListeners(r));
          }
          focusVia(e, n, r) {
            const o = to(e);
            o === this._getDocument().activeElement
              ? this._getClosestElementsInfo(o).forEach(([a, l]) =>
                  this._originChanged(a, n, l)
                )
              : (this._setOrigin(n),
                "function" == typeof o.focus && o.focus(r));
          }
          ngOnDestroy() {
            this._elementInfo.forEach((e, n) => this.stopMonitoring(n));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _getFocusOrigin(e) {
            return this._origin
              ? this._originFromTouchInteraction
                ? this._shouldBeAttributedToTouch(e)
                  ? "touch"
                  : "program"
                : this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : e && this._isLastInteractionFromInputLabel(e)
              ? "mouse"
              : "program";
          }
          _shouldBeAttributedToTouch(e) {
            return (
              1 === this._detectionMode ||
              !!e?.contains(this._inputModalityDetector._mostRecentTarget)
            );
          }
          _setClasses(e, n) {
            e.classList.toggle("cdk-focused", !!n),
              e.classList.toggle("cdk-touch-focused", "touch" === n),
              e.classList.toggle("cdk-keyboard-focused", "keyboard" === n),
              e.classList.toggle("cdk-mouse-focused", "mouse" === n),
              e.classList.toggle("cdk-program-focused", "program" === n);
          }
          _setOrigin(e, n = !1) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = e),
                (this._originFromTouchInteraction = "touch" === e && n),
                0 === this._detectionMode &&
                  (clearTimeout(this._originTimeoutId),
                  (this._originTimeoutId = setTimeout(
                    () => (this._origin = null),
                    this._originFromTouchInteraction ? 650 : 1
                  )));
            });
          }
          _onFocus(e, n) {
            const r = this._elementInfo.get(n),
              o = dr(e);
            !r ||
              (!r.checkChildren && n !== o) ||
              this._originChanged(n, this._getFocusOrigin(o), r);
          }
          _onBlur(e, n) {
            const r = this._elementInfo.get(n);
            !r ||
              (r.checkChildren &&
                e.relatedTarget instanceof Node &&
                n.contains(e.relatedTarget)) ||
              (this._setClasses(n), this._emitOrigin(r, null));
          }
          _emitOrigin(e, n) {
            e.subject.observers.length &&
              this._ngZone.run(() => e.subject.next(n));
          }
          _registerGlobalListeners(e) {
            if (!this._platform.isBrowser) return;
            const n = e.rootNode,
              r = this._rootNodeFocusListenerCount.get(n) || 0;
            r ||
              this._ngZone.runOutsideAngular(() => {
                n.addEventListener(
                  "focus",
                  this._rootNodeFocusAndBlurListener,
                  mu
                ),
                  n.addEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    mu
                  );
              }),
              this._rootNodeFocusListenerCount.set(n, r + 1),
              1 == ++this._monitoredElementCount &&
                (this._ngZone.runOutsideAngular(() => {
                  this._getWindow().addEventListener(
                    "focus",
                    this._windowFocusListener
                  );
                }),
                this._inputModalityDetector.modalityDetected
                  .pipe(yi(this._stopInputModalityDetector))
                  .subscribe((o) => {
                    this._setOrigin(o, !0);
                  }));
          }
          _removeGlobalListeners(e) {
            const n = e.rootNode;
            if (this._rootNodeFocusListenerCount.has(n)) {
              const r = this._rootNodeFocusListenerCount.get(n);
              r > 1
                ? this._rootNodeFocusListenerCount.set(n, r - 1)
                : (n.removeEventListener(
                    "focus",
                    this._rootNodeFocusAndBlurListener,
                    mu
                  ),
                  n.removeEventListener(
                    "blur",
                    this._rootNodeFocusAndBlurListener,
                    mu
                  ),
                  this._rootNodeFocusListenerCount.delete(n));
            }
            --this._monitoredElementCount ||
              (this._getWindow().removeEventListener(
                "focus",
                this._windowFocusListener
              ),
              this._stopInputModalityDetector.next(),
              clearTimeout(this._windowFocusTimeoutId),
              clearTimeout(this._originTimeoutId));
          }
          _originChanged(e, n, r) {
            this._setClasses(e, n),
              this._emitOrigin(r, n),
              (this._lastFocusOrigin = n);
          }
          _getClosestElementsInfo(e) {
            const n = [];
            return (
              this._elementInfo.forEach((r, o) => {
                (o === e || (r.checkChildren && o.contains(e))) &&
                  n.push([o, r]);
              }),
              n
            );
          }
          _isLastInteractionFromInputLabel(e) {
            const { _mostRecentTarget: n, mostRecentModality: r } =
              this._inputModalityDetector;
            if (
              "mouse" !== r ||
              !n ||
              n === e ||
              ("INPUT" !== e.nodeName && "TEXTAREA" !== e.nodeName) ||
              e.disabled
            )
              return !1;
            const o = e.labels;
            if (o)
              for (let s = 0; s < o.length; s++)
                if (o[s].contains(n)) return !0;
            return !1;
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(Z), w(zt), w(m8), w(le, 8), w(v8, 8));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      const pS = "cdk-high-contrast-black-on-white",
        gS = "cdk-high-contrast-white-on-black",
        Ug = "cdk-high-contrast-active";
      let _S = (() => {
          class i {
            constructor(e, n) {
              (this._platform = e),
                (this._document = n),
                (this._breakpointSubscription = Y(Hg)
                  .observe("(forced-colors: active)")
                  .subscribe(() => {
                    this._hasCheckedHighContrastMode &&
                      ((this._hasCheckedHighContrastMode = !1),
                      this._applyBodyHighContrastModeCssClasses());
                  }));
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const e = this._document.createElement("div");
              (e.style.backgroundColor = "rgb(1,2,3)"),
                (e.style.position = "absolute"),
                this._document.body.appendChild(e);
              const n = this._document.defaultView || window,
                r = n && n.getComputedStyle ? n.getComputedStyle(e) : null,
                o = ((r && r.backgroundColor) || "").replace(/ /g, "");
              switch ((e.remove(), o)) {
                case "rgb(0,0,0)":
                case "rgb(45,50,54)":
                case "rgb(32,32,32)":
                  return 2;
                case "rgb(255,255,255)":
                case "rgb(255,250,239)":
                  return 1;
              }
              return 0;
            }
            ngOnDestroy() {
              this._breakpointSubscription.unsubscribe();
            }
            _applyBodyHighContrastModeCssClasses() {
              if (
                !this._hasCheckedHighContrastMode &&
                this._platform.isBrowser &&
                this._document.body
              ) {
                const e = this._document.body.classList;
                e.remove(Ug, pS, gS), (this._hasCheckedHighContrastMode = !0);
                const n = this.getHighContrastMode();
                1 === n ? e.add(Ug, pS) : 2 === n && e.add(Ug, gS);
              }
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(zt), w(le));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })(),
        bS = (() => {
          class i {
            constructor(e) {
              e._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(_S));
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fu] })),
            i
          );
        })();
      const y8 = new E("cdk-dir-doc", {
          providedIn: "root",
          factory: function w8() {
            return Y(le);
          },
        }),
        x8 =
          /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
      let rl = (() => {
          class i {
            constructor(e) {
              (this.value = "ltr"),
                (this.change = new ve()),
                e &&
                  (this.value = (function C8(i) {
                    const t = i?.toLowerCase() || "";
                    return "auto" === t &&
                      typeof navigator < "u" &&
                      navigator?.language
                      ? x8.test(navigator.language)
                        ? "rtl"
                        : "ltr"
                      : "rtl" === t
                      ? "rtl"
                      : "ltr";
                  })(
                    (e.body ? e.body.dir : null) ||
                      (e.documentElement ? e.documentElement.dir : null) ||
                      "ltr"
                  ));
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(y8, 8));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })(),
        ol = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({})),
            i
          );
        })();
      const E8 = new E("mat-sanity-checks", {
        providedIn: "root",
        factory: function D8() {
          return !0;
        },
      });
      let fe = (() => {
        class i {
          constructor(e, n, r) {
            (this._sanityChecks = n),
              (this._document = r),
              (this._hasDoneGlobalChecks = !1),
              e._applyBodyHighContrastModeCssClasses(),
              this._hasDoneGlobalChecks || (this._hasDoneGlobalChecks = !0);
          }
          _checkIsEnabled(e) {
            return (
              !Lg() &&
              ("boolean" == typeof this._sanityChecks
                ? this._sanityChecks
                : !!this._sanityChecks[e])
            );
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(_S), w(E8, 8), w(le));
          }),
          (i.ɵmod = K({ type: i })),
          (i.ɵinj = Q({ imports: [ol, ol] })),
          i
        );
      })();
      function wS(i) {
        return class extends i {
          get disabled() {
            return this._disabled;
          }
          set disabled(t) {
            this._disabled = ze(t);
          }
          constructor(...t) {
            super(...t), (this._disabled = !1);
          }
        };
      }
      function $g(i, t) {
        return class extends i {
          get color() {
            return this._color;
          }
          set color(e) {
            const n = e || this.defaultColor;
            n !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  `mat-${this._color}`
                ),
              n && this._elementRef.nativeElement.classList.add(`mat-${n}`),
              (this._color = n));
          }
          constructor(...e) {
            super(...e), (this.defaultColor = t), (this.color = t);
          }
        };
      }
      function Gg(i) {
        return class extends i {
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(t) {
            this._disableRipple = ze(t);
          }
          constructor(...t) {
            super(...t), (this._disableRipple = !1);
          }
        };
      }
      let xS = (() => {
        class i {}
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵmod = K({ type: i })),
          (i.ɵinj = Q({ imports: [fe, fe] })),
          i
        );
      })();
      class T8 {
        constructor(t, e, n, r = !1) {
          (this._renderer = t),
            (this.element = e),
            (this.config = n),
            (this._animationForciblyDisabledThroughCss = r),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const CS = Jr({ passive: !0, capture: !0 });
      class k8 {
        constructor() {
          (this._events = new Map()),
            (this._delegateEventHandler = (t) => {
              const e = dr(t);
              e &&
                this._events.get(t.type)?.forEach((n, r) => {
                  (r === e || r.contains(e)) &&
                    n.forEach((o) => o.handleEvent(t));
                });
            });
        }
        addHandler(t, e, n, r) {
          const o = this._events.get(e);
          if (o) {
            const s = o.get(n);
            s ? s.add(r) : o.set(n, new Set([r]));
          } else
            this._events.set(e, new Map([[n, new Set([r])]])),
              t.runOutsideAngular(() => {
                document.addEventListener(e, this._delegateEventHandler, CS);
              });
        }
        removeHandler(t, e, n) {
          const r = this._events.get(t);
          if (!r) return;
          const o = r.get(e);
          o &&
            (o.delete(n),
            0 === o.size && r.delete(e),
            0 === r.size &&
              (this._events.delete(t),
              document.removeEventListener(t, this._delegateEventHandler, CS)));
        }
      }
      const DS = { enterDuration: 225, exitDuration: 150 },
        ES = Jr({ passive: !0, capture: !0 }),
        MS = ["mousedown", "touchstart"],
        SS = ["mouseup", "mouseleave", "touchend", "touchcancel"];
      class vs {
        constructor(t, e, n, r) {
          (this._target = t),
            (this._ngZone = e),
            (this._platform = r),
            (this._isPointerDown = !1),
            (this._activeRipples = new Map()),
            (this._pointerUpEventsRegistered = !1),
            r.isBrowser && (this._containerElement = to(n));
        }
        fadeInRipple(t, e, n = {}) {
          const r = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            o = { ...DS, ...n.animation };
          n.centered &&
            ((t = r.left + r.width / 2), (e = r.top + r.height / 2));
          const s =
              n.radius ||
              (function A8(i, t, e) {
                const n = Math.max(Math.abs(i - e.left), Math.abs(i - e.right)),
                  r = Math.max(Math.abs(t - e.top), Math.abs(t - e.bottom));
                return Math.sqrt(n * n + r * r);
              })(t, e, r),
            a = t - r.left,
            l = e - r.top,
            c = o.enterDuration,
            d = document.createElement("div");
          d.classList.add("mat-ripple-element"),
            (d.style.left = a - s + "px"),
            (d.style.top = l - s + "px"),
            (d.style.height = 2 * s + "px"),
            (d.style.width = 2 * s + "px"),
            null != n.color && (d.style.backgroundColor = n.color),
            (d.style.transitionDuration = `${c}ms`),
            this._containerElement.appendChild(d);
          const u = window.getComputedStyle(d),
            f = u.transitionDuration,
            m =
              "none" === u.transitionProperty ||
              "0s" === f ||
              "0s, 0s" === f ||
              (0 === r.width && 0 === r.height),
            p = new T8(this, d, n, m);
          (d.style.transform = "scale3d(1, 1, 1)"),
            (p.state = 0),
            n.persistent || (this._mostRecentTransientRipple = p);
          let g = null;
          return (
            !m &&
              (c || o.exitDuration) &&
              this._ngZone.runOutsideAngular(() => {
                const b = () => this._finishRippleTransition(p),
                  y = () => this._destroyRipple(p);
                d.addEventListener("transitionend", b),
                  d.addEventListener("transitioncancel", y),
                  (g = { onTransitionEnd: b, onTransitionCancel: y });
              }),
            this._activeRipples.set(p, g),
            (m || !c) && this._finishRippleTransition(p),
            p
          );
        }
        fadeOutRipple(t) {
          if (2 === t.state || 3 === t.state) return;
          const e = t.element,
            n = { ...DS, ...t.config.animation };
          (e.style.transitionDuration = `${n.exitDuration}ms`),
            (e.style.opacity = "0"),
            (t.state = 2),
            (t._animationForciblyDisabledThroughCss || !n.exitDuration) &&
              this._finishRippleTransition(t);
        }
        fadeOutAll() {
          this._getActiveRipples().forEach((t) => t.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._getActiveRipples().forEach((t) => {
            t.config.persistent || t.fadeOut();
          });
        }
        setupTriggerEvents(t) {
          const e = to(t);
          !this._platform.isBrowser ||
            !e ||
            e === this._triggerElement ||
            (this._removeTriggerEvents(),
            (this._triggerElement = e),
            MS.forEach((n) => {
              vs._eventManager.addHandler(this._ngZone, n, e, this);
            }));
        }
        handleEvent(t) {
          "mousedown" === t.type
            ? this._onMousedown(t)
            : "touchstart" === t.type
            ? this._onTouchStart(t)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._ngZone.runOutsideAngular(() => {
                SS.forEach((e) => {
                  this._triggerElement.addEventListener(e, this, ES);
                });
              }),
              (this._pointerUpEventsRegistered = !0));
        }
        _finishRippleTransition(t) {
          0 === t.state
            ? this._startFadeOutTransition(t)
            : 2 === t.state && this._destroyRipple(t);
        }
        _startFadeOutTransition(t) {
          const e = t === this._mostRecentTransientRipple,
            { persistent: n } = t.config;
          (t.state = 1), !n && (!e || !this._isPointerDown) && t.fadeOut();
        }
        _destroyRipple(t) {
          const e = this._activeRipples.get(t) ?? null;
          this._activeRipples.delete(t),
            this._activeRipples.size || (this._containerRect = null),
            t === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            (t.state = 3),
            null !== e &&
              (t.element.removeEventListener(
                "transitionend",
                e.onTransitionEnd
              ),
              t.element.removeEventListener(
                "transitioncancel",
                e.onTransitionCancel
              )),
            t.element.remove();
        }
        _onMousedown(t) {
          const e = uS(t),
            n =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          !this._target.rippleDisabled &&
            !e &&
            !n &&
            ((this._isPointerDown = !0),
            this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig));
        }
        _onTouchStart(t) {
          if (!this._target.rippleDisabled && !hS(t)) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const e = t.changedTouches;
            for (let n = 0; n < e.length; n++)
              this.fadeInRipple(
                e[n].clientX,
                e[n].clientY,
                this._target.rippleConfig
              );
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._getActiveRipples().forEach((t) => {
              !t.config.persistent &&
                (1 === t.state ||
                  (t.config.terminateOnPointerUp && 0 === t.state)) &&
                t.fadeOut();
            }));
        }
        _getActiveRipples() {
          return Array.from(this._activeRipples.keys());
        }
        _removeTriggerEvents() {
          const t = this._triggerElement;
          t &&
            (MS.forEach((e) => vs._eventManager.removeHandler(e, t, this)),
            this._pointerUpEventsRegistered &&
              SS.forEach((e) => t.removeEventListener(e, this, ES)));
        }
      }
      vs._eventManager = new k8();
      const qg = new E("mat-ripple-global-options");
      let pu = (() => {
          class i {
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              e && this.fadeOutAllNonPersistent(),
                (this._disabled = e),
                this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(e) {
              (this._trigger = e), this._setupTriggerEventsIfEnabled();
            }
            constructor(e, n, r, o, s) {
              (this._elementRef = e),
                (this._animationMode = s),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = o || {}),
                (this._rippleRenderer = new vs(this, n, e, r));
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: {
                  ...this._globalOptions.animation,
                  ...("NoopAnimations" === this._animationMode
                    ? { enterDuration: 0, exitDuration: 0 }
                    : {}),
                  ...this.animation,
                },
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled &&
                this._isInitialized &&
                this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(e, n = 0, r) {
              return "number" == typeof e
                ? this._rippleRenderer.fadeInRipple(e, n, {
                    ...this.rippleConfig,
                    ...r,
                  })
                : this._rippleRenderer.fadeInRipple(0, 0, {
                    ...this.rippleConfig,
                    ...e,
                  });
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(v(ce), v(Z), v(zt), v(qg, 8), v(ir, 8));
            }),
            (i.ɵdir = M({
              type: i,
              selectors: [
                ["", "mat-ripple", ""],
                ["", "matRipple", ""],
              ],
              hostAttrs: [1, "mat-ripple"],
              hostVars: 2,
              hostBindings: function (e, n) {
                2 & e && Qe("mat-ripple-unbounded", n.unbounded);
              },
              inputs: {
                color: ["matRippleColor", "color"],
                unbounded: ["matRippleUnbounded", "unbounded"],
                centered: ["matRippleCentered", "centered"],
                radius: ["matRippleRadius", "radius"],
                animation: ["matRippleAnimation", "animation"],
                disabled: ["matRippleDisabled", "disabled"],
                trigger: ["matRippleTrigger", "trigger"],
              },
              exportAs: ["matRipple"],
            })),
            i
          );
        })(),
        ys = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fe, fe] })),
            i
          );
        })(),
        TS = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fe] })),
            i
          );
        })(),
        kS = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [ys, gi, fe, TS] })),
            i
          );
        })();
      const R8 = ["mat-button", ""],
        O8 = [
          [
            ["", 8, "material-icons", 3, "iconPositionEnd", ""],
            ["mat-icon", 3, "iconPositionEnd", ""],
            ["", "matButtonIcon", "", 3, "iconPositionEnd", ""],
          ],
          "*",
          [
            ["", "iconPositionEnd", "", 8, "material-icons"],
            ["mat-icon", "iconPositionEnd", ""],
            ["", "matButtonIcon", "", "iconPositionEnd", ""],
          ],
        ],
        F8 = [
          ".material-icons:not([iconPositionEnd]), mat-icon:not([iconPositionEnd]), [matButtonIcon]:not([iconPositionEnd])",
          "*",
          ".material-icons[iconPositionEnd], mat-icon[iconPositionEnd], [matButtonIcon][iconPositionEnd]",
        ],
        P8 = [
          {
            selector: "mat-button",
            mdcClasses: ["mdc-button", "mat-mdc-button"],
          },
          {
            selector: "mat-flat-button",
            mdcClasses: [
              "mdc-button",
              "mdc-button--unelevated",
              "mat-mdc-unelevated-button",
            ],
          },
          {
            selector: "mat-raised-button",
            mdcClasses: [
              "mdc-button",
              "mdc-button--raised",
              "mat-mdc-raised-button",
            ],
          },
          {
            selector: "mat-stroked-button",
            mdcClasses: [
              "mdc-button",
              "mdc-button--outlined",
              "mat-mdc-outlined-button",
            ],
          },
          { selector: "mat-fab", mdcClasses: ["mdc-fab", "mat-mdc-fab"] },
          {
            selector: "mat-mini-fab",
            mdcClasses: ["mdc-fab", "mdc-fab--mini", "mat-mdc-mini-fab"],
          },
          {
            selector: "mat-icon-button",
            mdcClasses: ["mdc-icon-button", "mat-mdc-icon-button"],
          },
        ],
        N8 = $g(
          wS(
            Gg(
              class {
                constructor(i) {
                  this._elementRef = i;
                }
              }
            )
          )
        );
      let L8 = (() => {
          class i extends N8 {
            constructor(e, n, r, o) {
              super(e),
                (this._platform = n),
                (this._ngZone = r),
                (this._animationMode = o),
                (this._focusMonitor = Y(zg)),
                (this._isFab = !1);
              const s = e.nativeElement.classList;
              for (const a of P8)
                this._hasHostAttributes(a.selector) &&
                  a.mdcClasses.forEach((l) => {
                    s.add(l);
                  });
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(e = "program", n) {
              e
                ? this._focusMonitor.focusVia(
                    this._elementRef.nativeElement,
                    e,
                    n
                  )
                : this._elementRef.nativeElement.focus(n);
            }
            _hasHostAttributes(...e) {
              return e.some((n) =>
                this._elementRef.nativeElement.hasAttribute(n)
              );
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
          }
          return (
            (i.ɵfac = function (e) {
              kc();
            }),
            (i.ɵdir = M({
              type: i,
              viewQuery: function (e, n) {
                if ((1 & e && Xt(pu, 5), 2 & e)) {
                  let r;
                  Ie((r = Ae())) && (n.ripple = r.first);
                }
              },
              features: [N],
            })),
            i
          );
        })(),
        IS = (() => {
          class i extends L8 {
            constructor(e, n, r, o) {
              super(e, n, r, o);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(v(ce), v(zt), v(Z), v(ir, 8));
            }),
            (i.ɵcmp = Te({
              type: i,
              selectors: [
                ["button", "mat-button", ""],
                ["button", "mat-raised-button", ""],
                ["button", "mat-flat-button", ""],
                ["button", "mat-stroked-button", ""],
              ],
              hostVars: 7,
              hostBindings: function (e, n) {
                2 & e &&
                  (qe("disabled", n.disabled || null),
                  Qe(
                    "_mat-animation-noopable",
                    "NoopAnimations" === n._animationMode
                  )("mat-unthemed", !n.color)("mat-mdc-button-base", !0));
              },
              inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                color: "color",
              },
              exportAs: ["matButton"],
              features: [N],
              attrs: R8,
              ngContentSelectors: F8,
              decls: 8,
              vars: 6,
              consts: [
                [1, "mat-mdc-button-persistent-ripple"],
                [1, "mdc-button__label"],
                [1, "mat-mdc-focus-indicator"],
                [
                  "matRipple",
                  "",
                  1,
                  "mat-mdc-button-ripple",
                  3,
                  "matRippleDisabled",
                  "matRippleTrigger",
                ],
                [1, "mat-mdc-button-touch-target"],
              ],
              template: function (e, n) {
                1 & e &&
                  (pi(O8),
                  Ze(0, "span", 0),
                  $e(1),
                  ne(2, "span", 1),
                  $e(3, 1),
                  me(),
                  $e(4, 2),
                  Ze(5, "span", 2)(6, "span", 3)(7, "span", 4)),
                  2 & e &&
                    (Qe("mdc-button__ripple", !n._isFab)(
                      "mdc-fab__ripple",
                      n._isFab
                    ),
                    Pe(6),
                    We("matRippleDisabled", n._isRippleDisabled())(
                      "matRippleTrigger",
                      n._elementRef.nativeElement
                    ));
              },
              dependencies: [pu],
              styles: [
                '.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:rgba(0,0,0,0)}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button[hidden]{display:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__progress-indicator{font-size:0;position:absolute;transform:translate(-50%, -50%);top:50%;left:50%;line-height:initial}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(\n      100% + 4px\n    );width:calc(\n      100% + 4px\n    );display:none}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring{border-color:CanvasText}}.mdc-button .mdc-button__focus-ring::after{content:"";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-button .mdc-button__focus-ring::after{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{display:block}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:rgba(0,0,0,0)}.mat-mdc-button{height:var(--mdc-text-button-container-height, 36px);border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-button:not(:disabled){color:var(--mdc-text-button-label-text-color, inherit)}.mat-mdc-button:disabled{color:var(--mdc-text-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-button .mdc-button__ripple{border-radius:var(--mdc-text-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button{height:var(--mdc-filled-button-container-height, 36px);border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-unelevated-button:not(:disabled){background-color:var(--mdc-filled-button-container-color, transparent)}.mat-mdc-unelevated-button:disabled{background-color:var(--mdc-filled-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-unelevated-button:not(:disabled){color:var(--mdc-filled-button-label-text-color, inherit)}.mat-mdc-unelevated-button:disabled{color:var(--mdc-filled-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-unelevated-button .mdc-button__ripple{border-radius:var(--mdc-filled-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button{height:var(--mdc-protected-button-container-height, 36px);border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px));box-shadow:var(--mdc-protected-button-container-elevation, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){background-color:var(--mdc-protected-button-container-color, transparent)}.mat-mdc-raised-button:disabled{background-color:var(--mdc-protected-button-disabled-container-color, rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled){color:var(--mdc-protected-button-label-text-color, inherit)}.mat-mdc-raised-button:disabled{color:var(--mdc-protected-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-raised-button .mdc-button__ripple{border-radius:var(--mdc-protected-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-raised-button.mdc-ripple-upgraded--background-focused,.mat-mdc-raised-button:not(.mdc-ripple-upgraded):focus{box-shadow:var(--mdc-protected-button-focus-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:hover{box-shadow:var(--mdc-protected-button-hover-container-elevation, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:not(:disabled):active{box-shadow:var(--mdc-protected-button-pressed-container-elevation, 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12))}.mat-mdc-raised-button:disabled{box-shadow:var(--mdc-protected-button-disabled-container-elevation, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button{height:var(--mdc-outlined-button-container-height, 36px);border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px));padding:0 15px 0 15px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button:not(:disabled){color:var(--mdc-outlined-button-label-text-color, inherit)}.mat-mdc-outlined-button:disabled{color:var(--mdc-outlined-button-disabled-label-text-color, rgba(0, 0, 0, 0.38))}.mat-mdc-outlined-button .mdc-button__ripple{border-radius:var(--mdc-outlined-button-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-outlined-button:not(:disabled){border-color:var(--mdc-outlined-button-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button:disabled{border-color:var(--mdc-outlined-button-disabled-outline-color, rgba(0, 0, 0, 0.12))}.mat-mdc-outlined-button.mdc-button--icon-trailing{padding:0 11px 0 15px}.mat-mdc-outlined-button.mdc-button--icon-leading{padding:0 15px 0 11px}.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:var(--mdc-outlined-button-outline-width, 1px)}.mat-mdc-outlined-button .mdc-button__touch{left:calc(-1 * var(--mdc-outlined-button-outline-width, 1px));width:calc(100% + 2 * var(--mdc-outlined-button-outline-width, 1px))}.mat-mdc-button,.mat-mdc-unelevated-button,.mat-mdc-raised-button,.mat-mdc-outlined-button{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-button .mat-mdc-button-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple,.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button .mat-mdc-button-persistent-ripple::before{content:"";opacity:0;background-color:var(--mat-mdc-button-persistent-ripple-color)}.mat-mdc-button .mat-ripple-element,.mat-mdc-unelevated-button .mat-ripple-element,.mat-mdc-raised-button .mat-ripple-element,.mat-mdc-outlined-button .mat-ripple-element{background-color:var(--mat-mdc-button-ripple-color)}.mat-mdc-button .mdc-button__label,.mat-mdc-unelevated-button .mdc-button__label,.mat-mdc-raised-button .mdc-button__label,.mat-mdc-outlined-button .mdc-button__label{z-index:1}.mat-mdc-button .mat-mdc-focus-indicator,.mat-mdc-unelevated-button .mat-mdc-focus-indicator,.mat-mdc-raised-button .mat-mdc-focus-indicator,.mat-mdc-outlined-button .mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute}.mat-mdc-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-unelevated-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-raised-button:focus .mat-mdc-focus-indicator::before,.mat-mdc-outlined-button:focus .mat-mdc-focus-indicator::before{content:""}.mat-mdc-button[disabled],.mat-mdc-unelevated-button[disabled],.mat-mdc-raised-button[disabled],.mat-mdc-outlined-button[disabled]{cursor:default;pointer-events:none}.mat-mdc-button .mat-mdc-button-touch-target,.mat-mdc-unelevated-button .mat-mdc-button-touch-target,.mat-mdc-raised-button .mat-mdc-button-touch-target,.mat-mdc-outlined-button .mat-mdc-button-touch-target{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mat-mdc-button._mat-animation-noopable,.mat-mdc-unelevated-button._mat-animation-noopable,.mat-mdc-raised-button._mat-animation-noopable,.mat-mdc-outlined-button._mat-animation-noopable{transition:none !important;animation:none !important}.mat-mdc-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}[dir=rtl] .mat-mdc-button>.mat-icon,.mat-mdc-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}.mat-mdc-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-button .mdc-button__label+.mat-icon,.mat-mdc-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem;margin-left:-4px;margin-right:8px}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:0}[dir=rtl] .mat-mdc-unelevated-button>.mat-icon,[dir=rtl] .mat-mdc-raised-button>.mat-icon,[dir=rtl] .mat-mdc-outlined-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon[dir=rtl],.mat-mdc-raised-button>.mat-icon[dir=rtl],.mat-mdc-outlined-button>.mat-icon[dir=rtl]{margin-left:8px;margin-right:-4px}.mat-mdc-unelevated-button .mdc-button__label+.mat-icon,.mat-mdc-raised-button .mdc-button__label+.mat-icon,.mat-mdc-outlined-button .mdc-button__label+.mat-icon{margin-left:8px;margin-right:-4px}[dir=rtl] .mat-mdc-unelevated-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-raised-button .mdc-button__label+.mat-icon,[dir=rtl] .mat-mdc-outlined-button .mdc-button__label+.mat-icon,.mat-mdc-unelevated-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-raised-button .mdc-button__label+.mat-icon[dir=rtl],.mat-mdc-outlined-button .mdc-button__label+.mat-icon[dir=rtl]{margin-left:-4px;margin-right:8px}.mat-mdc-outlined-button .mat-mdc-button-ripple,.mat-mdc-outlined-button .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:-1px}.mat-mdc-unelevated-button .mat-mdc-focus-indicator::before,.mat-mdc-raised-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-mdc-outlined-button .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 3px) * -1)}',
                ".cdk-high-contrast-active .mat-mdc-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-unelevated-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-raised-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-outlined-button:not(.mdc-button--outlined),.cdk-high-contrast-active .mat-mdc-icon-button{outline:solid 1px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            i
          );
        })(),
        gu = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fe, ys, fe] })),
            i
          );
        })();
      class Wg {
        attach(t) {
          return (this._attachedHost = t), t.attach(this);
        }
        detach() {
          let t = this._attachedHost;
          null != t && ((this._attachedHost = null), t.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(t) {
          this._attachedHost = t;
        }
      }
      class Qg extends Wg {
        constructor(t, e, n, r, o) {
          super(),
            (this.component = t),
            (this.viewContainerRef = e),
            (this.injector = n),
            (this.componentFactoryResolver = r),
            (this.projectableNodes = o);
        }
      }
      class AS extends Wg {
        constructor(t, e, n, r) {
          super(),
            (this.templateRef = t),
            (this.viewContainerRef = e),
            (this.context = n),
            (this.injector = r);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(t, e = this.context) {
          return (this.context = e), super.attach(t);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class j8 extends Wg {
        constructor(t) {
          super(), (this.element = t instanceof ce ? t.nativeElement : t);
        }
      }
      class Yg {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(t) {
          return t instanceof Qg
            ? ((this._attachedPortal = t), this.attachComponentPortal(t))
            : t instanceof AS
            ? ((this._attachedPortal = t), this.attachTemplatePortal(t))
            : this.attachDomPortal && t instanceof j8
            ? ((this._attachedPortal = t), this.attachDomPortal(t))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(t) {
          this._disposeFn = t;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class H8 extends Yg {
        constructor(t, e, n, r, o) {
          super(),
            (this.outletElement = t),
            (this._componentFactoryResolver = e),
            (this._appRef = n),
            (this._defaultInjector = r),
            (this.attachDomPortal = (s) => {
              const a = s.element,
                l = this._document.createComment("dom-portal");
              a.parentNode.insertBefore(l, a),
                this.outletElement.appendChild(a),
                (this._attachedPortal = s),
                super.setDisposeFn(() => {
                  l.parentNode && l.parentNode.replaceChild(a, l);
                });
            }),
            (this._document = o);
        }
        attachComponentPortal(t) {
          const n = (
            t.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(t.component);
          let r;
          return (
            t.viewContainerRef
              ? ((r = t.viewContainerRef.createComponent(
                  n,
                  t.viewContainerRef.length,
                  t.injector || t.viewContainerRef.injector,
                  t.projectableNodes || void 0
                )),
                this.setDisposeFn(() => r.destroy()))
              : ((r = n.create(t.injector || this._defaultInjector || vt.NULL)),
                this._appRef.attachView(r.hostView),
                this.setDisposeFn(() => {
                  this._appRef.viewCount > 0 &&
                    this._appRef.detachView(r.hostView),
                    r.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(r)),
            (this._attachedPortal = t),
            r
          );
        }
        attachTemplatePortal(t) {
          let e = t.viewContainerRef,
            n = e.createEmbeddedView(t.templateRef, t.context, {
              injector: t.injector,
            });
          return (
            n.rootNodes.forEach((r) => this.outletElement.appendChild(r)),
            n.detectChanges(),
            this.setDisposeFn(() => {
              let r = e.indexOf(n);
              -1 !== r && e.remove(r);
            }),
            (this._attachedPortal = t),
            n
          );
        }
        dispose() {
          super.dispose(), this.outletElement.remove();
        }
        _getComponentRootNode(t) {
          return t.hostView.rootNodes[0];
        }
      }
      let RS = (() => {
          class i extends Yg {
            constructor(e, n, r) {
              super(),
                (this._componentFactoryResolver = e),
                (this._viewContainerRef = n),
                (this._isInitialized = !1),
                (this.attached = new ve()),
                (this.attachDomPortal = (o) => {
                  const s = o.element,
                    a = this._document.createComment("dom-portal");
                  o.setAttachedHost(this),
                    s.parentNode.insertBefore(a, s),
                    this._getRootNode().appendChild(s),
                    (this._attachedPortal = o),
                    super.setDisposeFn(() => {
                      a.parentNode && a.parentNode.replaceChild(s, a);
                    });
                }),
                (this._document = r);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(e) {
              (this.hasAttached() && !e && !this._isInitialized) ||
                (this.hasAttached() && super.detach(),
                e && super.attach(e),
                (this._attachedPortal = e || null));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(),
                (this._attachedRef = this._attachedPortal = null);
            }
            attachComponentPortal(e) {
              e.setAttachedHost(this);
              const n =
                  null != e.viewContainerRef
                    ? e.viewContainerRef
                    : this._viewContainerRef,
                o = (
                  e.componentFactoryResolver || this._componentFactoryResolver
                ).resolveComponentFactory(e.component),
                s = n.createComponent(
                  o,
                  n.length,
                  e.injector || n.injector,
                  e.projectableNodes || void 0
                );
              return (
                n !== this._viewContainerRef &&
                  this._getRootNode().appendChild(s.hostView.rootNodes[0]),
                super.setDisposeFn(() => s.destroy()),
                (this._attachedPortal = e),
                (this._attachedRef = s),
                this.attached.emit(s),
                s
              );
            }
            attachTemplatePortal(e) {
              e.setAttachedHost(this);
              const n = this._viewContainerRef.createEmbeddedView(
                e.templateRef,
                e.context,
                { injector: e.injector }
              );
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = e),
                (this._attachedRef = n),
                this.attached.emit(n),
                n
              );
            }
            _getRootNode() {
              const e = this._viewContainerRef.element.nativeElement;
              return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(v(Pr), v(kt), v(le));
            }),
            (i.ɵdir = M({
              type: i,
              selectors: [["", "cdkPortalOutlet", ""]],
              inputs: { portal: ["cdkPortalOutlet", "portal"] },
              outputs: { attached: "attached" },
              exportAs: ["cdkPortalOutlet"],
              features: [N],
            })),
            i
          );
        })(),
        Kg = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({})),
            i
          );
        })();
      const z8 = ["addListener", "removeListener"],
        U8 = ["addEventListener", "removeEventListener"],
        $8 = ["on", "off"];
      function _u(i, t, e, n) {
        if ((_e(e) && ((n = e), (e = void 0)), n))
          return _u(i, t, e).pipe(rg(n));
        const [r, o] = (function W8(i) {
          return _e(i.addEventListener) && _e(i.removeEventListener);
        })(i)
          ? U8.map((s) => (a) => i[s](t, a, e))
          : (function G8(i) {
              return _e(i.addListener) && _e(i.removeListener);
            })(i)
          ? z8.map(OS(i, t))
          : (function q8(i) {
              return _e(i.on) && _e(i.off);
            })(i)
          ? $8.map(OS(i, t))
          : [];
        if (!r && Dh(i)) return Dt((s) => _u(s, t, e))(Gt(i));
        if (!r) throw new TypeError("Invalid event target");
        return new be((s) => {
          const a = (...l) => s.next(1 < l.length ? l : l[0]);
          return r(a), () => o(a);
        });
      }
      function OS(i, t) {
        return (e) => (n) => i[e](t, n);
      }
      const al = {
          schedule(i) {
            let t = requestAnimationFrame,
              e = cancelAnimationFrame;
            const { delegate: n } = al;
            n && ((t = n.requestAnimationFrame), (e = n.cancelAnimationFrame));
            const r = t((o) => {
              (e = void 0), i(o);
            });
            return new ut(() => e?.(r));
          },
          requestAnimationFrame(...i) {
            const { delegate: t } = al;
            return (t?.requestAnimationFrame || requestAnimationFrame)(...i);
          },
          cancelAnimationFrame(...i) {
            const { delegate: t } = al;
            return (t?.cancelAnimationFrame || cancelAnimationFrame)(...i);
          },
          delegate: void 0,
        },
        K8 = new (class Y8 extends uu {
          flush(t) {
            this._active = !0;
            const e = this._scheduled;
            this._scheduled = void 0;
            const { actions: n } = this;
            let r;
            t = t || n.shift();
            do {
              if ((r = t.execute(t.state, t.delay))) break;
            } while ((t = n[0]) && t.id === e && n.shift());
            if (((this._active = !1), r)) {
              for (; (t = n[0]) && t.id === e && n.shift(); ) t.unsubscribe();
              throw r;
            }
          }
        })(
          class Q8 extends du {
            constructor(t, e) {
              super(t, e), (this.scheduler = t), (this.work = e);
            }
            requestAsyncId(t, e, n = 0) {
              return null !== n && n > 0
                ? super.requestAsyncId(t, e, n)
                : (t.actions.push(this),
                  t._scheduled ||
                    (t._scheduled = al.requestAnimationFrame(() =>
                      t.flush(void 0)
                    )));
            }
            recycleAsyncId(t, e, n = 0) {
              var r;
              if (null != n ? n > 0 : this.delay > 0)
                return super.recycleAsyncId(t, e, n);
              const { actions: o } = t;
              null != e &&
                (null === (r = o[o.length - 1]) || void 0 === r
                  ? void 0
                  : r.id) !== e &&
                (al.cancelAnimationFrame(e), (t._scheduled = void 0));
            }
          }
        );
      let Xg,
        X8 = 1;
      const bu = {};
      function FS(i) {
        return i in bu && (delete bu[i], !0);
      }
      const Z8 = {
          setImmediate(i) {
            const t = X8++;
            return (
              (bu[t] = !0),
              Xg || (Xg = Promise.resolve()),
              Xg.then(() => FS(t) && i()),
              t
            );
          },
          clearImmediate(i) {
            FS(i);
          },
        },
        { setImmediate: J8, clearImmediate: e$ } = Z8,
        vu = {
          setImmediate(...i) {
            const { delegate: t } = vu;
            return (t?.setImmediate || J8)(...i);
          },
          clearImmediate(i) {
            const { delegate: t } = vu;
            return (t?.clearImmediate || e$)(i);
          },
          delegate: void 0,
        },
        n$ = new (class i$ extends uu {
          flush(t) {
            this._active = !0;
            const e = this._scheduled;
            this._scheduled = void 0;
            const { actions: n } = this;
            let r;
            t = t || n.shift();
            do {
              if ((r = t.execute(t.state, t.delay))) break;
            } while ((t = n[0]) && t.id === e && n.shift());
            if (((this._active = !1), r)) {
              for (; (t = n[0]) && t.id === e && n.shift(); ) t.unsubscribe();
              throw r;
            }
          }
        })(
          class t$ extends du {
            constructor(t, e) {
              super(t, e), (this.scheduler = t), (this.work = e);
            }
            requestAsyncId(t, e, n = 0) {
              return null !== n && n > 0
                ? super.requestAsyncId(t, e, n)
                : (t.actions.push(this),
                  t._scheduled ||
                    (t._scheduled = vu.setImmediate(t.flush.bind(t, void 0))));
            }
            recycleAsyncId(t, e, n = 0) {
              var r;
              if (null != n ? n > 0 : this.delay > 0)
                return super.recycleAsyncId(t, e, n);
              const { actions: o } = t;
              null != e &&
                (null === (r = o[o.length - 1]) || void 0 === r
                  ? void 0
                  : r.id) !== e &&
                (vu.clearImmediate(e), (t._scheduled = void 0));
            }
          }
        );
      function Zg(i, t = Bg) {
        return (function r$(i) {
          return tt((t, e) => {
            let n = !1,
              r = null,
              o = null,
              s = !1;
            const a = () => {
                if ((o?.unsubscribe(), (o = null), n)) {
                  n = !1;
                  const c = r;
                  (r = null), e.next(c);
                }
                s && e.complete();
              },
              l = () => {
                (o = null), s && e.complete();
              };
            t.subscribe(
              Ge(
                e,
                (c) => {
                  (n = !0), (r = c), o || Gt(i(c)).subscribe((o = Ge(e, a, l)));
                },
                () => {
                  (s = !0), (!n || !o || o.closed) && e.complete();
                }
              )
            );
          });
        })(() =>
          (function s$(i = 0, t, e = q5) {
            let n = -1;
            return (
              null != t && (wv(t) ? (e = t) : (n = t)),
              new be((r) => {
                let o = (function o$(i) {
                  return i instanceof Date && !isNaN(i);
                })(i)
                  ? +i - e.now()
                  : i;
                o < 0 && (o = 0);
                let s = 0;
                return e.schedule(function () {
                  r.closed ||
                    (r.next(s++),
                    0 <= n ? this.schedule(void 0, n) : r.complete());
                }, o);
              })
            );
          })(i, t)
        );
      }
      const a$ = ["contentWrapper"],
        l$ = ["*"],
        c$ = new E("VIRTUAL_SCROLL_STRATEGY");
      let yu = (() => {
          class i {
            constructor(e, n, r) {
              (this._ngZone = e),
                (this._platform = n),
                (this._scrolled = new se()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = r);
            }
            register(e) {
              this.scrollContainers.has(e) ||
                this.scrollContainers.set(
                  e,
                  e.elementScrolled().subscribe(() => this._scrolled.next(e))
                );
            }
            deregister(e) {
              const n = this.scrollContainers.get(e);
              n && (n.unsubscribe(), this.scrollContainers.delete(e));
            }
            scrolled(e = 20) {
              return this._platform.isBrowser
                ? new be((n) => {
                    this._globalSubscription || this._addGlobalListener();
                    const r =
                      e > 0
                        ? this._scrolled.pipe(Zg(e)).subscribe(n)
                        : this._scrolled.subscribe(n);
                    return (
                      this._scrolledCount++,
                      () => {
                        r.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : j();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((e, n) => this.deregister(n)),
                this._scrolled.complete();
            }
            ancestorScrolled(e, n) {
              const r = this.getAncestorScrollContainers(e);
              return this.scrolled(n).pipe(vi((o) => !o || r.indexOf(o) > -1));
            }
            getAncestorScrollContainers(e) {
              const n = [];
              return (
                this.scrollContainers.forEach((r, o) => {
                  this._scrollableContainsElement(o, e) && n.push(o);
                }),
                n
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(e, n) {
              let r = to(n),
                o = e.getElementRef().nativeElement;
              do {
                if (r == o) return !0;
              } while ((r = r.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                _u(this._getWindow().document, "scroll").subscribe(() =>
                  this._scrolled.next()
                )
              );
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(Z), w(zt), w(le, 8));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })(),
        PS = (() => {
          class i {
            constructor(e, n, r, o) {
              (this.elementRef = e),
                (this.scrollDispatcher = n),
                (this.ngZone = r),
                (this.dir = o),
                (this._destroyed = new se()),
                (this._elementScrolled = new be((s) =>
                  this.ngZone.runOutsideAngular(() =>
                    _u(this.elementRef.nativeElement, "scroll")
                      .pipe(yi(this._destroyed))
                      .subscribe(s)
                  )
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(e) {
              const n = this.elementRef.nativeElement,
                r = this.dir && "rtl" == this.dir.value;
              null == e.left && (e.left = r ? e.end : e.start),
                null == e.right && (e.right = r ? e.start : e.end),
                null != e.bottom &&
                  (e.top = n.scrollHeight - n.clientHeight - e.bottom),
                r && 0 != il()
                  ? (null != e.left &&
                      (e.right = n.scrollWidth - n.clientWidth - e.left),
                    2 == il()
                      ? (e.left = e.right)
                      : 1 == il() && (e.left = e.right ? -e.right : e.right))
                  : null != e.right &&
                    (e.left = n.scrollWidth - n.clientWidth - e.right),
                this._applyScrollToOptions(e);
            }
            _applyScrollToOptions(e) {
              const n = this.elementRef.nativeElement;
              iS()
                ? n.scrollTo(e)
                : (null != e.top && (n.scrollTop = e.top),
                  null != e.left && (n.scrollLeft = e.left));
            }
            measureScrollOffset(e) {
              const n = "left",
                r = "right",
                o = this.elementRef.nativeElement;
              if ("top" == e) return o.scrollTop;
              if ("bottom" == e)
                return o.scrollHeight - o.clientHeight - o.scrollTop;
              const s = this.dir && "rtl" == this.dir.value;
              return (
                "start" == e ? (e = s ? r : n) : "end" == e && (e = s ? n : r),
                s && 2 == il()
                  ? e == n
                    ? o.scrollWidth - o.clientWidth - o.scrollLeft
                    : o.scrollLeft
                  : s && 1 == il()
                  ? e == n
                    ? o.scrollLeft + o.scrollWidth - o.clientWidth
                    : -o.scrollLeft
                  : e == n
                  ? o.scrollLeft
                  : o.scrollWidth - o.clientWidth - o.scrollLeft
              );
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(v(ce), v(yu), v(Z), v(rl, 8));
            }),
            (i.ɵdir = M({
              type: i,
              selectors: [
                ["", "cdk-scrollable", ""],
                ["", "cdkScrollable", ""],
              ],
              standalone: !0,
            })),
            i
          );
        })(),
        wu = (() => {
          class i {
            constructor(e, n, r) {
              (this._platform = e),
                (this._change = new se()),
                (this._changeListener = (o) => {
                  this._change.next(o);
                }),
                (this._document = r),
                n.runOutsideAngular(() => {
                  if (e.isBrowser) {
                    const o = this._getWindow();
                    o.addEventListener("resize", this._changeListener),
                      o.addEventListener(
                        "orientationchange",
                        this._changeListener
                      );
                  }
                  this.change().subscribe(() => (this._viewportSize = null));
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const e = this._getWindow();
                e.removeEventListener("resize", this._changeListener),
                  e.removeEventListener(
                    "orientationchange",
                    this._changeListener
                  );
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const e = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), e;
            }
            getViewportRect() {
              const e = this.getViewportScrollPosition(),
                { width: n, height: r } = this.getViewportSize();
              return {
                top: e.top,
                left: e.left,
                bottom: e.top + r,
                right: e.left + n,
                height: r,
                width: n,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const e = this._document,
                n = this._getWindow(),
                r = e.documentElement,
                o = r.getBoundingClientRect();
              return {
                top:
                  -o.top || e.body.scrollTop || n.scrollY || r.scrollTop || 0,
                left:
                  -o.left ||
                  e.body.scrollLeft ||
                  n.scrollX ||
                  r.scrollLeft ||
                  0,
              };
            }
            change(e = 20) {
              return e > 0 ? this._change.pipe(Zg(e)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const e = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: e.innerWidth, height: e.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(zt), w(Z), w(le, 8));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })();
      const NS = new E("VIRTUAL_SCROLLABLE");
      let h$ = (() => {
        class i extends PS {
          constructor(e, n, r, o) {
            super(e, n, r, o);
          }
          measureViewportSize(e) {
            const n = this.elementRef.nativeElement;
            return "horizontal" === e ? n.clientWidth : n.clientHeight;
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(v(ce), v(yu), v(Z), v(rl, 8));
          }),
          (i.ɵdir = M({ type: i, features: [N] })),
          i
        );
      })();
      const m$ = typeof requestAnimationFrame < "u" ? K8 : n$;
      let p$ = (() => {
          class i extends h$ {
            get orientation() {
              return this._orientation;
            }
            set orientation(e) {
              this._orientation !== e &&
                ((this._orientation = e), this._calculateSpacerSize());
            }
            get appendOnly() {
              return this._appendOnly;
            }
            set appendOnly(e) {
              this._appendOnly = ze(e);
            }
            constructor(e, n, r, o, s, a, l, c) {
              super(e, a, r, s),
                (this.elementRef = e),
                (this._changeDetectorRef = n),
                (this._scrollStrategy = o),
                (this.scrollable = c),
                (this._platform = Y(zt)),
                (this._detachedSubject = new se()),
                (this._renderedRangeSubject = new se()),
                (this._orientation = "vertical"),
                (this._appendOnly = !1),
                (this.scrolledIndexChange = new be((d) =>
                  this._scrollStrategy.scrolledIndexChange.subscribe((u) =>
                    Promise.resolve().then(() =>
                      this.ngZone.run(() => d.next(u))
                    )
                  )
                )),
                (this.renderedRangeStream = this._renderedRangeSubject),
                (this._totalContentSize = 0),
                (this._totalContentWidth = ""),
                (this._totalContentHeight = ""),
                (this._renderedRange = { start: 0, end: 0 }),
                (this._dataLength = 0),
                (this._viewportSize = 0),
                (this._renderedContentOffset = 0),
                (this._renderedContentOffsetNeedsRewrite = !1),
                (this._isChangeDetectionPending = !1),
                (this._runAfterChangeDetection = []),
                (this._viewportChanges = ut.EMPTY),
                (this._viewportChanges = l.change().subscribe(() => {
                  this.checkViewportSize();
                })),
                this.scrollable ||
                  (this.elementRef.nativeElement.classList.add(
                    "cdk-virtual-scrollable"
                  ),
                  (this.scrollable = this));
            }
            ngOnInit() {
              this._platform.isBrowser &&
                (this.scrollable === this && super.ngOnInit(),
                this.ngZone.runOutsideAngular(() =>
                  Promise.resolve().then(() => {
                    this._measureViewportSize(),
                      this._scrollStrategy.attach(this),
                      this.scrollable
                        .elementScrolled()
                        .pipe(Ld(null), Zg(0, m$))
                        .subscribe(() =>
                          this._scrollStrategy.onContentScrolled()
                        ),
                      this._markChangeDetectionNeeded();
                  })
                ));
            }
            ngOnDestroy() {
              this.detach(),
                this._scrollStrategy.detach(),
                this._renderedRangeSubject.complete(),
                this._detachedSubject.complete(),
                this._viewportChanges.unsubscribe(),
                super.ngOnDestroy();
            }
            attach(e) {
              this.ngZone.runOutsideAngular(() => {
                (this._forOf = e),
                  this._forOf.dataStream
                    .pipe(yi(this._detachedSubject))
                    .subscribe((n) => {
                      const r = n.length;
                      r !== this._dataLength &&
                        ((this._dataLength = r),
                        this._scrollStrategy.onDataLengthChanged()),
                        this._doChangeDetection();
                    });
              });
            }
            detach() {
              (this._forOf = null), this._detachedSubject.next();
            }
            getDataLength() {
              return this._dataLength;
            }
            getViewportSize() {
              return this._viewportSize;
            }
            getRenderedRange() {
              return this._renderedRange;
            }
            measureBoundingClientRectWithScrollOffset(e) {
              return this.getElementRef().nativeElement.getBoundingClientRect()[
                e
              ];
            }
            setTotalContentSize(e) {
              this._totalContentSize !== e &&
                ((this._totalContentSize = e),
                this._calculateSpacerSize(),
                this._markChangeDetectionNeeded());
            }
            setRenderedRange(e) {
              (function f$(i, t) {
                return i.start == t.start && i.end == t.end;
              })(this._renderedRange, e) ||
                (this.appendOnly &&
                  (e = {
                    start: 0,
                    end: Math.max(this._renderedRange.end, e.end),
                  }),
                this._renderedRangeSubject.next((this._renderedRange = e)),
                this._markChangeDetectionNeeded(() =>
                  this._scrollStrategy.onContentRendered()
                ));
            }
            getOffsetToRenderedContentStart() {
              return this._renderedContentOffsetNeedsRewrite
                ? null
                : this._renderedContentOffset;
            }
            setRenderedContentOffset(e, n = "to-start") {
              e = this.appendOnly && "to-start" === n ? 0 : e;
              const o = "horizontal" == this.orientation,
                s = o ? "X" : "Y";
              let l = `translate${s}(${Number(
                (o && this.dir && "rtl" == this.dir.value ? -1 : 1) * e
              )}px)`;
              (this._renderedContentOffset = e),
                "to-end" === n &&
                  ((l += ` translate${s}(-100%)`),
                  (this._renderedContentOffsetNeedsRewrite = !0)),
                this._renderedContentTransform != l &&
                  ((this._renderedContentTransform = l),
                  this._markChangeDetectionNeeded(() => {
                    this._renderedContentOffsetNeedsRewrite
                      ? ((this._renderedContentOffset -=
                          this.measureRenderedContentSize()),
                        (this._renderedContentOffsetNeedsRewrite = !1),
                        this.setRenderedContentOffset(
                          this._renderedContentOffset
                        ))
                      : this._scrollStrategy.onRenderedOffsetChanged();
                  }));
            }
            scrollToOffset(e, n = "auto") {
              const r = { behavior: n };
              "horizontal" === this.orientation ? (r.start = e) : (r.top = e),
                this.scrollable.scrollTo(r);
            }
            scrollToIndex(e, n = "auto") {
              this._scrollStrategy.scrollToIndex(e, n);
            }
            measureScrollOffset(e) {
              let n;
              return (
                (n =
                  this.scrollable == this
                    ? (r) => super.measureScrollOffset(r)
                    : (r) => this.scrollable.measureScrollOffset(r)),
                Math.max(
                  0,
                  n(
                    e ?? ("horizontal" === this.orientation ? "start" : "top")
                  ) - this.measureViewportOffset()
                )
              );
            }
            measureViewportOffset(e) {
              let n;
              const r = "left",
                o = "right",
                s = "rtl" == this.dir?.value;
              n =
                "start" == e
                  ? s
                    ? o
                    : r
                  : "end" == e
                  ? s
                    ? r
                    : o
                  : e || ("horizontal" === this.orientation ? "left" : "top");
              const a =
                this.scrollable.measureBoundingClientRectWithScrollOffset(n);
              return (
                this.elementRef.nativeElement.getBoundingClientRect()[n] - a
              );
            }
            measureRenderedContentSize() {
              const e = this._contentWrapper.nativeElement;
              return "horizontal" === this.orientation
                ? e.offsetWidth
                : e.offsetHeight;
            }
            measureRangeSize(e) {
              return this._forOf
                ? this._forOf.measureRangeSize(e, this.orientation)
                : 0;
            }
            checkViewportSize() {
              this._measureViewportSize(),
                this._scrollStrategy.onDataLengthChanged();
            }
            _measureViewportSize() {
              this._viewportSize = this.scrollable.measureViewportSize(
                this.orientation
              );
            }
            _markChangeDetectionNeeded(e) {
              e && this._runAfterChangeDetection.push(e),
                this._isChangeDetectionPending ||
                  ((this._isChangeDetectionPending = !0),
                  this.ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => {
                      this._doChangeDetection();
                    })
                  ));
            }
            _doChangeDetection() {
              (this._isChangeDetectionPending = !1),
                (this._contentWrapper.nativeElement.style.transform =
                  this._renderedContentTransform),
                this.ngZone.run(() => this._changeDetectorRef.markForCheck());
              const e = this._runAfterChangeDetection;
              this._runAfterChangeDetection = [];
              for (const n of e) n();
            }
            _calculateSpacerSize() {
              (this._totalContentHeight =
                "horizontal" === this.orientation
                  ? ""
                  : `${this._totalContentSize}px`),
                (this._totalContentWidth =
                  "horizontal" === this.orientation
                    ? `${this._totalContentSize}px`
                    : "");
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(
                v(ce),
                v(Wi),
                v(Z),
                v(c$, 8),
                v(rl, 8),
                v(yu),
                v(wu),
                v(NS, 8)
              );
            }),
            (i.ɵcmp = Te({
              type: i,
              selectors: [["cdk-virtual-scroll-viewport"]],
              viewQuery: function (e, n) {
                if ((1 & e && Xt(a$, 7), 2 & e)) {
                  let r;
                  Ie((r = Ae())) && (n._contentWrapper = r.first);
                }
              },
              hostAttrs: [1, "cdk-virtual-scroll-viewport"],
              hostVars: 4,
              hostBindings: function (e, n) {
                2 & e &&
                  Qe(
                    "cdk-virtual-scroll-orientation-horizontal",
                    "horizontal" === n.orientation
                  )(
                    "cdk-virtual-scroll-orientation-vertical",
                    "horizontal" !== n.orientation
                  );
              },
              inputs: { orientation: "orientation", appendOnly: "appendOnly" },
              outputs: { scrolledIndexChange: "scrolledIndexChange" },
              standalone: !0,
              features: [
                X([
                  {
                    provide: PS,
                    useFactory: (t, e) => t || e,
                    deps: [[new rn(), new pc(NS)], i],
                  },
                ]),
                N,
                Rm,
              ],
              ngContentSelectors: l$,
              decls: 4,
              vars: 4,
              consts: [
                [1, "cdk-virtual-scroll-content-wrapper"],
                ["contentWrapper", ""],
                [1, "cdk-virtual-scroll-spacer"],
              ],
              template: function (e, n) {
                1 & e &&
                  (pi(), ne(0, "div", 0, 1), $e(2), me(), Ze(3, "div", 2)),
                  2 & e &&
                    (Pe(3),
                    jr("width", n._totalContentWidth)(
                      "height",
                      n._totalContentHeight
                    ));
              },
              styles: [
                "cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            i
          );
        })(),
        xu = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({})),
            i
          );
        })(),
        Jg = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [ol, xu, p$, ol, xu] })),
            i
          );
        })();
      const LS = iS();
      class g$ {
        constructor(t, e) {
          (this._viewportRuler = t),
            (this._previousHTMLStyles = { top: "", left: "" }),
            (this._isEnabled = !1),
            (this._document = e);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const t = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = t.style.left || ""),
              (this._previousHTMLStyles.top = t.style.top || ""),
              (t.style.left = gt(-this._previousScrollPosition.left)),
              (t.style.top = gt(-this._previousScrollPosition.top)),
              t.classList.add("cdk-global-scrollblock"),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const t = this._document.documentElement,
              n = t.style,
              r = this._document.body.style,
              o = n.scrollBehavior || "",
              s = r.scrollBehavior || "";
            (this._isEnabled = !1),
              (n.left = this._previousHTMLStyles.left),
              (n.top = this._previousHTMLStyles.top),
              t.classList.remove("cdk-global-scrollblock"),
              LS && (n.scrollBehavior = r.scrollBehavior = "auto"),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top
              ),
              LS && ((n.scrollBehavior = o), (r.scrollBehavior = s));
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              "cdk-global-scrollblock"
            ) ||
            this._isEnabled
          )
            return !1;
          const e = this._document.body,
            n = this._viewportRuler.getViewportSize();
          return e.scrollHeight > n.height || e.scrollWidth > n.width;
        }
      }
      class _$ {
        constructor(t, e, n, r) {
          (this._scrollDispatcher = t),
            (this._ngZone = e),
            (this._viewportRuler = n),
            (this._config = r),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          if (this._scrollSubscription) return;
          const t = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = t.subscribe(() => {
                const e = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(e - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = t.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class BS {
        enable() {}
        disable() {}
        attach() {}
      }
      function e_(i, t) {
        return t.some(
          (e) =>
            i.bottom < e.top ||
            i.top > e.bottom ||
            i.right < e.left ||
            i.left > e.right
        );
      }
      function VS(i, t) {
        return t.some(
          (e) =>
            i.top < e.top ||
            i.bottom > e.bottom ||
            i.left < e.left ||
            i.right > e.right
        );
      }
      class b$ {
        constructor(t, e, n, r) {
          (this._scrollDispatcher = t),
            (this._viewportRuler = e),
            (this._ngZone = n),
            (this._config = r),
            (this._scrollSubscription = null);
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const e =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: n, height: r } =
                      this._viewportRuler.getViewportSize();
                  e_(e, [
                    {
                      width: n,
                      height: r,
                      bottom: r,
                      right: n,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let v$ = (() => {
        class i {
          constructor(e, n, r, o) {
            (this._scrollDispatcher = e),
              (this._viewportRuler = n),
              (this._ngZone = r),
              (this.noop = () => new BS()),
              (this.close = (s) =>
                new _$(
                  this._scrollDispatcher,
                  this._ngZone,
                  this._viewportRuler,
                  s
                )),
              (this.block = () => new g$(this._viewportRuler, this._document)),
              (this.reposition = (s) =>
                new b$(
                  this._scrollDispatcher,
                  this._viewportRuler,
                  this._ngZone,
                  s
                )),
              (this._document = o);
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(yu), w(wu), w(Z), w(le));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      class jS {
        constructor(t) {
          if (
            ((this.scrollStrategy = new BS()),
            (this.panelClass = ""),
            (this.hasBackdrop = !1),
            (this.backdropClass = "cdk-overlay-dark-backdrop"),
            (this.disposeOnNavigation = !1),
            t)
          ) {
            const e = Object.keys(t);
            for (const n of e) void 0 !== t[n] && (this[n] = t[n]);
          }
        }
      }
      class y$ {
        constructor(t, e) {
          (this.connectionPair = t), (this.scrollableViewProperties = e);
        }
      }
      let HS = (() => {
          class i {
            constructor(e) {
              (this._attachedOverlays = []), (this._document = e);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(e) {
              this.remove(e), this._attachedOverlays.push(e);
            }
            remove(e) {
              const n = this._attachedOverlays.indexOf(e);
              n > -1 && this._attachedOverlays.splice(n, 1),
                0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(le));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })(),
        w$ = (() => {
          class i extends HS {
            constructor(e, n) {
              super(e),
                (this._ngZone = n),
                (this._keydownListener = (r) => {
                  const o = this._attachedOverlays;
                  for (let s = o.length - 1; s > -1; s--)
                    if (o[s]._keydownEvents.observers.length > 0) {
                      const a = o[s]._keydownEvents;
                      this._ngZone
                        ? this._ngZone.run(() => a.next(r))
                        : a.next(r);
                      break;
                    }
                });
            }
            add(e) {
              super.add(e),
                this._isAttached ||
                  (this._ngZone
                    ? this._ngZone.runOutsideAngular(() =>
                        this._document.body.addEventListener(
                          "keydown",
                          this._keydownListener
                        )
                      )
                    : this._document.body.addEventListener(
                        "keydown",
                        this._keydownListener
                      ),
                  (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener(
                  "keydown",
                  this._keydownListener
                ),
                (this._isAttached = !1));
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(le), w(Z, 8));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })(),
        x$ = (() => {
          class i extends HS {
            constructor(e, n, r) {
              super(e),
                (this._platform = n),
                (this._ngZone = r),
                (this._cursorStyleIsSet = !1),
                (this._pointerDownListener = (o) => {
                  this._pointerDownEventTarget = dr(o);
                }),
                (this._clickListener = (o) => {
                  const s = dr(o),
                    a =
                      "click" === o.type && this._pointerDownEventTarget
                        ? this._pointerDownEventTarget
                        : s;
                  this._pointerDownEventTarget = null;
                  const l = this._attachedOverlays.slice();
                  for (let c = l.length - 1; c > -1; c--) {
                    const d = l[c];
                    if (
                      d._outsidePointerEvents.observers.length < 1 ||
                      !d.hasAttached()
                    )
                      continue;
                    if (
                      d.overlayElement.contains(s) ||
                      d.overlayElement.contains(a)
                    )
                      break;
                    const u = d._outsidePointerEvents;
                    this._ngZone
                      ? this._ngZone.run(() => u.next(o))
                      : u.next(o);
                  }
                });
            }
            add(e) {
              if ((super.add(e), !this._isAttached)) {
                const n = this._document.body;
                this._ngZone
                  ? this._ngZone.runOutsideAngular(() =>
                      this._addEventListeners(n)
                    )
                  : this._addEventListeners(n),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = n.style.cursor),
                    (n.style.cursor = "pointer"),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const e = this._document.body;
                e.removeEventListener(
                  "pointerdown",
                  this._pointerDownListener,
                  !0
                ),
                  e.removeEventListener("click", this._clickListener, !0),
                  e.removeEventListener("auxclick", this._clickListener, !0),
                  e.removeEventListener("contextmenu", this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((e.style.cursor = this._cursorOriginalValue),
                    (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
            _addEventListeners(e) {
              e.addEventListener("pointerdown", this._pointerDownListener, !0),
                e.addEventListener("click", this._clickListener, !0),
                e.addEventListener("auxclick", this._clickListener, !0),
                e.addEventListener("contextmenu", this._clickListener, !0);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(le), w(zt), w(Z, 8));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })(),
        zS = (() => {
          class i {
            constructor(e, n) {
              (this._platform = n), (this._document = e);
            }
            ngOnDestroy() {
              this._containerElement?.remove();
            }
            getContainerElement() {
              return (
                this._containerElement || this._createContainer(),
                this._containerElement
              );
            }
            _createContainer() {
              const e = "cdk-overlay-container";
              if (this._platform.isBrowser || Lg()) {
                const r = this._document.querySelectorAll(
                  `.${e}[platform="server"], .${e}[platform="test"]`
                );
                for (let o = 0; o < r.length; o++) r[o].remove();
              }
              const n = this._document.createElement("div");
              n.classList.add(e),
                Lg()
                  ? n.setAttribute("platform", "test")
                  : this._platform.isBrowser ||
                    n.setAttribute("platform", "server"),
                this._document.body.appendChild(n),
                (this._containerElement = n);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(le), w(zt));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })();
      class C$ {
        constructor(t, e, n, r, o, s, a, l, c, d = !1) {
          (this._portalOutlet = t),
            (this._host = e),
            (this._pane = n),
            (this._config = r),
            (this._ngZone = o),
            (this._keyboardDispatcher = s),
            (this._document = a),
            (this._location = l),
            (this._outsideClickDispatcher = c),
            (this._animationsDisabled = d),
            (this._backdropElement = null),
            (this._backdropClick = new se()),
            (this._attachments = new se()),
            (this._detachments = new se()),
            (this._locationChanges = ut.EMPTY),
            (this._backdropClickHandler = (u) => this._backdropClick.next(u)),
            (this._backdropTransitionendHandler = (u) => {
              this._disposeBackdrop(u.target);
            }),
            (this._keydownEvents = new se()),
            (this._outsidePointerEvents = new se()),
            r.scrollStrategy &&
              ((this._scrollStrategy = r.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = r.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(t) {
          !this._host.parentElement &&
            this._previousHostParent &&
            this._previousHostParent.appendChild(this._host);
          const e = this._portalOutlet.attach(t);
          return (
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe(Ri(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose()
              )),
            this._outsideClickDispatcher.add(this),
            "function" == typeof e?.onDestroy &&
              e.onDestroy(() => {
                this.hasAttached() &&
                  this._ngZone.runOutsideAngular(() =>
                    Promise.resolve().then(() => this.detach())
                  );
              }),
            e
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const t = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            t
          );
        }
        dispose() {
          const t = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this._disposeBackdrop(this._backdropElement),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host?.remove(),
            (this._previousHostParent = this._pane = this._host = null),
            t && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(t) {
          t !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = t),
            this.hasAttached() && (t.attach(this), this.updatePosition()));
        }
        updateSize(t) {
          (this._config = { ...this._config, ...t }), this._updateElementSize();
        }
        setDirection(t) {
          (this._config = { ...this._config, direction: t }),
            this._updateElementDirection();
        }
        addPanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !0);
        }
        removePanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !1);
        }
        getDirection() {
          const t = this._config.direction;
          return t ? ("string" == typeof t ? t : t.value) : "ltr";
        }
        updateScrollStrategy(t) {
          t !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = t),
            this.hasAttached() && (t.attach(this), t.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute("dir", this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const t = this._pane.style;
          (t.width = gt(this._config.width)),
            (t.height = gt(this._config.height)),
            (t.minWidth = gt(this._config.minWidth)),
            (t.minHeight = gt(this._config.minHeight)),
            (t.maxWidth = gt(this._config.maxWidth)),
            (t.maxHeight = gt(this._config.maxHeight));
        }
        _togglePointerEvents(t) {
          this._pane.style.pointerEvents = t ? "" : "none";
        }
        _attachBackdrop() {
          const t = "cdk-overlay-backdrop-showing";
          (this._backdropElement = this._document.createElement("div")),
            this._backdropElement.classList.add("cdk-overlay-backdrop"),
            this._animationsDisabled &&
              this._backdropElement.classList.add(
                "cdk-overlay-backdrop-noop-animation"
              ),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host
            ),
            this._backdropElement.addEventListener(
              "click",
              this._backdropClickHandler
            ),
            !this._animationsDisabled && typeof requestAnimationFrame < "u"
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(t);
                  });
                })
              : this._backdropElement.classList.add(t);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          const t = this._backdropElement;
          if (t) {
            if (this._animationsDisabled) return void this._disposeBackdrop(t);
            t.classList.remove("cdk-overlay-backdrop-showing"),
              this._ngZone.runOutsideAngular(() => {
                t.addEventListener(
                  "transitionend",
                  this._backdropTransitionendHandler
                );
              }),
              (t.style.pointerEvents = "none"),
              (this._backdropTimeout = this._ngZone.runOutsideAngular(() =>
                setTimeout(() => {
                  this._disposeBackdrop(t);
                }, 500)
              ));
          }
        }
        _toggleClasses(t, e, n) {
          const r = hu(e || []).filter((o) => !!o);
          r.length && (n ? t.classList.add(...r) : t.classList.remove(...r));
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const t = this._ngZone.onStable
              .pipe(yi(Sh(this._attachments, this._detachments)))
              .subscribe(() => {
                (!this._pane ||
                  !this._host ||
                  0 === this._pane.children.length) &&
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._host.remove()),
                  t.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const t = this._scrollStrategy;
          t && (t.disable(), t.detach && t.detach());
        }
        _disposeBackdrop(t) {
          t &&
            (t.removeEventListener("click", this._backdropClickHandler),
            t.removeEventListener(
              "transitionend",
              this._backdropTransitionendHandler
            ),
            t.remove(),
            this._backdropElement === t && (this._backdropElement = null)),
            this._backdropTimeout &&
              (clearTimeout(this._backdropTimeout),
              (this._backdropTimeout = void 0));
        }
      }
      const US = "cdk-overlay-connected-position-bounding-box",
        D$ = /([A-Za-z%]+)$/;
      class E$ {
        get positions() {
          return this._preferredPositions;
        }
        constructor(t, e, n, r, o) {
          (this._viewportRuler = e),
            (this._document = n),
            (this._platform = r),
            (this._overlayContainer = o),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new se()),
            (this._resizeSubscription = ut.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(t);
        }
        attach(t) {
          this._validatePositions(),
            t.hostElement.classList.add(US),
            (this._overlayRef = t),
            (this._boundingBox = t.hostElement),
            (this._pane = t.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect()),
            (this._containerRect = this._overlayContainer
              .getContainerElement()
              .getBoundingClientRect());
          const t = this._originRect,
            e = this._overlayRect,
            n = this._viewportRect,
            r = this._containerRect,
            o = [];
          let s;
          for (let a of this._preferredPositions) {
            let l = this._getOriginPoint(t, r, a),
              c = this._getOverlayPoint(l, e, a),
              d = this._getOverlayFit(c, e, n, a);
            if (d.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(a, l);
            this._canFitWithFlexibleDimensions(d, c, n)
              ? o.push({
                  position: a,
                  origin: l,
                  overlayRect: e,
                  boundingBoxRect: this._calculateBoundingBoxRect(l, a),
                })
              : (!s || s.overlayFit.visibleArea < d.visibleArea) &&
                (s = {
                  overlayFit: d,
                  overlayPoint: c,
                  originPoint: l,
                  position: a,
                  overlayRect: e,
                });
          }
          if (o.length) {
            let a = null,
              l = -1;
            for (const c of o) {
              const d =
                c.boundingBoxRect.width *
                c.boundingBoxRect.height *
                (c.position.weight || 1);
              d > l && ((l = d), (a = c));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(a.position, a.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(s.position, s.originPoint)
            );
          this._applyPosition(s.position, s.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              io(this._boundingBox.style, {
                top: "",
                left: "",
                right: "",
                bottom: "",
                height: "",
                width: "",
                alignItems: "",
                justifyContent: "",
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(US),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          const t = this._lastPosition;
          if (t) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect()),
              (this._containerRect = this._overlayContainer
                .getContainerElement()
                .getBoundingClientRect());
            const e = this._getOriginPoint(
              this._originRect,
              this._containerRect,
              t
            );
            this._applyPosition(t, e);
          } else this.apply();
        }
        withScrollableContainers(t) {
          return (this._scrollables = t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t),
            -1 === t.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(t) {
          return (this._viewportMargin = t), this;
        }
        withFlexibleDimensions(t = !0) {
          return (this._hasFlexibleDimensions = t), this;
        }
        withGrowAfterOpen(t = !0) {
          return (this._growAfterOpen = t), this;
        }
        withPush(t = !0) {
          return (this._canPush = t), this;
        }
        withLockedPosition(t = !0) {
          return (this._positionLocked = t), this;
        }
        setOrigin(t) {
          return (this._origin = t), this;
        }
        withDefaultOffsetX(t) {
          return (this._offsetX = t), this;
        }
        withDefaultOffsetY(t) {
          return (this._offsetY = t), this;
        }
        withTransformOriginOn(t) {
          return (this._transformOriginSelector = t), this;
        }
        _getOriginPoint(t, e, n) {
          let r, o;
          if ("center" == n.originX) r = t.left + t.width / 2;
          else {
            const s = this._isRtl() ? t.right : t.left,
              a = this._isRtl() ? t.left : t.right;
            r = "start" == n.originX ? s : a;
          }
          return (
            e.left < 0 && (r -= e.left),
            (o =
              "center" == n.originY
                ? t.top + t.height / 2
                : "top" == n.originY
                ? t.top
                : t.bottom),
            e.top < 0 && (o -= e.top),
            { x: r, y: o }
          );
        }
        _getOverlayPoint(t, e, n) {
          let r, o;
          return (
            (r =
              "center" == n.overlayX
                ? -e.width / 2
                : "start" === n.overlayX
                ? this._isRtl()
                  ? -e.width
                  : 0
                : this._isRtl()
                ? 0
                : -e.width),
            (o =
              "center" == n.overlayY
                ? -e.height / 2
                : "top" == n.overlayY
                ? 0
                : -e.height),
            { x: t.x + r, y: t.y + o }
          );
        }
        _getOverlayFit(t, e, n, r) {
          const o = GS(e);
          let { x: s, y: a } = t,
            l = this._getOffset(r, "x"),
            c = this._getOffset(r, "y");
          l && (s += l), c && (a += c);
          let h = 0 - a,
            f = a + o.height - n.height,
            m = this._subtractOverflows(o.width, 0 - s, s + o.width - n.width),
            p = this._subtractOverflows(o.height, h, f),
            g = m * p;
          return {
            visibleArea: g,
            isCompletelyWithinViewport: o.width * o.height === g,
            fitsInViewportVertically: p === o.height,
            fitsInViewportHorizontally: m == o.width,
          };
        }
        _canFitWithFlexibleDimensions(t, e, n) {
          if (this._hasFlexibleDimensions) {
            const r = n.bottom - e.y,
              o = n.right - e.x,
              s = $S(this._overlayRef.getConfig().minHeight),
              a = $S(this._overlayRef.getConfig().minWidth);
            return (
              (t.fitsInViewportVertically || (null != s && s <= r)) &&
              (t.fitsInViewportHorizontally || (null != a && a <= o))
            );
          }
          return !1;
        }
        _pushOverlayOnScreen(t, e, n) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: t.x + this._previousPushAmount.x,
              y: t.y + this._previousPushAmount.y,
            };
          const r = GS(e),
            o = this._viewportRect,
            s = Math.max(t.x + r.width - o.width, 0),
            a = Math.max(t.y + r.height - o.height, 0),
            l = Math.max(o.top - n.top - t.y, 0),
            c = Math.max(o.left - n.left - t.x, 0);
          let d = 0,
            u = 0;
          return (
            (d =
              r.width <= o.width
                ? c || -s
                : t.x < this._viewportMargin
                ? o.left - n.left - t.x
                : 0),
            (u =
              r.height <= o.height
                ? l || -a
                : t.y < this._viewportMargin
                ? o.top - n.top - t.y
                : 0),
            (this._previousPushAmount = { x: d, y: u }),
            { x: t.x + d, y: t.y + u }
          );
        }
        _applyPosition(t, e) {
          if (
            (this._setTransformOrigin(t),
            this._setOverlayElementStyles(e, t),
            this._setBoundingBoxStyles(e, t),
            t.panelClass && this._addPanelClasses(t.panelClass),
            (this._lastPosition = t),
            this._positionChanges.observers.length)
          ) {
            const n = this._getScrollVisibility(),
              r = new y$(t, n);
            this._positionChanges.next(r);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(t) {
          if (!this._transformOriginSelector) return;
          const e = this._boundingBox.querySelectorAll(
            this._transformOriginSelector
          );
          let n,
            r = t.overlayY;
          n =
            "center" === t.overlayX
              ? "center"
              : this._isRtl()
              ? "start" === t.overlayX
                ? "right"
                : "left"
              : "start" === t.overlayX
              ? "left"
              : "right";
          for (let o = 0; o < e.length; o++)
            e[o].style.transformOrigin = `${n} ${r}`;
        }
        _calculateBoundingBoxRect(t, e) {
          const n = this._viewportRect,
            r = this._isRtl();
          let o, s, a, d, u, h;
          if ("top" === e.overlayY)
            (s = t.y), (o = n.height - s + this._viewportMargin);
          else if ("bottom" === e.overlayY)
            (a = n.height - t.y + 2 * this._viewportMargin),
              (o = n.height - a + this._viewportMargin);
          else {
            const f = Math.min(n.bottom - t.y + n.top, t.y),
              m = this._lastBoundingBoxSize.height;
            (o = 2 * f),
              (s = t.y - f),
              o > m &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (s = t.y - m / 2);
          }
          if (("end" === e.overlayX && !r) || ("start" === e.overlayX && r))
            (h = n.width - t.x + this._viewportMargin),
              (d = t.x - this._viewportMargin);
          else if (
            ("start" === e.overlayX && !r) ||
            ("end" === e.overlayX && r)
          )
            (u = t.x), (d = n.right - t.x);
          else {
            const f = Math.min(n.right - t.x + n.left, t.x),
              m = this._lastBoundingBoxSize.width;
            (d = 2 * f),
              (u = t.x - f),
              d > m &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (u = t.x - m / 2);
          }
          return { top: s, left: u, bottom: a, right: h, width: d, height: o };
        }
        _setBoundingBoxStyles(t, e) {
          const n = this._calculateBoundingBoxRect(t, e);
          !this._isInitialRender &&
            !this._growAfterOpen &&
            ((n.height = Math.min(n.height, this._lastBoundingBoxSize.height)),
            (n.width = Math.min(n.width, this._lastBoundingBoxSize.width)));
          const r = {};
          if (this._hasExactPosition())
            (r.top = r.left = "0"),
              (r.bottom = r.right = r.maxHeight = r.maxWidth = ""),
              (r.width = r.height = "100%");
          else {
            const o = this._overlayRef.getConfig().maxHeight,
              s = this._overlayRef.getConfig().maxWidth;
            (r.height = gt(n.height)),
              (r.top = gt(n.top)),
              (r.bottom = gt(n.bottom)),
              (r.width = gt(n.width)),
              (r.left = gt(n.left)),
              (r.right = gt(n.right)),
              (r.alignItems =
                "center" === e.overlayX
                  ? "center"
                  : "end" === e.overlayX
                  ? "flex-end"
                  : "flex-start"),
              (r.justifyContent =
                "center" === e.overlayY
                  ? "center"
                  : "bottom" === e.overlayY
                  ? "flex-end"
                  : "flex-start"),
              o && (r.maxHeight = gt(o)),
              s && (r.maxWidth = gt(s));
          }
          (this._lastBoundingBoxSize = n), io(this._boundingBox.style, r);
        }
        _resetBoundingBoxStyles() {
          io(this._boundingBox.style, {
            top: "0",
            left: "0",
            right: "0",
            bottom: "0",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          });
        }
        _resetOverlayElementStyles() {
          io(this._pane.style, {
            top: "",
            left: "",
            bottom: "",
            right: "",
            position: "",
            transform: "",
          });
        }
        _setOverlayElementStyles(t, e) {
          const n = {},
            r = this._hasExactPosition(),
            o = this._hasFlexibleDimensions,
            s = this._overlayRef.getConfig();
          if (r) {
            const d = this._viewportRuler.getViewportScrollPosition();
            io(n, this._getExactOverlayY(e, t, d)),
              io(n, this._getExactOverlayX(e, t, d));
          } else n.position = "static";
          let a = "",
            l = this._getOffset(e, "x"),
            c = this._getOffset(e, "y");
          l && (a += `translateX(${l}px) `),
            c && (a += `translateY(${c}px)`),
            (n.transform = a.trim()),
            s.maxHeight &&
              (r ? (n.maxHeight = gt(s.maxHeight)) : o && (n.maxHeight = "")),
            s.maxWidth &&
              (r ? (n.maxWidth = gt(s.maxWidth)) : o && (n.maxWidth = "")),
            io(this._pane.style, n);
        }
        _getExactOverlayY(t, e, n) {
          let r = { top: "", bottom: "" },
            o = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed &&
              (o = this._pushOverlayOnScreen(o, this._overlayRect, n)),
            "bottom" === t.overlayY
              ? (r.bottom =
                  this._document.documentElement.clientHeight -
                  (o.y + this._overlayRect.height) +
                  "px")
              : (r.top = gt(o.y)),
            r
          );
        }
        _getExactOverlayX(t, e, n) {
          let s,
            r = { left: "", right: "" },
            o = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed &&
              (o = this._pushOverlayOnScreen(o, this._overlayRect, n)),
            (s = this._isRtl()
              ? "end" === t.overlayX
                ? "left"
                : "right"
              : "end" === t.overlayX
              ? "right"
              : "left"),
            "right" === s
              ? (r.right =
                  this._document.documentElement.clientWidth -
                  (o.x + this._overlayRect.width) +
                  "px")
              : (r.left = gt(o.x)),
            r
          );
        }
        _getScrollVisibility() {
          const t = this._getOriginRect(),
            e = this._pane.getBoundingClientRect(),
            n = this._scrollables.map((r) =>
              r.getElementRef().nativeElement.getBoundingClientRect()
            );
          return {
            isOriginClipped: VS(t, n),
            isOriginOutsideView: e_(t, n),
            isOverlayClipped: VS(e, n),
            isOverlayOutsideView: e_(e, n),
          };
        }
        _subtractOverflows(t, ...e) {
          return e.reduce((n, r) => n - Math.max(r, 0), t);
        }
        _getNarrowedViewportRect() {
          const t = this._document.documentElement.clientWidth,
            e = this._document.documentElement.clientHeight,
            n = this._viewportRuler.getViewportScrollPosition();
          return {
            top: n.top + this._viewportMargin,
            left: n.left + this._viewportMargin,
            right: n.left + t - this._viewportMargin,
            bottom: n.top + e - this._viewportMargin,
            width: t - 2 * this._viewportMargin,
            height: e - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(t, e) {
          return "x" === e
            ? null == t.offsetX
              ? this._offsetX
              : t.offsetX
            : null == t.offsetY
            ? this._offsetY
            : t.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(t) {
          this._pane &&
            hu(t).forEach((e) => {
              "" !== e &&
                -1 === this._appliedPanelClasses.indexOf(e) &&
                (this._appliedPanelClasses.push(e),
                this._pane.classList.add(e));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((t) => {
              this._pane.classList.remove(t);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const t = this._origin;
          if (t instanceof ce) return t.nativeElement.getBoundingClientRect();
          if (t instanceof Element) return t.getBoundingClientRect();
          const e = t.width || 0,
            n = t.height || 0;
          return {
            top: t.y,
            bottom: t.y + n,
            left: t.x,
            right: t.x + e,
            height: n,
            width: e,
          };
        }
      }
      function io(i, t) {
        for (let e in t) t.hasOwnProperty(e) && (i[e] = t[e]);
        return i;
      }
      function $S(i) {
        if ("number" != typeof i && null != i) {
          const [t, e] = i.split(D$);
          return e && "px" !== e ? null : parseFloat(t);
        }
        return i || null;
      }
      function GS(i) {
        return {
          top: Math.floor(i.top),
          right: Math.floor(i.right),
          bottom: Math.floor(i.bottom),
          left: Math.floor(i.left),
          width: Math.floor(i.width),
          height: Math.floor(i.height),
        };
      }
      const qS = "cdk-global-overlay-wrapper";
      class M$ {
        constructor() {
          (this._cssPosition = "static"),
            (this._topOffset = ""),
            (this._bottomOffset = ""),
            (this._alignItems = ""),
            (this._xPosition = ""),
            (this._xOffset = ""),
            (this._width = ""),
            (this._height = ""),
            (this._isDisposed = !1);
        }
        attach(t) {
          const e = t.getConfig();
          (this._overlayRef = t),
            this._width && !e.width && t.updateSize({ width: this._width }),
            this._height && !e.height && t.updateSize({ height: this._height }),
            t.hostElement.classList.add(qS),
            (this._isDisposed = !1);
        }
        top(t = "") {
          return (
            (this._bottomOffset = ""),
            (this._topOffset = t),
            (this._alignItems = "flex-start"),
            this
          );
        }
        left(t = "") {
          return (this._xOffset = t), (this._xPosition = "left"), this;
        }
        bottom(t = "") {
          return (
            (this._topOffset = ""),
            (this._bottomOffset = t),
            (this._alignItems = "flex-end"),
            this
          );
        }
        right(t = "") {
          return (this._xOffset = t), (this._xPosition = "right"), this;
        }
        start(t = "") {
          return (this._xOffset = t), (this._xPosition = "start"), this;
        }
        end(t = "") {
          return (this._xOffset = t), (this._xPosition = "end"), this;
        }
        width(t = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: t })
              : (this._width = t),
            this
          );
        }
        height(t = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: t })
              : (this._height = t),
            this
          );
        }
        centerHorizontally(t = "") {
          return this.left(t), (this._xPosition = "center"), this;
        }
        centerVertically(t = "") {
          return this.top(t), (this._alignItems = "center"), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement.style,
            n = this._overlayRef.getConfig(),
            { width: r, height: o, maxWidth: s, maxHeight: a } = n,
            l = !(
              ("100%" !== r && "100vw" !== r) ||
              (s && "100%" !== s && "100vw" !== s)
            ),
            c = !(
              ("100%" !== o && "100vh" !== o) ||
              (a && "100%" !== a && "100vh" !== a)
            ),
            d = this._xPosition,
            u = this._xOffset,
            h = "rtl" === this._overlayRef.getConfig().direction;
          let f = "",
            m = "",
            p = "";
          l
            ? (p = "flex-start")
            : "center" === d
            ? ((p = "center"), h ? (m = u) : (f = u))
            : h
            ? "left" === d || "end" === d
              ? ((p = "flex-end"), (f = u))
              : ("right" === d || "start" === d) &&
                ((p = "flex-start"), (m = u))
            : "left" === d || "start" === d
            ? ((p = "flex-start"), (f = u))
            : ("right" === d || "end" === d) && ((p = "flex-end"), (m = u)),
            (t.position = this._cssPosition),
            (t.marginLeft = l ? "0" : f),
            (t.marginTop = c ? "0" : this._topOffset),
            (t.marginBottom = this._bottomOffset),
            (t.marginRight = l ? "0" : m),
            (e.justifyContent = p),
            (e.alignItems = c ? "flex-start" : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement,
            n = e.style;
          e.classList.remove(qS),
            (n.justifyContent =
              n.alignItems =
              t.marginTop =
              t.marginBottom =
              t.marginLeft =
              t.marginRight =
              t.position =
                ""),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let S$ = (() => {
          class i {
            constructor(e, n, r, o) {
              (this._viewportRuler = e),
                (this._document = n),
                (this._platform = r),
                (this._overlayContainer = o);
            }
            global() {
              return new M$();
            }
            flexibleConnectedTo(e) {
              return new E$(
                e,
                this._viewportRuler,
                this._document,
                this._platform,
                this._overlayContainer
              );
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(wu), w(le), w(zt), w(zS));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })(),
        T$ = 0,
        ws = (() => {
          class i {
            constructor(e, n, r, o, s, a, l, c, d, u, h, f) {
              (this.scrollStrategies = e),
                (this._overlayContainer = n),
                (this._componentFactoryResolver = r),
                (this._positionBuilder = o),
                (this._keyboardDispatcher = s),
                (this._injector = a),
                (this._ngZone = l),
                (this._document = c),
                (this._directionality = d),
                (this._location = u),
                (this._outsideClickDispatcher = h),
                (this._animationsModuleType = f);
            }
            create(e) {
              const n = this._createHostElement(),
                r = this._createPaneElement(n),
                o = this._createPortalOutlet(r),
                s = new jS(e);
              return (
                (s.direction = s.direction || this._directionality.value),
                new C$(
                  o,
                  n,
                  r,
                  s,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher,
                  "NoopAnimations" === this._animationsModuleType
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(e) {
              const n = this._document.createElement("div");
              return (
                (n.id = "cdk-overlay-" + T$++),
                n.classList.add("cdk-overlay-pane"),
                e.appendChild(n),
                n
              );
            }
            _createHostElement() {
              const e = this._document.createElement("div");
              return (
                this._overlayContainer.getContainerElement().appendChild(e), e
              );
            }
            _createPortalOutlet(e) {
              return (
                this._appRef || (this._appRef = this._injector.get(ts)),
                new H8(
                  e,
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector,
                  this._document
                )
              );
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(
                w(v$),
                w(zS),
                w(Pr),
                w(S$),
                w(w$),
                w(vt),
                w(Z),
                w(le),
                w(rl),
                w(nd),
                w(x$),
                w(ir, 8)
              );
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })();
      const A$ = {
        provide: new E("cdk-connected-overlay-scroll-strategy"),
        deps: [ws],
        useFactory: function I$(i) {
          return () => i.scrollStrategies.reposition();
        },
      };
      let t_ = (() => {
        class i {}
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵmod = K({ type: i })),
          (i.ɵinj = Q({ providers: [ws, A$], imports: [ol, Kg, Jg, Jg] })),
          i
        );
      })();
      function R$(i, t) {
        if (1 & i) {
          const e = pm();
          ne(0, "div", 2)(1, "button", 3),
            lt("click", function () {
              return $h(e), Gh(jt().action());
            }),
            hn(2),
            me()();
        }
        if (2 & i) {
          const e = jt();
          Pe(2), Pn(" ", e.data.action, " ");
        }
      }
      const O$ = ["label"];
      function F$(i, t) {}
      const P$ = Math.pow(2, 31) - 1;
      class i_ {
        constructor(t, e) {
          (this._overlayRef = e),
            (this._afterDismissed = new se()),
            (this._afterOpened = new se()),
            (this._onAction = new se()),
            (this._dismissedByAction = !1),
            (this.containerInstance = t),
            t._onExit.subscribe(() => this._finishDismiss());
        }
        dismiss() {
          this._afterDismissed.closed || this.containerInstance.exit(),
            clearTimeout(this._durationTimeoutId);
        }
        dismissWithAction() {
          this._onAction.closed ||
            ((this._dismissedByAction = !0),
            this._onAction.next(),
            this._onAction.complete(),
            this.dismiss()),
            clearTimeout(this._durationTimeoutId);
        }
        closeWithAction() {
          this.dismissWithAction();
        }
        _dismissAfter(t) {
          this._durationTimeoutId = setTimeout(
            () => this.dismiss(),
            Math.min(t, P$)
          );
        }
        _open() {
          this._afterOpened.closed ||
            (this._afterOpened.next(), this._afterOpened.complete());
        }
        _finishDismiss() {
          this._overlayRef.dispose(),
            this._onAction.closed || this._onAction.complete(),
            this._afterDismissed.next({
              dismissedByAction: this._dismissedByAction,
            }),
            this._afterDismissed.complete(),
            (this._dismissedByAction = !1);
        }
        afterDismissed() {
          return this._afterDismissed;
        }
        afterOpened() {
          return this.containerInstance._onEnter;
        }
        onAction() {
          return this._onAction;
        }
      }
      const WS = new E("MatSnackBarData");
      class Cu {
        constructor() {
          (this.politeness = "assertive"),
            (this.announcementMessage = ""),
            (this.duration = 0),
            (this.data = null),
            (this.horizontalPosition = "center"),
            (this.verticalPosition = "bottom");
        }
      }
      let N$ = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵdir = M({
              type: i,
              selectors: [["", "matSnackBarLabel", ""]],
              hostAttrs: [1, "mat-mdc-snack-bar-label", "mdc-snackbar__label"],
            })),
            i
          );
        })(),
        L$ = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵdir = M({
              type: i,
              selectors: [["", "matSnackBarActions", ""]],
              hostAttrs: [
                1,
                "mat-mdc-snack-bar-actions",
                "mdc-snackbar__actions",
              ],
            })),
            i
          );
        })(),
        B$ = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵdir = M({
              type: i,
              selectors: [["", "matSnackBarAction", ""]],
              hostAttrs: [
                1,
                "mat-mdc-snack-bar-action",
                "mdc-snackbar__action",
              ],
            })),
            i
          );
        })(),
        V$ = (() => {
          class i {
            constructor(e, n) {
              (this.snackBarRef = e), (this.data = n);
            }
            action() {
              this.snackBarRef.dismissWithAction();
            }
            get hasAction() {
              return !!this.data.action;
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(v(i_), v(WS));
            }),
            (i.ɵcmp = Te({
              type: i,
              selectors: [["simple-snack-bar"]],
              hostAttrs: [1, "mat-mdc-simple-snack-bar"],
              exportAs: ["matSnackBar"],
              decls: 3,
              vars: 2,
              consts: [
                ["matSnackBarLabel", ""],
                ["matSnackBarActions", "", 4, "ngIf"],
                ["matSnackBarActions", ""],
                ["mat-button", "", "matSnackBarAction", "", 3, "click"],
              ],
              template: function (e, n) {
                1 & e &&
                  (ne(0, "div", 0), hn(1), me(), Xe(2, R$, 3, 1, "div", 1)),
                  2 & e &&
                    (Pe(1),
                    Pn(" ", n.data.message, "\n"),
                    Pe(1),
                    We("ngIf", n.hasAction));
              },
              dependencies: [fd, IS, N$, L$, B$],
              styles: [".mat-mdc-simple-snack-bar{display:flex}"],
              encapsulation: 2,
              changeDetection: 0,
            })),
            i
          );
        })();
      const j$ = {
        snackBarState: ns("state", [
          Hn("void, hidden", It({ transform: "scale(0.8)", opacity: 0 })),
          Hn("visible", It({ transform: "scale(1)", opacity: 1 })),
          Ki("* => visible", pn("150ms cubic-bezier(0, 0, 0.2, 1)")),
          Ki(
            "* => void, * => hidden",
            pn("75ms cubic-bezier(0.4, 0.0, 1, 1)", It({ opacity: 0 }))
          ),
        ]),
      };
      let H$ = (() => {
          class i extends Yg {
            constructor(e, n, r, o, s) {
              super(),
                (this._ngZone = e),
                (this._elementRef = n),
                (this._changeDetectorRef = r),
                (this._platform = o),
                (this.snackBarConfig = s),
                (this._announceDelay = 150),
                (this._destroyed = !1),
                (this._onAnnounce = new se()),
                (this._onExit = new se()),
                (this._onEnter = new se()),
                (this._animationState = "void"),
                (this.attachDomPortal = (a) => {
                  this._assertNotAttached();
                  const l = this._portalOutlet.attachDomPortal(a);
                  return this._afterPortalAttached(), l;
                }),
                (this._live =
                  "assertive" !== s.politeness || s.announcementMessage
                    ? "off" === s.politeness
                      ? "off"
                      : "polite"
                    : "assertive"),
                this._platform.FIREFOX &&
                  ("polite" === this._live && (this._role = "status"),
                  "assertive" === this._live && (this._role = "alert"));
            }
            attachComponentPortal(e) {
              this._assertNotAttached();
              const n = this._portalOutlet.attachComponentPortal(e);
              return this._afterPortalAttached(), n;
            }
            attachTemplatePortal(e) {
              this._assertNotAttached();
              const n = this._portalOutlet.attachTemplatePortal(e);
              return this._afterPortalAttached(), n;
            }
            onAnimationEnd(e) {
              const { fromState: n, toState: r } = e;
              if (
                ((("void" === r && "void" !== n) || "hidden" === r) &&
                  this._completeExit(),
                "visible" === r)
              ) {
                const o = this._onEnter;
                this._ngZone.run(() => {
                  o.next(), o.complete();
                });
              }
            }
            enter() {
              this._destroyed ||
                ((this._animationState = "visible"),
                this._changeDetectorRef.detectChanges(),
                this._screenReaderAnnounce());
            }
            exit() {
              return (
                this._ngZone.run(() => {
                  (this._animationState = "hidden"),
                    this._elementRef.nativeElement.setAttribute("mat-exit", ""),
                    clearTimeout(this._announceTimeoutId);
                }),
                this._onExit
              );
            }
            ngOnDestroy() {
              (this._destroyed = !0), this._completeExit();
            }
            _completeExit() {
              this._ngZone.onMicrotaskEmpty.pipe(Ri(1)).subscribe(() => {
                this._ngZone.run(() => {
                  this._onExit.next(), this._onExit.complete();
                });
              });
            }
            _afterPortalAttached() {
              const e = this._elementRef.nativeElement,
                n = this.snackBarConfig.panelClass;
              n &&
                (Array.isArray(n)
                  ? n.forEach((r) => e.classList.add(r))
                  : e.classList.add(n));
            }
            _assertNotAttached() {
              this._portalOutlet.hasAttached();
            }
            _screenReaderAnnounce() {
              this._announceTimeoutId ||
                this._ngZone.runOutsideAngular(() => {
                  this._announceTimeoutId = setTimeout(() => {
                    const e =
                        this._elementRef.nativeElement.querySelector(
                          "[aria-hidden]"
                        ),
                      n =
                        this._elementRef.nativeElement.querySelector(
                          "[aria-live]"
                        );
                    if (e && n) {
                      let r = null;
                      this._platform.isBrowser &&
                        document.activeElement instanceof HTMLElement &&
                        e.contains(document.activeElement) &&
                        (r = document.activeElement),
                        e.removeAttribute("aria-hidden"),
                        n.appendChild(e),
                        r?.focus(),
                        this._onAnnounce.next(),
                        this._onAnnounce.complete();
                    }
                  }, this._announceDelay);
                });
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(v(Z), v(ce), v(Wi), v(zt), v(Cu));
            }),
            (i.ɵdir = M({
              type: i,
              viewQuery: function (e, n) {
                if ((1 & e && Xt(RS, 7), 2 & e)) {
                  let r;
                  Ie((r = Ae())) && (n._portalOutlet = r.first);
                }
              },
              features: [N],
            })),
            i
          );
        })(),
        z$ = (() => {
          class i extends H$ {
            _afterPortalAttached() {
              super._afterPortalAttached();
              const e = this._label.nativeElement,
                n = "mdc-snackbar__label";
              e.classList.toggle(n, !e.querySelector(`.${n}`));
            }
          }
          return (
            (i.ɵfac = (function () {
              let t;
              return function (n) {
                return (t || (t = ue(i)))(n || i);
              };
            })()),
            (i.ɵcmp = Te({
              type: i,
              selectors: [["mat-snack-bar-container"]],
              viewQuery: function (e, n) {
                if ((1 & e && Xt(O$, 7), 2 & e)) {
                  let r;
                  Ie((r = Ae())) && (n._label = r.first);
                }
              },
              hostAttrs: [
                1,
                "mdc-snackbar",
                "mat-mdc-snack-bar-container",
                "mdc-snackbar--open",
              ],
              hostVars: 1,
              hostBindings: function (e, n) {
                1 & e &&
                  _m("@state.done", function (o) {
                    return n.onAnimationEnd(o);
                  }),
                  2 & e && Dm("@state", n._animationState);
              },
              features: [N],
              decls: 6,
              vars: 2,
              consts: [
                [1, "mdc-snackbar__surface"],
                [1, "mat-mdc-snack-bar-label"],
                ["label", ""],
                ["aria-hidden", "true"],
                ["cdkPortalOutlet", ""],
              ],
              template: function (e, n) {
                1 & e &&
                  (ne(0, "div", 0)(1, "div", 1, 2)(3, "div", 3),
                  Xe(4, F$, 0, 0, "ng-template", 4),
                  me(),
                  Ze(5, "div"),
                  me()()),
                  2 & e && (Pe(5), qe("aria-live", n._live)("role", n._role));
              },
              dependencies: [RS],
              styles: [
                '.mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss svg,.mat-mdc-snack-bar-container .mdc-snackbar__dismiss img{width:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px));height:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size, inherit);font-family:var(--mdc-snackbar-supporting-text-font, inherit);font-weight:var(--mdc-snackbar-supporting-text-weight, inherit);line-height:var(--mdc-snackbar-supporting-text-line-height, inherit)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-mdc-snack-bar-button-color, transparent);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}',
              ],
              encapsulation: 2,
              data: { animation: [j$.snackBarState] },
            })),
            i
          );
        })(),
        n_ = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [t_, Kg, gi, gu, fe, fe] })),
            i
          );
        })();
      const QS = new E("mat-snack-bar-default-options", {
        providedIn: "root",
        factory: function U$() {
          return new Cu();
        },
      });
      let $$ = (() => {
          class i {
            get _openedSnackBarRef() {
              const e = this._parentSnackBar;
              return e ? e._openedSnackBarRef : this._snackBarRefAtThisLevel;
            }
            set _openedSnackBarRef(e) {
              this._parentSnackBar
                ? (this._parentSnackBar._openedSnackBarRef = e)
                : (this._snackBarRefAtThisLevel = e);
            }
            constructor(e, n, r, o, s, a) {
              (this._overlay = e),
                (this._live = n),
                (this._injector = r),
                (this._breakpointObserver = o),
                (this._parentSnackBar = s),
                (this._defaultConfig = a),
                (this._snackBarRefAtThisLevel = null);
            }
            openFromComponent(e, n) {
              return this._attach(e, n);
            }
            openFromTemplate(e, n) {
              return this._attach(e, n);
            }
            open(e, n = "", r) {
              const o = { ...this._defaultConfig, ...r };
              return (
                (o.data = { message: e, action: n }),
                o.announcementMessage === e && (o.announcementMessage = void 0),
                this.openFromComponent(this.simpleSnackBarComponent, o)
              );
            }
            dismiss() {
              this._openedSnackBarRef && this._openedSnackBarRef.dismiss();
            }
            ngOnDestroy() {
              this._snackBarRefAtThisLevel &&
                this._snackBarRefAtThisLevel.dismiss();
            }
            _attachSnackBarContainer(e, n) {
              const o = vt.create({
                  parent:
                    (n && n.viewContainerRef && n.viewContainerRef.injector) ||
                    this._injector,
                  providers: [{ provide: Cu, useValue: n }],
                }),
                s = new Qg(
                  this.snackBarContainerComponent,
                  n.viewContainerRef,
                  o
                ),
                a = e.attach(s);
              return (a.instance.snackBarConfig = n), a.instance;
            }
            _attach(e, n) {
              const r = { ...new Cu(), ...this._defaultConfig, ...n },
                o = this._createOverlay(r),
                s = this._attachSnackBarContainer(o, r),
                a = new i_(s, o);
              if (e instanceof Et) {
                const l = new AS(e, null, {
                  $implicit: r.data,
                  snackBarRef: a,
                });
                a.instance = s.attachTemplatePortal(l);
              } else {
                const l = this._createInjector(r, a),
                  c = new Qg(e, void 0, l),
                  d = s.attachComponentPortal(c);
                a.instance = d.instance;
              }
              return (
                this._breakpointObserver
                  .observe("(max-width: 599.98px) and (orientation: portrait)")
                  .pipe(yi(o.detachments()))
                  .subscribe((l) => {
                    o.overlayElement.classList.toggle(
                      this.handsetCssClass,
                      l.matches
                    );
                  }),
                r.announcementMessage &&
                  s._onAnnounce.subscribe(() => {
                    this._live.announce(r.announcementMessage, r.politeness);
                  }),
                this._animateSnackBar(a, r),
                (this._openedSnackBarRef = a),
                this._openedSnackBarRef
              );
            }
            _animateSnackBar(e, n) {
              e.afterDismissed().subscribe(() => {
                this._openedSnackBarRef == e &&
                  (this._openedSnackBarRef = null),
                  n.announcementMessage && this._live.clear();
              }),
                this._openedSnackBarRef
                  ? (this._openedSnackBarRef.afterDismissed().subscribe(() => {
                      e.containerInstance.enter();
                    }),
                    this._openedSnackBarRef.dismiss())
                  : e.containerInstance.enter(),
                n.duration &&
                  n.duration > 0 &&
                  e.afterOpened().subscribe(() => e._dismissAfter(n.duration));
            }
            _createOverlay(e) {
              const n = new jS();
              n.direction = e.direction;
              let r = this._overlay.position().global();
              const o = "rtl" === e.direction,
                s =
                  "left" === e.horizontalPosition ||
                  ("start" === e.horizontalPosition && !o) ||
                  ("end" === e.horizontalPosition && o),
                a = !s && "center" !== e.horizontalPosition;
              return (
                s ? r.left("0") : a ? r.right("0") : r.centerHorizontally(),
                "top" === e.verticalPosition ? r.top("0") : r.bottom("0"),
                (n.positionStrategy = r),
                this._overlay.create(n)
              );
            }
            _createInjector(e, n) {
              return vt.create({
                parent:
                  (e && e.viewContainerRef && e.viewContainerRef.injector) ||
                  this._injector,
                providers: [
                  { provide: i_, useValue: n },
                  { provide: WS, useValue: e.data },
                ],
              });
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(ws), w(mS), w(vt), w(Hg), w(i, 12), w(QS));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac })),
            i
          );
        })(),
        G$ = (() => {
          class i extends $$ {
            constructor(e, n, r, o, s, a) {
              super(e, n, r, o, s, a),
                (this.simpleSnackBarComponent = V$),
                (this.snackBarContainerComponent = z$),
                (this.handsetCssClass = "mat-mdc-snack-bar-handset");
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(w(ws), w(mS), w(vt), w(Hg), w(i, 12), w(QS));
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: n_ })),
            i
          );
        })(),
        q$ = (() => {
          class i {
            constructor() {
              (this._vertical = !1), (this._inset = !1);
            }
            get vertical() {
              return this._vertical;
            }
            set vertical(e) {
              this._vertical = ze(e);
            }
            get inset() {
              return this._inset;
            }
            set inset(e) {
              this._inset = ze(e);
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵcmp = Te({
              type: i,
              selectors: [["mat-divider"]],
              hostAttrs: ["role", "separator", 1, "mat-divider"],
              hostVars: 7,
              hostBindings: function (e, n) {
                2 & e &&
                  (qe(
                    "aria-orientation",
                    n.vertical ? "vertical" : "horizontal"
                  ),
                  Qe("mat-divider-vertical", n.vertical)(
                    "mat-divider-horizontal",
                    !n.vertical
                  )("mat-divider-inset", n.inset));
              },
              inputs: { vertical: "vertical", inset: "inset" },
              decls: 0,
              vars: 0,
              template: function (e, n) {},
              styles: [
                ".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            i
          );
        })(),
        W$ = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fe, fe] })),
            i
          );
        })();
      const Q$ = ["*"],
        J$ = new E("MAT_CARD_CONFIG");
      let YS = (() => {
          class i {
            constructor(e) {
              this.appearance = e?.appearance || "raised";
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(v(J$, 8));
            }),
            (i.ɵcmp = Te({
              type: i,
              selectors: [["mat-card"]],
              hostAttrs: [1, "mat-mdc-card", "mdc-card"],
              hostVars: 4,
              hostBindings: function (e, n) {
                2 & e &&
                  Qe("mat-mdc-card-outlined", "outlined" === n.appearance)(
                    "mdc-card--outlined",
                    "outlined" === n.appearance
                  );
              },
              inputs: { appearance: "appearance" },
              exportAs: ["matCard"],
              ngContentSelectors: Q$,
              decls: 1,
              vars: 0,
              template: function (e, n) {
                1 & e && (pi(), $e(0));
              },
              styles: [
                '.mdc-card{display:flex;flex-direction:column;box-sizing:border-box}.mdc-card::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none;pointer-events:none}@media screen and (forced-colors: active){.mdc-card::after{border-color:CanvasText}}.mdc-card--outlined::after{border:none}.mdc-card__content{border-radius:inherit;height:100%}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:""}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__media--square::before{margin-top:100%}.mdc-card__media--16-9::before{margin-top:56.25%}.mdc-card__media-content{position:absolute;top:0;right:0;bottom:0;left:0;box-sizing:border-box}.mdc-card__primary-action{display:flex;flex-direction:column;box-sizing:border-box;position:relative;outline:none;color:inherit;text-decoration:none;cursor:pointer;overflow:hidden}.mdc-card__primary-action:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__primary-action:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mdc-card__actions--full-bleed{padding:0}.mdc-card__action-buttons,.mdc-card__action-icons{display:flex;flex-direction:row;align-items:center;box-sizing:border-box}.mdc-card__action-icons{flex-grow:1;justify-content:flex-end}.mdc-card__action-buttons+.mdc-card__action-icons{margin-left:16px;margin-right:0}[dir=rtl] .mdc-card__action-buttons+.mdc-card__action-icons,.mdc-card__action-buttons+.mdc-card__action-icons[dir=rtl]{margin-left:0;margin-right:16px}.mdc-card__action{display:inline-flex;flex-direction:row;align-items:center;box-sizing:border-box;justify-content:center;cursor:pointer;user-select:none}.mdc-card__action:focus{outline:none}.mdc-card__action--button{margin-left:0;margin-right:8px;padding:0 8px}[dir=rtl] .mdc-card__action--button,.mdc-card__action--button[dir=rtl]{margin-left:8px;margin-right:0}.mdc-card__action--button:last-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-card__action--button:last-child,.mdc-card__action--button:last-child[dir=rtl]{margin-left:0;margin-right:0}.mdc-card__actions--full-bleed .mdc-card__action--button{justify-content:space-between;width:100%;height:auto;max-height:none;margin:0;padding:8px 16px;text-align:left}[dir=rtl] .mdc-card__actions--full-bleed .mdc-card__action--button,.mdc-card__actions--full-bleed .mdc-card__action--button[dir=rtl]{text-align:right}.mdc-card__action--icon{margin:-6px 0;padding:12px}.mat-mdc-card{position:relative;border-radius:var(--mdc-elevated-card-container-shape, var(--mdc-shape-medium, 4px));background-color:var(--mdc-elevated-card-container-color, transparent);border-width:0;border-style:solid;border-color:var(--mdc-elevated-card-container-color, transparent)}.mat-mdc-card .mdc-card::after{border-radius:var(--mdc-elevated-card-container-shape, var(--mdc-shape-medium, 4px))}.mat-mdc-card-outlined{border-width:var(--mdc-outlined-card-outline-width, 1px);border-style:solid;border-color:var(--mdc-outlined-card-outline-color, transparent)}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            i
          );
        })(),
        KS = (() => {
          class i {
            constructor() {
              this.align = "start";
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵdir = M({
              type: i,
              selectors: [["mat-card-actions"]],
              hostAttrs: [1, "mat-mdc-card-actions", "mdc-card__actions"],
              hostVars: 2,
              hostBindings: function (e, n) {
                2 & e &&
                  Qe("mat-mdc-card-actions-align-end", "end" === n.align);
              },
              inputs: { align: "align" },
              exportAs: ["matCardActions"],
            })),
            i
          );
        })(),
        XS = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fe, gi, fe] })),
            i
          );
        })();
      const bG = new E("MatSuffix");
      let vG = (() => {
          class i {
            constructor() {
              this._isText = !1;
            }
            set _isTextSelector(e) {
              this._isText = !0;
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵdir = M({
              type: i,
              selectors: [
                ["", "matSuffix", ""],
                ["", "matIconSuffix", ""],
                ["", "matTextSuffix", ""],
              ],
              inputs: { _isTextSelector: ["matTextSuffix", "_isTextSelector"] },
              features: [X([{ provide: bG, useExisting: i }])],
            })),
            i
          );
        })(),
        ll = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fe, gi, fu, fe] })),
            i
          );
        })();
      class Du {}
      class r_ {}
      class Xi {
        constructor(t) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            t
              ? (this.lazyInit =
                  "string" == typeof t
                    ? () => {
                        (this.headers = new Map()),
                          t.split("\n").forEach((e) => {
                            const n = e.indexOf(":");
                            if (n > 0) {
                              const r = e.slice(0, n),
                                o = r.toLowerCase(),
                                s = e.slice(n + 1).trim();
                              this.maybeSetNormalizedName(r, o),
                                this.headers.has(o)
                                  ? this.headers.get(o).push(s)
                                  : this.headers.set(o, [s]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(t).forEach((e) => {
                            let n = t[e];
                            const r = e.toLowerCase();
                            "string" == typeof n && (n = [n]),
                              n.length > 0 &&
                                (this.headers.set(r, n),
                                this.maybeSetNormalizedName(e, r));
                          });
                      })
              : (this.headers = new Map());
        }
        has(t) {
          return this.init(), this.headers.has(t.toLowerCase());
        }
        get(t) {
          this.init();
          const e = this.headers.get(t.toLowerCase());
          return e && e.length > 0 ? e[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(t) {
          return this.init(), this.headers.get(t.toLowerCase()) || null;
        }
        append(t, e) {
          return this.clone({ name: t, value: e, op: "a" });
        }
        set(t, e) {
          return this.clone({ name: t, value: e, op: "s" });
        }
        delete(t, e) {
          return this.clone({ name: t, value: e, op: "d" });
        }
        maybeSetNormalizedName(t, e) {
          this.normalizedNames.has(e) || this.normalizedNames.set(e, t);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof Xi
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((t) => this.applyUpdate(t)),
              (this.lazyUpdate = null)));
        }
        copyFrom(t) {
          t.init(),
            Array.from(t.headers.keys()).forEach((e) => {
              this.headers.set(e, t.headers.get(e)),
                this.normalizedNames.set(e, t.normalizedNames.get(e));
            });
        }
        clone(t) {
          const e = new Xi();
          return (
            (e.lazyInit =
              this.lazyInit && this.lazyInit instanceof Xi
                ? this.lazyInit
                : this),
            (e.lazyUpdate = (this.lazyUpdate || []).concat([t])),
            e
          );
        }
        applyUpdate(t) {
          const e = t.name.toLowerCase();
          switch (t.op) {
            case "a":
            case "s":
              let n = t.value;
              if (("string" == typeof n && (n = [n]), 0 === n.length)) return;
              this.maybeSetNormalizedName(t.name, e);
              const r = ("a" === t.op ? this.headers.get(e) : void 0) || [];
              r.push(...n), this.headers.set(e, r);
              break;
            case "d":
              const o = t.value;
              if (o) {
                let s = this.headers.get(e);
                if (!s) return;
                (s = s.filter((a) => -1 === o.indexOf(a))),
                  0 === s.length
                    ? (this.headers.delete(e), this.normalizedNames.delete(e))
                    : this.headers.set(e, s);
              } else this.headers.delete(e), this.normalizedNames.delete(e);
          }
        }
        forEach(t) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((e) =>
              t(this.normalizedNames.get(e), this.headers.get(e))
            );
        }
      }
      class yG {
        encodeKey(t) {
          return JS(t);
        }
        encodeValue(t) {
          return JS(t);
        }
        decodeKey(t) {
          return decodeURIComponent(t);
        }
        decodeValue(t) {
          return decodeURIComponent(t);
        }
      }
      const xG = /%(\d[a-f0-9])/gi,
        CG = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function JS(i) {
        return encodeURIComponent(i).replace(xG, (t, e) => CG[e] ?? t);
      }
      function Eu(i) {
        return `${i}`;
      }
      class ur {
        constructor(t = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = t.encoder || new yG()),
            t.fromString)
          ) {
            if (t.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function wG(i, t) {
              const e = new Map();
              return (
                i.length > 0 &&
                  i
                    .replace(/^\?/, "")
                    .split("&")
                    .forEach((r) => {
                      const o = r.indexOf("="),
                        [s, a] =
                          -1 == o
                            ? [t.decodeKey(r), ""]
                            : [
                                t.decodeKey(r.slice(0, o)),
                                t.decodeValue(r.slice(o + 1)),
                              ],
                        l = e.get(s) || [];
                      l.push(a), e.set(s, l);
                    }),
                e
              );
            })(t.fromString, this.encoder);
          } else
            t.fromObject
              ? ((this.map = new Map()),
                Object.keys(t.fromObject).forEach((e) => {
                  const n = t.fromObject[e],
                    r = Array.isArray(n) ? n.map(Eu) : [Eu(n)];
                  this.map.set(e, r);
                }))
              : (this.map = null);
        }
        has(t) {
          return this.init(), this.map.has(t);
        }
        get(t) {
          this.init();
          const e = this.map.get(t);
          return e ? e[0] : null;
        }
        getAll(t) {
          return this.init(), this.map.get(t) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(t, e) {
          return this.clone({ param: t, value: e, op: "a" });
        }
        appendAll(t) {
          const e = [];
          return (
            Object.keys(t).forEach((n) => {
              const r = t[n];
              Array.isArray(r)
                ? r.forEach((o) => {
                    e.push({ param: n, value: o, op: "a" });
                  })
                : e.push({ param: n, value: r, op: "a" });
            }),
            this.clone(e)
          );
        }
        set(t, e) {
          return this.clone({ param: t, value: e, op: "s" });
        }
        delete(t, e) {
          return this.clone({ param: t, value: e, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((t) => {
                const e = this.encoder.encodeKey(t);
                return this.map
                  .get(t)
                  .map((n) => e + "=" + this.encoder.encodeValue(n))
                  .join("&");
              })
              .filter((t) => "" !== t)
              .join("&")
          );
        }
        clone(t) {
          const e = new ur({ encoder: this.encoder });
          return (
            (e.cloneFrom = this.cloneFrom || this),
            (e.updates = (this.updates || []).concat(t)),
            e
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((t) => this.map.set(t, this.cloneFrom.map.get(t))),
              this.updates.forEach((t) => {
                switch (t.op) {
                  case "a":
                  case "s":
                    const e =
                      ("a" === t.op ? this.map.get(t.param) : void 0) || [];
                    e.push(Eu(t.value)), this.map.set(t.param, e);
                    break;
                  case "d":
                    if (void 0 === t.value) {
                      this.map.delete(t.param);
                      break;
                    }
                    {
                      let n = this.map.get(t.param) || [];
                      const r = n.indexOf(Eu(t.value));
                      -1 !== r && n.splice(r, 1),
                        n.length > 0
                          ? this.map.set(t.param, n)
                          : this.map.delete(t.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class DG {
        constructor() {
          this.map = new Map();
        }
        set(t, e) {
          return this.map.set(t, e), this;
        }
        get(t) {
          return (
            this.map.has(t) || this.map.set(t, t.defaultValue()),
            this.map.get(t)
          );
        }
        delete(t) {
          return this.map.delete(t), this;
        }
        has(t) {
          return this.map.has(t);
        }
        keys() {
          return this.map.keys();
        }
      }
      function eT(i) {
        return typeof ArrayBuffer < "u" && i instanceof ArrayBuffer;
      }
      function tT(i) {
        return typeof Blob < "u" && i instanceof Blob;
      }
      function iT(i) {
        return typeof FormData < "u" && i instanceof FormData;
      }
      class cl {
        constructor(t, e, n, r) {
          let o;
          if (
            ((this.url = e),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = t.toUpperCase()),
            (function EG(i) {
              switch (i) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || r
              ? ((this.body = void 0 !== n ? n : null), (o = r))
              : (o = n),
            o &&
              ((this.reportProgress = !!o.reportProgress),
              (this.withCredentials = !!o.withCredentials),
              o.responseType && (this.responseType = o.responseType),
              o.headers && (this.headers = o.headers),
              o.context && (this.context = o.context),
              o.params && (this.params = o.params)),
            this.headers || (this.headers = new Xi()),
            this.context || (this.context = new DG()),
            this.params)
          ) {
            const s = this.params.toString();
            if (0 === s.length) this.urlWithParams = e;
            else {
              const a = e.indexOf("?");
              this.urlWithParams =
                e + (-1 === a ? "?" : a < e.length - 1 ? "&" : "") + s;
            }
          } else (this.params = new ur()), (this.urlWithParams = e);
        }
        serializeBody() {
          return null === this.body
            ? null
            : eT(this.body) ||
              tT(this.body) ||
              iT(this.body) ||
              (function MG(i) {
                return (
                  typeof URLSearchParams < "u" && i instanceof URLSearchParams
                );
              })(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof ur
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || iT(this.body)
            ? null
            : tT(this.body)
            ? this.body.type || null
            : eT(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof ur
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(t = {}) {
          const e = t.method || this.method,
            n = t.url || this.url,
            r = t.responseType || this.responseType,
            o = void 0 !== t.body ? t.body : this.body,
            s =
              void 0 !== t.withCredentials
                ? t.withCredentials
                : this.withCredentials,
            a =
              void 0 !== t.reportProgress
                ? t.reportProgress
                : this.reportProgress;
          let l = t.headers || this.headers,
            c = t.params || this.params;
          const d = t.context ?? this.context;
          return (
            void 0 !== t.setHeaders &&
              (l = Object.keys(t.setHeaders).reduce(
                (u, h) => u.set(h, t.setHeaders[h]),
                l
              )),
            t.setParams &&
              (c = Object.keys(t.setParams).reduce(
                (u, h) => u.set(h, t.setParams[h]),
                c
              )),
            new cl(e, n, o, {
              params: c,
              headers: l,
              context: d,
              reportProgress: a,
              responseType: r,
              withCredentials: s,
            })
          );
        }
      }
      var _t = (() => (
        ((_t = _t || {})[(_t.Sent = 0)] = "Sent"),
        (_t[(_t.UploadProgress = 1)] = "UploadProgress"),
        (_t[(_t.ResponseHeader = 2)] = "ResponseHeader"),
        (_t[(_t.DownloadProgress = 3)] = "DownloadProgress"),
        (_t[(_t.Response = 4)] = "Response"),
        (_t[(_t.User = 5)] = "User"),
        _t
      ))();
      class o_ {
        constructor(t, e = 200, n = "OK") {
          (this.headers = t.headers || new Xi()),
            (this.status = void 0 !== t.status ? t.status : e),
            (this.statusText = t.statusText || n),
            (this.url = t.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class s_ extends o_ {
        constructor(t = {}) {
          super(t), (this.type = _t.ResponseHeader);
        }
        clone(t = {}) {
          return new s_({
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class Mu extends o_ {
        constructor(t = {}) {
          super(t),
            (this.type = _t.Response),
            (this.body = void 0 !== t.body ? t.body : null);
        }
        clone(t = {}) {
          return new Mu({
            body: void 0 !== t.body ? t.body : this.body,
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class nT extends o_ {
        constructor(t) {
          super(t, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${t.url || "(unknown url)"}`
                : `Http failure response for ${t.url || "(unknown url)"}: ${
                    t.status
                  } ${t.statusText}`),
            (this.error = t.error || null);
        }
      }
      function a_(i, t) {
        return {
          body: t,
          headers: i.headers,
          context: i.context,
          observe: i.observe,
          params: i.params,
          reportProgress: i.reportProgress,
          responseType: i.responseType,
          withCredentials: i.withCredentials,
        };
      }
      let Su = (() => {
        class i {
          constructor(e) {
            this.handler = e;
          }
          request(e, n, r = {}) {
            let o;
            if (e instanceof cl) o = e;
            else {
              let l, c;
              (l = r.headers instanceof Xi ? r.headers : new Xi(r.headers)),
                r.params &&
                  (c =
                    r.params instanceof ur
                      ? r.params
                      : new ur({ fromObject: r.params })),
                (o = new cl(e, n, void 0 !== r.body ? r.body : null, {
                  headers: l,
                  context: r.context,
                  params: c,
                  reportProgress: r.reportProgress,
                  responseType: r.responseType || "json",
                  withCredentials: r.withCredentials,
                }));
            }
            const s = j(o).pipe(lr((l) => this.handler.handle(l)));
            if (e instanceof cl || "events" === r.observe) return s;
            const a = s.pipe(vi((l) => l instanceof Mu));
            switch (r.observe || "body") {
              case "body":
                switch (o.responseType) {
                  case "arraybuffer":
                    return a.pipe(
                      $((l) => {
                        if (null !== l.body && !(l.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return l.body;
                      })
                    );
                  case "blob":
                    return a.pipe(
                      $((l) => {
                        if (null !== l.body && !(l.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return l.body;
                      })
                    );
                  case "text":
                    return a.pipe(
                      $((l) => {
                        if (null !== l.body && "string" != typeof l.body)
                          throw new Error("Response is not a string.");
                        return l.body;
                      })
                    );
                  default:
                    return a.pipe($((l) => l.body));
                }
              case "response":
                return a;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${r.observe}}`
                );
            }
          }
          delete(e, n = {}) {
            return this.request("DELETE", e, n);
          }
          get(e, n = {}) {
            return this.request("GET", e, n);
          }
          head(e, n = {}) {
            return this.request("HEAD", e, n);
          }
          jsonp(e, n) {
            return this.request("JSONP", e, {
              params: new ur().append(n, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(e, n = {}) {
            return this.request("OPTIONS", e, n);
          }
          patch(e, n, r = {}) {
            return this.request("PATCH", e, a_(r, n));
          }
          post(e, n, r = {}) {
            return this.request("POST", e, a_(r, n));
          }
          put(e, n, r = {}) {
            return this.request("PUT", e, a_(r, n));
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(Du));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      function rT(i, t) {
        return t(i);
      }
      function SG(i, t) {
        return (e, n) => t.intercept(e, { handle: (r) => i(r, n) });
      }
      const kG = new E("HTTP_INTERCEPTORS"),
        dl = new E("HTTP_INTERCEPTOR_FNS");
      function IG() {
        let i = null;
        return (t, e) => (
          null === i &&
            (i = (Y(kG, { optional: !0 }) ?? []).reduceRight(SG, rT)),
          i(t, e)
        );
      }
      let oT = (() => {
        class i extends Du {
          constructor(e, n) {
            super(),
              (this.backend = e),
              (this.injector = n),
              (this.chain = null);
          }
          handle(e) {
            if (null === this.chain) {
              const n = Array.from(new Set(this.injector.get(dl)));
              this.chain = n.reduceRight(
                (r, o) =>
                  (function TG(i, t, e) {
                    return (n, r) => e.runInContext(() => t(n, (o) => i(o, r)));
                  })(r, o, this.injector),
                rT
              );
            }
            return this.chain(e, (n) => this.backend.handle(n));
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(r_), w(sn));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      const FG = /^\)\]\}',?\n/;
      let aT = (() => {
        class i {
          constructor(e) {
            this.xhrFactory = e;
          }
          handle(e) {
            if ("JSONP" === e.method)
              throw new Error(
                "Attempted to construct Jsonp request without HttpClientJsonpModule installed."
              );
            return new be((n) => {
              const r = this.xhrFactory.build();
              if (
                (r.open(e.method, e.urlWithParams),
                e.withCredentials && (r.withCredentials = !0),
                e.headers.forEach((f, m) => r.setRequestHeader(f, m.join(","))),
                e.headers.has("Accept") ||
                  r.setRequestHeader(
                    "Accept",
                    "application/json, text/plain, */*"
                  ),
                !e.headers.has("Content-Type"))
              ) {
                const f = e.detectContentTypeHeader();
                null !== f && r.setRequestHeader("Content-Type", f);
              }
              if (e.responseType) {
                const f = e.responseType.toLowerCase();
                r.responseType = "json" !== f ? f : "text";
              }
              const o = e.serializeBody();
              let s = null;
              const a = () => {
                  if (null !== s) return s;
                  const f = r.statusText || "OK",
                    m = new Xi(r.getAllResponseHeaders()),
                    p =
                      (function PG(i) {
                        return "responseURL" in i && i.responseURL
                          ? i.responseURL
                          : /^X-Request-URL:/m.test(i.getAllResponseHeaders())
                          ? i.getResponseHeader("X-Request-URL")
                          : null;
                      })(r) || e.url;
                  return (
                    (s = new s_({
                      headers: m,
                      status: r.status,
                      statusText: f,
                      url: p,
                    })),
                    s
                  );
                },
                l = () => {
                  let { headers: f, status: m, statusText: p, url: g } = a(),
                    b = null;
                  204 !== m &&
                    (b = typeof r.response > "u" ? r.responseText : r.response),
                    0 === m && (m = b ? 200 : 0);
                  let y = m >= 200 && m < 300;
                  if ("json" === e.responseType && "string" == typeof b) {
                    const _ = b;
                    b = b.replace(FG, "");
                    try {
                      b = "" !== b ? JSON.parse(b) : null;
                    } catch (x) {
                      (b = _), y && ((y = !1), (b = { error: x, text: b }));
                    }
                  }
                  y
                    ? (n.next(
                        new Mu({
                          body: b,
                          headers: f,
                          status: m,
                          statusText: p,
                          url: g || void 0,
                        })
                      ),
                      n.complete())
                    : n.error(
                        new nT({
                          error: b,
                          headers: f,
                          status: m,
                          statusText: p,
                          url: g || void 0,
                        })
                      );
                },
                c = (f) => {
                  const { url: m } = a(),
                    p = new nT({
                      error: f,
                      status: r.status || 0,
                      statusText: r.statusText || "Unknown Error",
                      url: m || void 0,
                    });
                  n.error(p);
                };
              let d = !1;
              const u = (f) => {
                  d || (n.next(a()), (d = !0));
                  let m = { type: _t.DownloadProgress, loaded: f.loaded };
                  f.lengthComputable && (m.total = f.total),
                    "text" === e.responseType &&
                      r.responseText &&
                      (m.partialText = r.responseText),
                    n.next(m);
                },
                h = (f) => {
                  let m = { type: _t.UploadProgress, loaded: f.loaded };
                  f.lengthComputable && (m.total = f.total), n.next(m);
                };
              return (
                r.addEventListener("load", l),
                r.addEventListener("error", c),
                r.addEventListener("timeout", c),
                r.addEventListener("abort", c),
                e.reportProgress &&
                  (r.addEventListener("progress", u),
                  null !== o &&
                    r.upload &&
                    r.upload.addEventListener("progress", h)),
                r.send(o),
                n.next({ type: _t.Sent }),
                () => {
                  r.removeEventListener("error", c),
                    r.removeEventListener("abort", c),
                    r.removeEventListener("load", l),
                    r.removeEventListener("timeout", c),
                    e.reportProgress &&
                      (r.removeEventListener("progress", u),
                      null !== o &&
                        r.upload &&
                        r.upload.removeEventListener("progress", h)),
                    r.readyState !== r.DONE && r.abort();
                }
              );
            });
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(SD));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      const l_ = new E("XSRF_ENABLED"),
        lT = "XSRF-TOKEN",
        cT = new E("XSRF_COOKIE_NAME", {
          providedIn: "root",
          factory: () => lT,
        }),
        dT = "X-XSRF-TOKEN",
        uT = new E("XSRF_HEADER_NAME", {
          providedIn: "root",
          factory: () => dT,
        });
      class hT {}
      let NG = (() => {
        class i {
          constructor(e, n, r) {
            (this.doc = e),
              (this.platform = n),
              (this.cookieName = r),
              (this.lastCookieString = ""),
              (this.lastToken = null),
              (this.parseCount = 0);
          }
          getToken() {
            if ("server" === this.platform) return null;
            const e = this.doc.cookie || "";
            return (
              e !== this.lastCookieString &&
                (this.parseCount++,
                (this.lastToken = gD(e, this.cookieName)),
                (this.lastCookieString = e)),
              this.lastToken
            );
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(le), w(Zc), w(cT));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac })),
          i
        );
      })();
      function LG(i, t) {
        const e = i.url.toLowerCase();
        if (
          !Y(l_) ||
          "GET" === i.method ||
          "HEAD" === i.method ||
          e.startsWith("http://") ||
          e.startsWith("https://")
        )
          return t(i);
        const n = Y(hT).getToken(),
          r = Y(uT);
        return (
          null != n &&
            !i.headers.has(r) &&
            (i = i.clone({ headers: i.headers.set(r, n) })),
          t(i)
        );
      }
      var dt = (() => (
        ((dt = dt || {})[(dt.Interceptors = 0)] = "Interceptors"),
        (dt[(dt.LegacyInterceptors = 1)] = "LegacyInterceptors"),
        (dt[(dt.CustomXsrfConfiguration = 2)] = "CustomXsrfConfiguration"),
        (dt[(dt.NoXsrfProtection = 3)] = "NoXsrfProtection"),
        (dt[(dt.JsonpSupport = 4)] = "JsonpSupport"),
        (dt[(dt.RequestsMadeViaParent = 5)] = "RequestsMadeViaParent"),
        dt
      ))();
      function xs(i, t) {
        return { ɵkind: i, ɵproviders: t };
      }
      function BG(...i) {
        const t = [
          Su,
          aT,
          oT,
          { provide: Du, useExisting: oT },
          { provide: r_, useExisting: aT },
          { provide: dl, useValue: LG, multi: !0 },
          { provide: l_, useValue: !0 },
          { provide: hT, useClass: NG },
        ];
        for (const e of i) t.push(...e.ɵproviders);
        return (function vF(i) {
          return { ɵproviders: i };
        })(t);
      }
      const fT = new E("LEGACY_INTERCEPTOR_FN");
      function jG({ cookieName: i, headerName: t }) {
        const e = [];
        return (
          void 0 !== i && e.push({ provide: cT, useValue: i }),
          void 0 !== t && e.push({ provide: uT, useValue: t }),
          xs(dt.CustomXsrfConfiguration, e)
        );
      }
      let HG = (() => {
        class i {}
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵmod = K({ type: i })),
          (i.ɵinj = Q({
            providers: [
              BG(
                xs(dt.LegacyInterceptors, [
                  { provide: fT, useFactory: IG },
                  { provide: dl, useExisting: fT, multi: !0 },
                ]),
                jG({ cookieName: lT, headerName: dT })
              ),
            ],
          })),
          i
        );
      })();
      const zG = ["*"];
      let Tu;
      function ul(i) {
        return (
          (function UG() {
            if (void 0 === Tu && ((Tu = null), typeof window < "u")) {
              const i = window;
              void 0 !== i.trustedTypes &&
                (Tu = i.trustedTypes.createPolicy("angular#components", {
                  createHTML: (t) => t,
                }));
            }
            return Tu;
          })()?.createHTML(i) || i
        );
      }
      function mT(i) {
        return Error(`Unable to find icon with the name "${i}"`);
      }
      function pT(i) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${i}".`
        );
      }
      function gT(i) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${i}".`
        );
      }
      class no {
        constructor(t, e, n) {
          (this.url = t), (this.svgText = e), (this.options = n);
        }
      }
      let ku = (() => {
        class i {
          constructor(e, n, r, o) {
            (this._httpClient = e),
              (this._sanitizer = n),
              (this._errorHandler = o),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._resolvers = []),
              (this._defaultFontSetClass = [
                "material-icons",
                "mat-ligature-font",
              ]),
              (this._document = r);
          }
          addSvgIcon(e, n, r) {
            return this.addSvgIconInNamespace("", e, n, r);
          }
          addSvgIconLiteral(e, n, r) {
            return this.addSvgIconLiteralInNamespace("", e, n, r);
          }
          addSvgIconInNamespace(e, n, r, o) {
            return this._addSvgIconConfig(e, n, new no(r, null, o));
          }
          addSvgIconResolver(e) {
            return this._resolvers.push(e), this;
          }
          addSvgIconLiteralInNamespace(e, n, r, o) {
            const s = this._sanitizer.sanitize(xe.HTML, r);
            if (!s) throw gT(r);
            const a = ul(s);
            return this._addSvgIconConfig(e, n, new no("", a, o));
          }
          addSvgIconSet(e, n) {
            return this.addSvgIconSetInNamespace("", e, n);
          }
          addSvgIconSetLiteral(e, n) {
            return this.addSvgIconSetLiteralInNamespace("", e, n);
          }
          addSvgIconSetInNamespace(e, n, r) {
            return this._addSvgIconSetConfig(e, new no(n, null, r));
          }
          addSvgIconSetLiteralInNamespace(e, n, r) {
            const o = this._sanitizer.sanitize(xe.HTML, n);
            if (!o) throw gT(n);
            const s = ul(o);
            return this._addSvgIconSetConfig(e, new no("", s, r));
          }
          registerFontClassAlias(e, n = e) {
            return this._fontCssClassesByAlias.set(e, n), this;
          }
          classNameForFontAlias(e) {
            return this._fontCssClassesByAlias.get(e) || e;
          }
          setDefaultFontSetClass(...e) {
            return (this._defaultFontSetClass = e), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(e) {
            const n = this._sanitizer.sanitize(xe.RESOURCE_URL, e);
            if (!n) throw pT(e);
            const r = this._cachedIconsByUrl.get(n);
            return r
              ? j(Iu(r))
              : this._loadSvgIconFromConfig(new no(e, null)).pipe(
                  pt((o) => this._cachedIconsByUrl.set(n, o)),
                  $((o) => Iu(o))
                );
          }
          getNamedSvgIcon(e, n = "") {
            const r = _T(n, e);
            let o = this._svgIconConfigs.get(r);
            if (o) return this._getSvgFromConfig(o);
            if (((o = this._getIconConfigFromResolvers(n, e)), o))
              return this._svgIconConfigs.set(r, o), this._getSvgFromConfig(o);
            const s = this._iconSetConfigs.get(n);
            return s ? this._getSvgFromIconSetConfigs(e, s) : os(mT(r));
          }
          ngOnDestroy() {
            (this._resolvers = []),
              this._svgIconConfigs.clear(),
              this._iconSetConfigs.clear(),
              this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(e) {
            return e.svgText
              ? j(Iu(this._svgElementFromConfig(e)))
              : this._loadSvgIconFromConfig(e).pipe($((n) => Iu(n)));
          }
          _getSvgFromIconSetConfigs(e, n) {
            const r = this._extractIconWithNameFromAnySet(e, n);
            return r
              ? j(r)
              : (function ZS(...i) {
                  const t = xv(i),
                    { args: e, keys: n } = VE(i),
                    r = new be((o) => {
                      const { length: s } = e;
                      if (!s) return void o.complete();
                      const a = new Array(s);
                      let l = s,
                        c = s;
                      for (let d = 0; d < s; d++) {
                        let u = !1;
                        Gt(e[d]).subscribe(
                          Ge(
                            o,
                            (h) => {
                              u || ((u = !0), c--), (a[d] = h);
                            },
                            () => l--,
                            void 0,
                            () => {
                              (!l || !u) &&
                                (c || o.next(n ? jE(n, a) : a), o.complete());
                            }
                          )
                        );
                      }
                    });
                  return t ? r.pipe(rg(t)) : r;
                })(
                  n
                    .filter((s) => !s.svgText)
                    .map((s) =>
                      this._loadSvgIconSetFromConfig(s).pipe(
                        Un((a) => {
                          const c = `Loading icon set URL: ${this._sanitizer.sanitize(
                            xe.RESOURCE_URL,
                            s.url
                          )} failed: ${a.message}`;
                          return (
                            this._errorHandler.handleError(new Error(c)),
                            j(null)
                          );
                        })
                      )
                    )
                ).pipe(
                  $(() => {
                    const s = this._extractIconWithNameFromAnySet(e, n);
                    if (!s) throw mT(e);
                    return s;
                  })
                );
          }
          _extractIconWithNameFromAnySet(e, n) {
            for (let r = n.length - 1; r >= 0; r--) {
              const o = n[r];
              if (o.svgText && o.svgText.toString().indexOf(e) > -1) {
                const s = this._svgElementFromConfig(o),
                  a = this._extractSvgIconFromSet(s, e, o.options);
                if (a) return a;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(e) {
            return this._fetchIcon(e).pipe(
              pt((n) => (e.svgText = n)),
              $(() => this._svgElementFromConfig(e))
            );
          }
          _loadSvgIconSetFromConfig(e) {
            return e.svgText
              ? j(null)
              : this._fetchIcon(e).pipe(pt((n) => (e.svgText = n)));
          }
          _extractSvgIconFromSet(e, n, r) {
            const o = e.querySelector(`[id="${n}"]`);
            if (!o) return null;
            const s = o.cloneNode(!0);
            if ((s.removeAttribute("id"), "svg" === s.nodeName.toLowerCase()))
              return this._setSvgAttributes(s, r);
            if ("symbol" === s.nodeName.toLowerCase())
              return this._setSvgAttributes(this._toSvgElement(s), r);
            const a = this._svgElementFromString(ul("<svg></svg>"));
            return a.appendChild(s), this._setSvgAttributes(a, r);
          }
          _svgElementFromString(e) {
            const n = this._document.createElement("DIV");
            n.innerHTML = e;
            const r = n.querySelector("svg");
            if (!r) throw Error("<svg> tag not found");
            return r;
          }
          _toSvgElement(e) {
            const n = this._svgElementFromString(ul("<svg></svg>")),
              r = e.attributes;
            for (let o = 0; o < r.length; o++) {
              const { name: s, value: a } = r[o];
              "id" !== s && n.setAttribute(s, a);
            }
            for (let o = 0; o < e.childNodes.length; o++)
              e.childNodes[o].nodeType === this._document.ELEMENT_NODE &&
                n.appendChild(e.childNodes[o].cloneNode(!0));
            return n;
          }
          _setSvgAttributes(e, n) {
            return (
              e.setAttribute("fit", ""),
              e.setAttribute("height", "100%"),
              e.setAttribute("width", "100%"),
              e.setAttribute("preserveAspectRatio", "xMidYMid meet"),
              e.setAttribute("focusable", "false"),
              n && n.viewBox && e.setAttribute("viewBox", n.viewBox),
              e
            );
          }
          _fetchIcon(e) {
            const { url: n, options: r } = e,
              o = r?.withCredentials ?? !1;
            if (!this._httpClient)
              throw (function $G() {
                return Error(
                  "Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports."
                );
              })();
            if (null == n) throw Error(`Cannot fetch icon from URL "${n}".`);
            const s = this._sanitizer.sanitize(xe.RESOURCE_URL, n);
            if (!s) throw pT(n);
            const a = this._inProgressUrlFetches.get(s);
            if (a) return a;
            const l = this._httpClient
              .get(s, { responseType: "text", withCredentials: o })
              .pipe(
                $((c) => ul(c)),
                Vd(() => this._inProgressUrlFetches.delete(s)),
                Ev()
              );
            return this._inProgressUrlFetches.set(s, l), l;
          }
          _addSvgIconConfig(e, n, r) {
            return this._svgIconConfigs.set(_T(e, n), r), this;
          }
          _addSvgIconSetConfig(e, n) {
            const r = this._iconSetConfigs.get(e);
            return r ? r.push(n) : this._iconSetConfigs.set(e, [n]), this;
          }
          _svgElementFromConfig(e) {
            if (!e.svgElement) {
              const n = this._svgElementFromString(e.svgText);
              this._setSvgAttributes(n, e.options), (e.svgElement = n);
            }
            return e.svgElement;
          }
          _getIconConfigFromResolvers(e, n) {
            for (let r = 0; r < this._resolvers.length; r++) {
              const o = this._resolvers[r](n, e);
              if (o)
                return qG(o) ? new no(o.url, null, o.options) : new no(o, null);
            }
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(Su, 8), w(Ap), w(le, 8), w(An));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      function Iu(i) {
        return i.cloneNode(!0);
      }
      function _T(i, t) {
        return i + ":" + t;
      }
      function qG(i) {
        return !(!i.url || !i.options);
      }
      const WG = $g(
          class {
            constructor(i) {
              this._elementRef = i;
            }
          }
        ),
        QG = new E("MAT_ICON_DEFAULT_OPTIONS"),
        YG = new E("mat-icon-location", {
          providedIn: "root",
          factory: function KG() {
            const i = Y(le),
              t = i ? i.location : null;
            return { getPathname: () => (t ? t.pathname + t.search : "") };
          },
        }),
        bT = [
          "clip-path",
          "color-profile",
          "src",
          "cursor",
          "fill",
          "filter",
          "marker",
          "marker-start",
          "marker-mid",
          "marker-end",
          "mask",
          "stroke",
        ],
        XG = bT.map((i) => `[${i}]`).join(", "),
        ZG = /^url\(['"]?#(.*?)['"]?\)$/;
      let JG = (() => {
          class i extends WG {
            get inline() {
              return this._inline;
            }
            set inline(e) {
              this._inline = ze(e);
            }
            get svgIcon() {
              return this._svgIcon;
            }
            set svgIcon(e) {
              e !== this._svgIcon &&
                (e
                  ? this._updateSvgIcon(e)
                  : this._svgIcon && this._clearSvgElement(),
                (this._svgIcon = e));
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(e) {
              const n = this._cleanupFontValue(e);
              n !== this._fontSet &&
                ((this._fontSet = n), this._updateFontIconClasses());
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(e) {
              const n = this._cleanupFontValue(e);
              n !== this._fontIcon &&
                ((this._fontIcon = n), this._updateFontIconClasses());
            }
            constructor(e, n, r, o, s, a) {
              super(e),
                (this._iconRegistry = n),
                (this._location = o),
                (this._errorHandler = s),
                (this._inline = !1),
                (this._previousFontSetClass = []),
                (this._currentIconFetch = ut.EMPTY),
                a &&
                  (a.color && (this.color = this.defaultColor = a.color),
                  a.fontSet && (this.fontSet = a.fontSet)),
                r || e.nativeElement.setAttribute("aria-hidden", "true");
            }
            _splitIconName(e) {
              if (!e) return ["", ""];
              const n = e.split(":");
              switch (n.length) {
                case 1:
                  return ["", n[0]];
                case 2:
                  return n;
                default:
                  throw Error(`Invalid icon name: "${e}"`);
              }
            }
            ngOnInit() {
              this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const e = this._elementsWithExternalReferences;
              if (e && e.size) {
                const n = this._location.getPathname();
                n !== this._previousPath &&
                  ((this._previousPath = n), this._prependPathToReferences(n));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences &&
                  this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(e) {
              this._clearSvgElement();
              const n = this._location.getPathname();
              (this._previousPath = n),
                this._cacheChildrenWithExternalReferences(e),
                this._prependPathToReferences(n),
                this._elementRef.nativeElement.appendChild(e);
            }
            _clearSvgElement() {
              const e = this._elementRef.nativeElement;
              let n = e.childNodes.length;
              for (
                this._elementsWithExternalReferences &&
                this._elementsWithExternalReferences.clear();
                n--;

              ) {
                const r = e.childNodes[n];
                (1 !== r.nodeType || "svg" === r.nodeName.toLowerCase()) &&
                  r.remove();
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const e = this._elementRef.nativeElement,
                n = (
                  this.fontSet
                    ? this._iconRegistry
                        .classNameForFontAlias(this.fontSet)
                        .split(/ +/)
                    : this._iconRegistry.getDefaultFontSetClass()
                ).filter((r) => r.length > 0);
              this._previousFontSetClass.forEach((r) => e.classList.remove(r)),
                n.forEach((r) => e.classList.add(r)),
                (this._previousFontSetClass = n),
                this.fontIcon !== this._previousFontIconClass &&
                  !n.includes("mat-ligature-font") &&
                  (this._previousFontIconClass &&
                    e.classList.remove(this._previousFontIconClass),
                  this.fontIcon && e.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(e) {
              return "string" == typeof e ? e.trim().split(" ")[0] : e;
            }
            _prependPathToReferences(e) {
              const n = this._elementsWithExternalReferences;
              n &&
                n.forEach((r, o) => {
                  r.forEach((s) => {
                    o.setAttribute(s.name, `url('${e}#${s.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(e) {
              const n = e.querySelectorAll(XG),
                r = (this._elementsWithExternalReferences =
                  this._elementsWithExternalReferences || new Map());
              for (let o = 0; o < n.length; o++)
                bT.forEach((s) => {
                  const a = n[o],
                    l = a.getAttribute(s),
                    c = l ? l.match(ZG) : null;
                  if (c) {
                    let d = r.get(a);
                    d || ((d = []), r.set(a, d)),
                      d.push({ name: s, value: c[1] });
                  }
                });
            }
            _updateSvgIcon(e) {
              if (
                ((this._svgNamespace = null),
                (this._svgName = null),
                this._currentIconFetch.unsubscribe(),
                e)
              ) {
                const [n, r] = this._splitIconName(e);
                n && (this._svgNamespace = n),
                  r && (this._svgName = r),
                  (this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(r, n)
                    .pipe(Ri(1))
                    .subscribe(
                      (o) => this._setSvgElement(o),
                      (o) => {
                        this._errorHandler.handleError(
                          new Error(
                            `Error retrieving icon ${n}:${r}! ${o.message}`
                          )
                        );
                      }
                    ));
              }
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)(
                v(ce),
                v(ku),
                (function er(i) {
                  return (function BO(i, t) {
                    if ("class" === t) return i.classes;
                    if ("style" === t) return i.styles;
                    const e = i.attrs;
                    if (e) {
                      const n = e.length;
                      let r = 0;
                      for (; r < n; ) {
                        const o = e[r];
                        if (ay(o)) break;
                        if (0 === o) r += 2;
                        else if ("number" == typeof o)
                          for (r++; r < n && "string" == typeof e[r]; ) r++;
                        else {
                          if (o === t) return e[r + 1];
                          r += 2;
                        }
                      }
                    }
                    return null;
                  })(Tt(), i);
                })("aria-hidden"),
                v(YG),
                v(An),
                v(QG, 8)
              );
            }),
            (i.ɵcmp = Te({
              type: i,
              selectors: [["mat-icon"]],
              hostAttrs: ["role", "img", 1, "mat-icon", "notranslate"],
              hostVars: 8,
              hostBindings: function (e, n) {
                2 & e &&
                  (qe(
                    "data-mat-icon-type",
                    n._usingFontIcon() ? "font" : "svg"
                  )("data-mat-icon-name", n._svgName || n.fontIcon)(
                    "data-mat-icon-namespace",
                    n._svgNamespace || n.fontSet
                  )("fontIcon", n._usingFontIcon() ? n.fontIcon : null),
                  Qe("mat-icon-inline", n.inline)(
                    "mat-icon-no-color",
                    "primary" !== n.color &&
                      "accent" !== n.color &&
                      "warn" !== n.color
                  ));
              },
              inputs: {
                color: "color",
                inline: "inline",
                svgIcon: "svgIcon",
                fontSet: "fontSet",
                fontIcon: "fontIcon",
              },
              exportAs: ["matIcon"],
              features: [N],
              ngContentSelectors: zG,
              decls: 1,
              vars: 0,
              template: function (e, n) {
                1 & e && (pi(), $e(0));
              },
              styles: [
                ".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            i
          );
        })(),
        vT = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fe, fe] })),
            i
          );
        })();
      function e6(i, t) {
        if (1 & i) {
          const e = pm();
          ne(0, "button", 5),
            lt("click", function () {
              return $h(e), Gh(jt().loginWithGoogle());
            }),
            hn(1, " Login with Google "),
            ne(2, "mat-icon", 6),
            hn(3, "login"),
            me()();
        }
      }
      class hl {
        constructor(t, e, n, r) {
          (this.socialAuthService = t),
            (this.router = e),
            (this.route = n),
            (this.snackBar = r),
            (this.isLoggedin = !1);
        }
        ngOnInit() {
          this.socialAuthService.authState.subscribe((t) => {
            (this.googleUser = t),
              (this.isLoggedin = null != t),
              this.isLoggedin && this.router.navigate(["/"]);
          });
        }
        loginWithGoogle() {
          this.socialAuthService.signIn(ps.PROVIDER_ID);
        }
        logOut() {
          this.socialAuthService.signOut();
        }
      }
      (hl.ɵfac = function (t) {
        return new (t || hl)(v(au), v(ei), v(Xr), v(G$));
      }),
        (hl.ɵcmp = Te({
          type: hl,
          selectors: [["app-login"]],
          decls: 8,
          vars: 1,
          consts: [
            [1, "login"],
            [1, "login__card"],
            [1, "login__card--logo"],
            ["src", "/assets/brt-icon-sm.png"],
            [
              "mat-flat-button",
              "",
              "color",
              "primary",
              "type",
              "button",
              3,
              "click",
              4,
              "ngIf",
            ],
            [
              "mat-flat-button",
              "",
              "color",
              "primary",
              "type",
              "button",
              3,
              "click",
            ],
            ["matSuffix", "", "aria-label", "Log into Google"],
          ],
          template: function (t, e) {
            1 & t &&
              (ne(0, "div", 0)(1, "mat-card", 1)(2, "div", 2),
              Ze(3, "img", 3),
              me(),
              ne(4, "div"),
              Ze(5, "mat-divider"),
              me(),
              ne(6, "mat-card-actions"),
              Xe(7, e6, 4, 0, "button", 4),
              me()()()),
              2 & t && (Pe(7), We("ngIf", !1 === e.isLoggedin));
          },
          dependencies: [fd, q$, YS, KS, vG, IS, JG],
          styles: [
            ".login[_ngcontent-%COMP%]{width:100vw;height:calc(100vh - 50px);background-color:var(--blueriver)}.login[_ngcontent-%COMP%]   .login__card[_ngcontent-%COMP%]{width:100vw;max-width:500px;max-height:700px;margin:auto;align-self:center;justify-self:center;top:50px;display:flex;flex-direction:column}.login[_ngcontent-%COMP%]   .login__card[_ngcontent-%COMP%]   .login__card--logo[_ngcontent-%COMP%]{align-self:center;margin-bottom:10px;flex-basis:1;display:flex;flex-direction:column;justify-self:center;align-items:center;padding:20px 0;width:100%}.login[_ngcontent-%COMP%]   .login__card[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%]{margin:auto;flex-basis:1;width:100%}.login[_ngcontent-%COMP%]   .login__card[_ngcontent-%COMP%]   .mat-card-actions[_ngcontent-%COMP%]{display:flex;justify-content:center;padding:20px 0}@media screen and (min-width: 800px){.login[_ngcontent-%COMP%]{display:flex}.login[_ngcontent-%COMP%]   .login__card[_ngcontent-%COMP%]{top:0}}",
          ],
        }));
      class fl {}
      (fl.ɵfac = function (t) {
        return new (t || fl)();
      }),
        (fl.ɵcmp = Te({
          type: fl,
          selectors: [["app-dashboard"]],
          decls: 2,
          vars: 0,
          template: function (t, e) {
            1 & t && (ne(0, "p"), hn(1, "Hello World!"), me());
          },
        }));
      class ml {
        constructor() {
          (this.showRightNav = !1),
            (this.alertSubscription = null),
            (this.horizontalPosition = "center"),
            (this.verticalPosition = "bottom");
        }
        ngOnInit() {}
        ngOnDestroy() {
          this.alertSubscription?.unsubscribe();
        }
        toggleSideNav() {
          this.showRightNav = !this.showRightNav;
        }
      }
      (ml.ɵfac = function (t) {
        return new (t || ml)();
      }),
        (ml.ɵcmp = Te({
          type: ml,
          selectors: [["app-layout"]],
          decls: 3,
          vars: 0,
          consts: [
            [1, "container__content"],
            [1, "container__content-main"],
          ],
          template: function (t, e) {
            1 & t &&
              (ne(0, "div", 0)(1, "div", 1), Ze(2, "router-outlet"), me()());
          },
          dependencies: [Kd],
          styles: [
            '.container__content[_ngcontent-%COMP%]{top:50px;position:absolute;width:100%}.container__content[_ngcontent-%COMP%]   .container__content-main[_ngcontent-%COMP%]{padding:0 20px;grid-column:2}@media screen and (min-width: 800px){.container__content[_ngcontent-%COMP%]{display:grid;grid-template-columns:200px auto;grid-template-areas:"side-nav main-content";grid-auto-flow:dense;grid-gap:0px;top:50px;position:absolute;width:100%}}',
          ],
        }));
      class ro {
        constructor(t, e) {
          (this.socialAuthService = t), (this.router = e);
        }
        canActivate(t, e) {
          return new Promise((n) => {
            this.socialAuthService.authState.subscribe((r) => {
              null != r ? n(null != r) : this.router.navigate(["/login"]);
            });
          });
        }
      }
      (ro.ɵfac = function (t) {
        return new (t || ro)(w(au), w(ei));
      }),
        (ro.ɵprov = k({ token: ro, factory: ro.ɵfac, providedIn: "root" }));
      const t6 = [
        {
          path: "",
          component: ml,
          canActivate: [ro],
          runGuardsAndResolvers: "always",
          children: [{ path: "", component: fl }],
        },
        { path: "login", component: hl },
      ];
      class Cs {}
      (Cs.ɵfac = function (t) {
        return new (t || Cs)();
      }),
        (Cs.ɵmod = K({ type: Cs })),
        (Cs.ɵinj = Q({
          imports: [KM.forRoot(t6, { onSameUrlNavigation: "reload" }), KM],
        }));
      var Re = (() => {
        return (
          ((i = Re || (Re = {}))[(i.loading = 1)] = "loading"),
          (i[(i.setVariables = 2)] = "setVariables"),
          (i[(i.fetchMore = 3)] = "fetchMore"),
          (i[(i.refetch = 4)] = "refetch"),
          (i[(i.poll = 6)] = "poll"),
          (i[(i.ready = 7)] = "ready"),
          (i[(i.error = 8)] = "error"),
          Re
        );
        var i;
      })();
      function pl(i) {
        return !!i && i < 7;
      }
      var c_ = "Invariant Violation",
        yT = Object.setPrototypeOf,
        n6 =
          void 0 === yT
            ? function (i, t) {
                return (i.__proto__ = t), i;
              }
            : yT,
        Ce = (function (i) {
          function t(e) {
            void 0 === e && (e = c_);
            var n =
              i.call(
                this,
                "number" == typeof e
                  ? c_ +
                      ": " +
                      e +
                      " (see https://github.com/apollographql/invariant-packages)"
                  : e
              ) || this;
            return (n.framesToPop = 1), (n.name = c_), n6(n, t.prototype), n;
          }
          return xi(t, i), t;
        })(Error);
      function O(i, t) {
        if (!i) throw new Ce(t);
      }
      var i,
        Au = ["debug", "log", "warn", "error", "silent"],
        d_ = Au.indexOf("log");
      function Ru(i) {
        return function () {
          if (Au.indexOf(i) >= d_) {
            var t = console[i] || console.log;
            return t.apply(console, arguments);
          }
        };
      }
      function Fi(i) {
        try {
          return i();
        } catch {}
      }
      ((i = O || (O = {})).debug = Ru("debug")),
        (i.log = Ru("log")),
        (i.warn = Ru("warn")),
        (i.error = Ru("error"));
      const wT =
        Fi(function () {
          return globalThis;
        }) ||
        Fi(function () {
          return window;
        }) ||
        Fi(function () {
          return self;
        }) ||
        Fi(function () {
          return global;
        }) ||
        Fi(function () {
          return Fi.constructor("return this")();
        });
      var xT = "__",
        CT = [xT, xT].join("DEV");
      const u_ = (function r6() {
        try {
          return Boolean(__DEV__);
        } catch {
          return (
            Object.defineProperty(wT, CT, {
              value:
                "production" !==
                Fi(function () {
                  return "production";
                }),
              enumerable: !1,
              configurable: !0,
              writable: !0,
            }),
            wT[CT]
          );
        }
      })();
      function hr(i) {
        try {
          return i();
        } catch {}
      }
      var h_ =
          hr(function () {
            return globalThis;
          }) ||
          hr(function () {
            return window;
          }) ||
          hr(function () {
            return self;
          }) ||
          hr(function () {
            return global;
          }) ||
          hr(function () {
            return hr.constructor("return this")();
          }),
        f_ = !1;
      function Ou(i, t) {
        if (!Boolean(i)) throw new Error(t);
      }
      function MT(i) {
        return Fu(i, []);
      }
      function Fu(i, t) {
        switch (typeof i) {
          case "string":
            return JSON.stringify(i);
          case "function":
            return i.name ? `[function ${i.name}]` : "[function]";
          case "object":
            return (function a6(i, t) {
              if (null === i) return "null";
              if (t.includes(i)) return "[Circular]";
              const e = [...t, i];
              if (
                (function l6(i) {
                  return "function" == typeof i.toJSON;
                })(i)
              ) {
                const n = i.toJSON();
                if (n !== i) return "string" == typeof n ? n : Fu(n, e);
              } else if (Array.isArray(i))
                return (function d6(i, t) {
                  if (0 === i.length) return "[]";
                  if (t.length > 2) return "[Array]";
                  const e = Math.min(10, i.length),
                    n = i.length - e,
                    r = [];
                  for (let o = 0; o < e; ++o) r.push(Fu(i[o], t));
                  return (
                    1 === n
                      ? r.push("... 1 more item")
                      : n > 1 && r.push(`... ${n} more items`),
                    "[" + r.join(", ") + "]"
                  );
                })(i, e);
              return (function c6(i, t) {
                const e = Object.entries(i);
                return 0 === e.length
                  ? "{}"
                  : t.length > 2
                  ? "[" +
                    (function u6(i) {
                      const t = Object.prototype.toString
                        .call(i)
                        .replace(/^\[object /, "")
                        .replace(/]$/, "");
                      if (
                        "Object" === t &&
                        "function" == typeof i.constructor
                      ) {
                        const e = i.constructor.name;
                        if ("string" == typeof e && "" !== e) return e;
                      }
                      return t;
                    })(i) +
                    "]"
                  : "{ " +
                    e.map(([r, o]) => r + ": " + Fu(o, t)).join(", ") +
                    " }";
              })(i, e);
            })(i, t);
          default:
            return String(i);
        }
      }
      !(function o6() {
        h_ &&
          !hr(function () {
            return "production";
          }) &&
          !hr(function () {
            return process;
          }) &&
          (Object.defineProperty(h_, "process", {
            value: { env: { NODE_ENV: "production" } },
            configurable: !0,
            enumerable: !1,
            writable: !0,
          }),
          (f_ = !0));
      })();
      class ST {
        constructor(t, e = "GraphQL request", n = { line: 1, column: 1 }) {
          "string" == typeof t ||
            Ou(!1, `Body must be a string. Received: ${MT(t)}.`),
            (this.body = t),
            (this.name = e),
            (this.locationOffset = n),
            this.locationOffset.line > 0 ||
              Ou(
                !1,
                "line in locationOffset is 1-indexed and must be positive."
              ),
            this.locationOffset.column > 0 ||
              Ou(
                !1,
                "column in locationOffset is 1-indexed and must be positive."
              );
        }
        get [Symbol.toStringTag]() {
          return "Source";
        }
      }
      function TT(i, t) {
        (null == t || t > i.length) && (t = i.length);
        for (var e = 0, n = new Array(t); e < t; e++) n[e] = i[e];
        return n;
      }
      function kT(i, t) {
        for (var e = 0; e < t.length; e++) {
          var n = t[e];
          (n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            "value" in n && (n.writable = !0),
            Object.defineProperty(i, n.key, n);
        }
      }
      function m_(i, t, e) {
        return (
          t && kT(i.prototype, t),
          e && kT(i, e),
          Object.defineProperty(i, "prototype", { writable: !1 }),
          i
        );
      }
      (function h6() {
        (function DT() {
          f_ && (delete h_.process, (f_ = !1));
        })();
      })(),
        (function f6() {
          __DEV__
            ? O("boolean" == typeof u_, u_)
            : O("boolean" == typeof u_, 39);
        })();
      var p_ = function () {
          return "function" == typeof Symbol;
        },
        g_ = function (i) {
          return p_() && Boolean(Symbol[i]);
        },
        __ = function (i) {
          return g_(i) ? Symbol[i] : "@@" + i;
        };
      p_() && !g_("observable") && (Symbol.observable = Symbol("observable"));
      var g6 = __("iterator"),
        b_ = __("observable"),
        IT = __("species");
      function Pu(i, t) {
        var e = i[t];
        if (null != e) {
          if ("function" != typeof e)
            throw new TypeError(e + " is not a function");
          return e;
        }
      }
      function gl(i) {
        var t = i.constructor;
        return (
          void 0 !== t && null === (t = t[IT]) && (t = void 0),
          void 0 !== t ? t : Be
        );
      }
      function Ds(i) {
        Ds.log
          ? Ds.log(i)
          : setTimeout(function () {
              throw i;
            });
      }
      function Nu(i) {
        Promise.resolve().then(function () {
          try {
            i();
          } catch (t) {
            Ds(t);
          }
        });
      }
      function AT(i) {
        var t = i._cleanup;
        if (void 0 !== t && ((i._cleanup = void 0), t))
          try {
            if ("function" == typeof t) t();
            else {
              var e = Pu(t, "unsubscribe");
              e && e.call(t);
            }
          } catch (n) {
            Ds(n);
          }
      }
      function v_(i) {
        (i._observer = void 0), (i._queue = void 0), (i._state = "closed");
      }
      function RT(i, t, e) {
        i._state = "running";
        var n = i._observer;
        try {
          var r = Pu(n, t);
          switch (t) {
            case "next":
              r && r.call(n, e);
              break;
            case "error":
              if ((v_(i), !r)) throw e;
              r.call(n, e);
              break;
            case "complete":
              v_(i), r && r.call(n);
          }
        } catch (o) {
          Ds(o);
        }
        "closed" === i._state
          ? AT(i)
          : "running" === i._state && (i._state = "ready");
      }
      function y_(i, t, e) {
        if ("closed" !== i._state) {
          if ("buffering" === i._state)
            return void i._queue.push({ type: t, value: e });
          if ("ready" !== i._state)
            return (
              (i._state = "buffering"),
              (i._queue = [{ type: t, value: e }]),
              void Nu(function () {
                return (function b6(i) {
                  var t = i._queue;
                  if (t) {
                    (i._queue = void 0), (i._state = "ready");
                    for (
                      var e = 0;
                      e < t.length &&
                      (RT(i, t[e].type, t[e].value), "closed" !== i._state);
                      ++e
                    );
                  }
                })(i);
              })
            );
          RT(i, t, e);
        }
      }
      var v6 = (function () {
          function i(e, n) {
            (this._cleanup = void 0),
              (this._observer = e),
              (this._queue = void 0),
              (this._state = "initializing");
            var r = new y6(this);
            try {
              this._cleanup = n.call(void 0, r);
            } catch (o) {
              r.error(o);
            }
            "initializing" === this._state && (this._state = "ready");
          }
          return (
            (i.prototype.unsubscribe = function () {
              "closed" !== this._state && (v_(this), AT(this));
            }),
            m_(i, [
              {
                key: "closed",
                get: function () {
                  return "closed" === this._state;
                },
              },
            ]),
            i
          );
        })(),
        y6 = (function () {
          function i(e) {
            this._subscription = e;
          }
          var t = i.prototype;
          return (
            (t.next = function (n) {
              y_(this._subscription, "next", n);
            }),
            (t.error = function (n) {
              y_(this._subscription, "error", n);
            }),
            (t.complete = function () {
              y_(this._subscription, "complete");
            }),
            m_(i, [
              {
                key: "closed",
                get: function () {
                  return "closed" === this._subscription._state;
                },
              },
            ]),
            i
          );
        })(),
        Be = (function () {
          function i(e) {
            if (!(this instanceof i))
              throw new TypeError("Observable cannot be called as a function");
            if ("function" != typeof e)
              throw new TypeError("Observable initializer must be a function");
            this._subscriber = e;
          }
          var t = i.prototype;
          return (
            (t.subscribe = function (n) {
              return (
                ("object" != typeof n || null === n) &&
                  (n = {
                    next: n,
                    error: arguments[1],
                    complete: arguments[2],
                  }),
                new v6(n, this._subscriber)
              );
            }),
            (t.forEach = function (n) {
              var r = this;
              return new Promise(function (o, s) {
                if ("function" == typeof n)
                  var l = r.subscribe({
                    next: function (c) {
                      try {
                        n(c, a);
                      } catch (d) {
                        s(d), l.unsubscribe();
                      }
                    },
                    error: s,
                    complete: o,
                  });
                else s(new TypeError(n + " is not a function"));
                function a() {
                  l.unsubscribe(), o();
                }
              });
            }),
            (t.map = function (n) {
              var r = this;
              if ("function" != typeof n)
                throw new TypeError(n + " is not a function");
              return new (gl(this))(function (s) {
                return r.subscribe({
                  next: function (a) {
                    try {
                      a = n(a);
                    } catch (l) {
                      return s.error(l);
                    }
                    s.next(a);
                  },
                  error: function (a) {
                    s.error(a);
                  },
                  complete: function () {
                    s.complete();
                  },
                });
              });
            }),
            (t.filter = function (n) {
              var r = this;
              if ("function" != typeof n)
                throw new TypeError(n + " is not a function");
              return new (gl(this))(function (s) {
                return r.subscribe({
                  next: function (a) {
                    try {
                      if (!n(a)) return;
                    } catch (l) {
                      return s.error(l);
                    }
                    s.next(a);
                  },
                  error: function (a) {
                    s.error(a);
                  },
                  complete: function () {
                    s.complete();
                  },
                });
              });
            }),
            (t.reduce = function (n) {
              var r = this;
              if ("function" != typeof n)
                throw new TypeError(n + " is not a function");
              var o = gl(this),
                s = arguments.length > 1,
                a = !1,
                l = arguments[1],
                c = l;
              return new o(function (d) {
                return r.subscribe({
                  next: function (u) {
                    var h = !a;
                    if (((a = !0), !h || s))
                      try {
                        c = n(c, u);
                      } catch (f) {
                        return d.error(f);
                      }
                    else c = u;
                  },
                  error: function (u) {
                    d.error(u);
                  },
                  complete: function () {
                    if (!a && !s)
                      return d.error(
                        new TypeError("Cannot reduce an empty sequence")
                      );
                    d.next(c), d.complete();
                  },
                });
              });
            }),
            (t.concat = function () {
              for (
                var n = this, r = arguments.length, o = new Array(r), s = 0;
                s < r;
                s++
              )
                o[s] = arguments[s];
              var a = gl(this);
              return new a(function (l) {
                var c,
                  d = 0;
                return (
                  (function u(h) {
                    c = h.subscribe({
                      next: function (f) {
                        l.next(f);
                      },
                      error: function (f) {
                        l.error(f);
                      },
                      complete: function () {
                        d === o.length
                          ? ((c = void 0), l.complete())
                          : u(a.from(o[d++]));
                      },
                    });
                  })(n),
                  function () {
                    c && (c.unsubscribe(), (c = void 0));
                  }
                );
              });
            }),
            (t.flatMap = function (n) {
              var r = this;
              if ("function" != typeof n)
                throw new TypeError(n + " is not a function");
              var o = gl(this);
              return new o(function (s) {
                var a = [],
                  l = r.subscribe({
                    next: function (d) {
                      if (n)
                        try {
                          d = n(d);
                        } catch (h) {
                          return s.error(h);
                        }
                      var u = o.from(d).subscribe({
                        next: function (h) {
                          s.next(h);
                        },
                        error: function (h) {
                          s.error(h);
                        },
                        complete: function () {
                          var h = a.indexOf(u);
                          h >= 0 && a.splice(h, 1), c();
                        },
                      });
                      a.push(u);
                    },
                    error: function (d) {
                      s.error(d);
                    },
                    complete: function () {
                      c();
                    },
                  });
                function c() {
                  l.closed && 0 === a.length && s.complete();
                }
                return function () {
                  a.forEach(function (d) {
                    return d.unsubscribe();
                  }),
                    l.unsubscribe();
                };
              });
            }),
            (t[b_] = function () {
              return this;
            }),
            (i.from = function (n) {
              var r = "function" == typeof this ? this : i;
              if (null == n) throw new TypeError(n + " is not an object");
              var o = Pu(n, b_);
              if (o) {
                var s = o.call(n);
                if (Object(s) !== s)
                  throw new TypeError(s + " is not an object");
                return (function _6(i) {
                  return i instanceof Be;
                })(s) && s.constructor === r
                  ? s
                  : new r(function (a) {
                      return s.subscribe(a);
                    });
              }
              if (g_("iterator") && (o = Pu(n, g6)))
                return new r(function (a) {
                  Nu(function () {
                    if (!a.closed) {
                      for (
                        var c,
                          l = (function m6(i, t) {
                            var e =
                              (typeof Symbol < "u" && i[Symbol.iterator]) ||
                              i["@@iterator"];
                            if (e) return (e = e.call(i)).next.bind(e);
                            if (
                              Array.isArray(i) ||
                              (e = (function p6(i, t) {
                                if (i) {
                                  if ("string" == typeof i) return TT(i, t);
                                  var e = Object.prototype.toString
                                    .call(i)
                                    .slice(8, -1);
                                  if (
                                    ("Object" === e &&
                                      i.constructor &&
                                      (e = i.constructor.name),
                                    "Map" === e || "Set" === e)
                                  )
                                    return Array.from(i);
                                  if (
                                    "Arguments" === e ||
                                    /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(
                                      e
                                    )
                                  )
                                    return TT(i, t);
                                }
                              })(i)) ||
                              (t && i && "number" == typeof i.length)
                            ) {
                              e && (i = e);
                              var n = 0;
                              return function () {
                                return n >= i.length
                                  ? { done: !0 }
                                  : { done: !1, value: i[n++] };
                              };
                            }
                            throw new TypeError(
                              "Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
                            );
                          })(o.call(n));
                        !(c = l()).done;

                      )
                        if ((a.next(c.value), a.closed)) return;
                      a.complete();
                    }
                  });
                });
              if (Array.isArray(n))
                return new r(function (a) {
                  Nu(function () {
                    if (!a.closed) {
                      for (var l = 0; l < n.length; ++l)
                        if ((a.next(n[l]), a.closed)) return;
                      a.complete();
                    }
                  });
                });
              throw new TypeError(n + " is not observable");
            }),
            (i.of = function () {
              for (
                var n = arguments.length, r = new Array(n), o = 0;
                o < n;
                o++
              )
                r[o] = arguments[o];
              var s = "function" == typeof this ? this : i;
              return new s(function (a) {
                Nu(function () {
                  if (!a.closed) {
                    for (var l = 0; l < r.length; ++l)
                      if ((a.next(r[l]), a.closed)) return;
                    a.complete();
                  }
                });
              });
            }),
            m_(i, null, [
              {
                key: IT,
                get: function () {
                  return this;
                },
              },
            ]),
            i
          );
        })();
      function rt(i) {
        return null !== i && "object" == typeof i;
      }
      function x6(i, t) {
        var e = t,
          n = [];
        return (
          i.definitions.forEach(function (o) {
            if ("OperationDefinition" === o.kind)
              throw __DEV__
                ? new Ce(
                    "Found a "
                      .concat(o.operation, " operation")
                      .concat(
                        o.name ? " named '".concat(o.name.value, "'") : "",
                        ". "
                      ) +
                      "No operations are allowed when using a fragment as a query. Only fragments are allowed."
                  )
                : new Ce(44);
            "FragmentDefinition" === o.kind && n.push(o);
          }),
          typeof e > "u" &&
            (__DEV__
              ? O(
                  1 === n.length,
                  "Found ".concat(
                    n.length,
                    " fragments. `fragmentName` must be provided when there is not exactly 1 fragment."
                  )
                )
              : O(1 === n.length, 45),
            (e = n[0].name.value)),
          C(C({}, i), {
            definitions: Ul(
              [
                {
                  kind: "OperationDefinition",
                  operation: "query",
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "FragmentSpread",
                        name: { kind: "Name", value: e },
                      },
                    ],
                  },
                },
              ],
              i.definitions,
              !0
            ),
          })
        );
      }
      function w_(i) {
        void 0 === i && (i = []);
        var t = {};
        return (
          i.forEach(function (e) {
            t[e.name.value] = e;
          }),
          t
        );
      }
      function x_(i, t) {
        switch (i.kind) {
          case "InlineFragment":
            return i;
          case "FragmentSpread":
            var e = i.name.value;
            if ("function" == typeof t) return t(e);
            var n = t && t[e];
            return (
              __DEV__ ? O(n, "No fragment named ".concat(e)) : O(n, 46),
              n || null
            );
          default:
            return null;
        }
      }
      function Es(i) {
        return { __ref: String(i) };
      }
      function Fe(i) {
        return Boolean(i && "object" == typeof i && "string" == typeof i.__ref);
      }
      function Ms(i, t, e, n) {
        if (
          (function M6(i) {
            return "IntValue" === i.kind;
          })(e) ||
          (function S6(i) {
            return "FloatValue" === i.kind;
          })(e)
        )
          i[t.value] = Number(e.value);
        else if (
          (function E6(i) {
            return "BooleanValue" === i.kind;
          })(e) ||
          (function D6(i) {
            return "StringValue" === i.kind;
          })(e)
        )
          i[t.value] = e.value;
        else if (
          (function k6(i) {
            return "ObjectValue" === i.kind;
          })(e)
        ) {
          var r = {};
          e.fields.map(function (s) {
            return Ms(r, s.name, s.value, n);
          }),
            (i[t.value] = r);
        } else if (
          (function T6(i) {
            return "Variable" === i.kind;
          })(e)
        )
          i[t.value] = (n || {})[e.name.value];
        else if (
          (function I6(i) {
            return "ListValue" === i.kind;
          })(e)
        )
          i[t.value] = e.values.map(function (s) {
            var a = {};
            return Ms(a, t, s, n), a[t.value];
          });
        else if (
          (function A6(i) {
            return "EnumValue" === i.kind;
          })(e)
        )
          i[t.value] = e.value;
        else {
          if (
            !(function R6(i) {
              return "NullValue" === i.kind;
            })(e)
          )
            throw __DEV__
              ? new Ce(
                  'The inline argument "'
                    .concat(t.value, '" of kind "')
                    .concat(e.kind, '"') +
                    "is not supported. Use variables instead of inline arguments to overcome this limitation."
                )
              : new Ce(55);
          i[t.value] = null;
        }
      }
      p_() &&
        Object.defineProperty(Be, Symbol("extensions"), {
          value: { symbol: b_, hostReportError: Ds },
          configurable: !0,
        });
      var F6 = ["connection", "include", "skip", "client", "rest", "export"],
        C_ = Object.assign(
          function (i, t, e) {
            if (t && e && e.connection && e.connection.key) {
              if (e.connection.filter && e.connection.filter.length > 0) {
                var n = e.connection.filter ? e.connection.filter : [];
                n.sort();
                var r = {};
                return (
                  n.forEach(function (a) {
                    r[a] = t[a];
                  }),
                  "".concat(e.connection.key, "(").concat(_l(r), ")")
                );
              }
              return e.connection.key;
            }
            var o = i;
            if (t) {
              var s = _l(t);
              o += "(".concat(s, ")");
            }
            return (
              e &&
                Object.keys(e).forEach(function (a) {
                  -1 === F6.indexOf(a) &&
                    (e[a] && Object.keys(e[a]).length
                      ? (o += "@".concat(a, "(").concat(_l(e[a]), ")"))
                      : (o += "@".concat(a)));
                }),
              o
            );
          },
          {
            setStringify: function (i) {
              var t = _l;
              return (_l = i), t;
            },
          }
        ),
        _l = function (t) {
          return JSON.stringify(t, P6);
        };
      function P6(i, t) {
        return (
          rt(t) &&
            !Array.isArray(t) &&
            (t = Object.keys(t)
              .sort()
              .reduce(function (e, n) {
                return (e[n] = t[n]), e;
              }, {})),
          t
        );
      }
      function Lu(i, t) {
        if (i.arguments && i.arguments.length) {
          var e = {};
          return (
            i.arguments.forEach(function (n) {
              return Ms(e, n.name, n.value, t);
            }),
            e
          );
        }
        return null;
      }
      function oo(i) {
        return i.alias ? i.alias.value : i.name.value;
      }
      function D_(i, t, e) {
        if ("string" == typeof i.__typename) return i.__typename;
        for (var n = 0, r = t.selections; n < r.length; n++) {
          var o = r[n];
          if (so(o)) {
            if ("__typename" === o.name.value) return i[oo(o)];
          } else {
            var s = D_(i, x_(o, e).selectionSet, e);
            if ("string" == typeof s) return s;
          }
        }
      }
      function so(i) {
        return "Field" === i.kind;
      }
      function Bu(i) {
        __DEV__
          ? O(
              i && "Document" === i.kind,
              'Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a "gql" tag? http://docs.apollostack.com/apollo-client/core.html#gql'
            )
          : O(i && "Document" === i.kind, 47);
        var t = i.definitions
          .filter(function (e) {
            return "FragmentDefinition" !== e.kind;
          })
          .map(function (e) {
            if ("OperationDefinition" !== e.kind)
              throw __DEV__
                ? new Ce(
                    'Schema type definitions not allowed in queries. Found: "'.concat(
                      e.kind,
                      '"'
                    )
                  )
                : new Ce(48);
            return e;
          });
        return (
          __DEV__
            ? O(
                t.length <= 1,
                "Ambiguous GraphQL document: contains ".concat(
                  t.length,
                  " operations"
                )
              )
            : O(t.length <= 1, 49),
          i
        );
      }
      function bl(i) {
        return (
          Bu(i),
          i.definitions.filter(function (t) {
            return "OperationDefinition" === t.kind;
          })[0]
        );
      }
      function E_(i) {
        return (
          i.definitions
            .filter(function (t) {
              return "OperationDefinition" === t.kind && t.name;
            })
            .map(function (t) {
              return t.name.value;
            })[0] || null
        );
      }
      function M_(i) {
        return i.definitions.filter(function (t) {
          return "FragmentDefinition" === t.kind;
        });
      }
      function OT(i) {
        var t = bl(i);
        return (
          __DEV__
            ? O(
                t && "query" === t.operation,
                "Must contain a query definition."
              )
            : O(t && "query" === t.operation, 50),
          t
        );
      }
      function S_(i) {
        Bu(i);
        for (var t, e = 0, n = i.definitions; e < n.length; e++) {
          var r = n[e];
          if ("OperationDefinition" === r.kind) {
            var o = r.operation;
            if ("query" === o || "mutation" === o || "subscription" === o)
              return r;
          }
          "FragmentDefinition" === r.kind && !t && (t = r);
        }
        if (t) return t;
        throw __DEV__
          ? new Ce(
              "Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment."
            )
          : new Ce(54);
      }
      function T_(i) {
        var t = Object.create(null),
          e = i && i.variableDefinitions;
        return (
          e &&
            e.length &&
            e.forEach(function (n) {
              n.defaultValue && Ms(t, n.variable.name, n.defaultValue);
            }),
          t
        );
      }
      function FT(i, t) {
        return t ? t(i) : Be.of();
      }
      function vl(i) {
        return "function" == typeof i ? new yn(i) : i;
      }
      function Vu(i) {
        return i.request.length <= 1;
      }
      var j6 = (function (i) {
          function t(e, n) {
            var r = i.call(this, e) || this;
            return (r.link = n), r;
          }
          return xi(t, i), t;
        })(Error),
        yn = (function () {
          function i(t) {
            t && (this.request = t);
          }
          return (
            (i.empty = function () {
              return new i(function () {
                return Be.of();
              });
            }),
            (i.from = function (t) {
              return 0 === t.length
                ? i.empty()
                : t.map(vl).reduce(function (e, n) {
                    return e.concat(n);
                  });
            }),
            (i.split = function (t, e, n) {
              var r = vl(e),
                o = vl(n || new i(FT));
              return Vu(r) && Vu(o)
                ? new i(function (s) {
                    return t(s)
                      ? r.request(s) || Be.of()
                      : o.request(s) || Be.of();
                  })
                : new i(function (s, a) {
                    return t(s)
                      ? r.request(s, a) || Be.of()
                      : o.request(s, a) || Be.of();
                  });
            }),
            (i.execute = function (t, e) {
              return (
                t.request(
                  (function w6(i, t) {
                    var e = C({}, i);
                    return (
                      Object.defineProperty(t, "setContext", {
                        enumerable: !1,
                        value: function (o) {
                          e = C(C({}, e), "function" == typeof o ? o(e) : o);
                        },
                      }),
                      Object.defineProperty(t, "getContext", {
                        enumerable: !1,
                        value: function () {
                          return C({}, e);
                        },
                      }),
                      t
                    );
                  })(
                    e.context,
                    (function B6(i) {
                      var t = {
                        variables: i.variables || {},
                        extensions: i.extensions || {},
                        operationName: i.operationName,
                        query: i.query,
                      };
                      return (
                        t.operationName ||
                          (t.operationName =
                            "string" != typeof t.query
                              ? E_(t.query) || void 0
                              : ""),
                        t
                      );
                    })(
                      (function V6(i) {
                        for (
                          var t = [
                              "query",
                              "operationName",
                              "variables",
                              "extensions",
                              "context",
                            ],
                            e = 0,
                            n = Object.keys(i);
                          e < n.length;
                          e++
                        ) {
                          var r = n[e];
                          if (t.indexOf(r) < 0)
                            throw __DEV__
                              ? new Ce("illegal argument: ".concat(r))
                              : new Ce(27);
                        }
                        return i;
                      })(e)
                    )
                  )
                ) || Be.of()
              );
            }),
            (i.concat = function (t, e) {
              var n = vl(t);
              if (Vu(n))
                return (
                  __DEV__ &&
                    O.warn(
                      new j6(
                        "You are calling concat on a terminating link, which will have no effect",
                        n
                      )
                    ),
                  n
                );
              var r = vl(e);
              return Vu(r)
                ? new i(function (o) {
                    return (
                      n.request(o, function (s) {
                        return r.request(s) || Be.of();
                      }) || Be.of()
                    );
                  })
                : new i(function (o, s) {
                    return (
                      n.request(o, function (a) {
                        return r.request(a, s) || Be.of();
                      }) || Be.of()
                    );
                  });
            }),
            (i.prototype.split = function (t, e, n) {
              return this.concat(i.split(t, e, n || new i(FT)));
            }),
            (i.prototype.concat = function (t) {
              return i.concat(this, t);
            }),
            (i.prototype.request = function (t, e) {
              throw __DEV__ ? new Ce("request is not implemented") : new Ce(22);
            }),
            (i.prototype.onError = function (t, e) {
              if (e && e.error) return e.error(t), !1;
              throw t;
            }),
            (i.prototype.setOnError = function (t) {
              return (this.onError = t), this;
            }),
            i
          );
        })(),
        k_ = yn.execute;
      class mse {
        constructor(t, e, n) {
          (this.start = t.start),
            (this.end = e.end),
            (this.startToken = t),
            (this.endToken = e),
            (this.source = n);
        }
        get [Symbol.toStringTag]() {
          return "Location";
        }
        toJSON() {
          return { start: this.start, end: this.end };
        }
      }
      class pse {
        constructor(t, e, n, r, o, s) {
          (this.kind = t),
            (this.start = e),
            (this.end = n),
            (this.line = r),
            (this.column = o),
            (this.value = s),
            (this.prev = null),
            (this.next = null);
        }
        get [Symbol.toStringTag]() {
          return "Token";
        }
        toJSON() {
          return {
            kind: this.kind,
            value: this.value,
            line: this.line,
            column: this.column,
          };
        }
      }
      const PT = {
          Name: [],
          Document: ["definitions"],
          OperationDefinition: [
            "name",
            "variableDefinitions",
            "directives",
            "selectionSet",
          ],
          VariableDefinition: [
            "variable",
            "type",
            "defaultValue",
            "directives",
          ],
          Variable: ["name"],
          SelectionSet: ["selections"],
          Field: ["alias", "name", "arguments", "directives", "selectionSet"],
          Argument: ["name", "value"],
          FragmentSpread: ["name", "directives"],
          InlineFragment: ["typeCondition", "directives", "selectionSet"],
          FragmentDefinition: [
            "name",
            "variableDefinitions",
            "typeCondition",
            "directives",
            "selectionSet",
          ],
          IntValue: [],
          FloatValue: [],
          StringValue: [],
          BooleanValue: [],
          NullValue: [],
          EnumValue: [],
          ListValue: ["values"],
          ObjectValue: ["fields"],
          ObjectField: ["name", "value"],
          Directive: ["name", "arguments"],
          NamedType: ["name"],
          ListType: ["type"],
          NonNullType: ["type"],
          SchemaDefinition: ["description", "directives", "operationTypes"],
          OperationTypeDefinition: ["type"],
          ScalarTypeDefinition: ["description", "name", "directives"],
          ObjectTypeDefinition: [
            "description",
            "name",
            "interfaces",
            "directives",
            "fields",
          ],
          FieldDefinition: [
            "description",
            "name",
            "arguments",
            "type",
            "directives",
          ],
          InputValueDefinition: [
            "description",
            "name",
            "type",
            "defaultValue",
            "directives",
          ],
          InterfaceTypeDefinition: [
            "description",
            "name",
            "interfaces",
            "directives",
            "fields",
          ],
          UnionTypeDefinition: ["description", "name", "directives", "types"],
          EnumTypeDefinition: ["description", "name", "directives", "values"],
          EnumValueDefinition: ["description", "name", "directives"],
          InputObjectTypeDefinition: [
            "description",
            "name",
            "directives",
            "fields",
          ],
          DirectiveDefinition: [
            "description",
            "name",
            "arguments",
            "locations",
          ],
          SchemaExtension: ["directives", "operationTypes"],
          ScalarTypeExtension: ["name", "directives"],
          ObjectTypeExtension: ["name", "interfaces", "directives", "fields"],
          InterfaceTypeExtension: [
            "name",
            "interfaces",
            "directives",
            "fields",
          ],
          UnionTypeExtension: ["name", "directives", "types"],
          EnumTypeExtension: ["name", "directives", "values"],
          InputObjectTypeExtension: ["name", "directives", "fields"],
        },
        z6 = new Set(Object.keys(PT));
      function NT(i) {
        const t = i?.kind;
        return "string" == typeof t && z6.has(t);
      }
      var xt = (() => (
        (function (i) {
          (i.NAME = "Name"),
            (i.DOCUMENT = "Document"),
            (i.OPERATION_DEFINITION = "OperationDefinition"),
            (i.VARIABLE_DEFINITION = "VariableDefinition"),
            (i.SELECTION_SET = "SelectionSet"),
            (i.FIELD = "Field"),
            (i.ARGUMENT = "Argument"),
            (i.FRAGMENT_SPREAD = "FragmentSpread"),
            (i.INLINE_FRAGMENT = "InlineFragment"),
            (i.FRAGMENT_DEFINITION = "FragmentDefinition"),
            (i.VARIABLE = "Variable"),
            (i.INT = "IntValue"),
            (i.FLOAT = "FloatValue"),
            (i.STRING = "StringValue"),
            (i.BOOLEAN = "BooleanValue"),
            (i.NULL = "NullValue"),
            (i.ENUM = "EnumValue"),
            (i.LIST = "ListValue"),
            (i.OBJECT = "ObjectValue"),
            (i.OBJECT_FIELD = "ObjectField"),
            (i.DIRECTIVE = "Directive"),
            (i.NAMED_TYPE = "NamedType"),
            (i.LIST_TYPE = "ListType"),
            (i.NON_NULL_TYPE = "NonNullType"),
            (i.SCHEMA_DEFINITION = "SchemaDefinition"),
            (i.OPERATION_TYPE_DEFINITION = "OperationTypeDefinition"),
            (i.SCALAR_TYPE_DEFINITION = "ScalarTypeDefinition"),
            (i.OBJECT_TYPE_DEFINITION = "ObjectTypeDefinition"),
            (i.FIELD_DEFINITION = "FieldDefinition"),
            (i.INPUT_VALUE_DEFINITION = "InputValueDefinition"),
            (i.INTERFACE_TYPE_DEFINITION = "InterfaceTypeDefinition"),
            (i.UNION_TYPE_DEFINITION = "UnionTypeDefinition"),
            (i.ENUM_TYPE_DEFINITION = "EnumTypeDefinition"),
            (i.ENUM_VALUE_DEFINITION = "EnumValueDefinition"),
            (i.INPUT_OBJECT_TYPE_DEFINITION = "InputObjectTypeDefinition"),
            (i.DIRECTIVE_DEFINITION = "DirectiveDefinition"),
            (i.SCHEMA_EXTENSION = "SchemaExtension"),
            (i.SCALAR_TYPE_EXTENSION = "ScalarTypeExtension"),
            (i.OBJECT_TYPE_EXTENSION = "ObjectTypeExtension"),
            (i.INTERFACE_TYPE_EXTENSION = "InterfaceTypeExtension"),
            (i.UNION_TYPE_EXTENSION = "UnionTypeExtension"),
            (i.ENUM_TYPE_EXTENSION = "EnumTypeExtension"),
            (i.INPUT_OBJECT_TYPE_EXTENSION = "InputObjectTypeExtension");
        })(xt || (xt = {})),
        xt
      ))();
      const ao = Object.freeze({});
      function Gn(i, t, e = PT) {
        const n = new Map();
        for (const b of Object.values(xt)) n.set(b, I_(t, b));
        let r,
          d,
          u,
          o = Array.isArray(i),
          s = [i],
          a = -1,
          l = [],
          c = i;
        const h = [],
          f = [];
        do {
          a++;
          const b = a === s.length,
            y = b && 0 !== l.length;
          if (b) {
            if (
              ((d = 0 === f.length ? void 0 : h[h.length - 1]),
              (c = u),
              (u = f.pop()),
              y)
            )
              if (o) {
                c = c.slice();
                let x = 0;
                for (const [T, I] of l) {
                  const R = T - x;
                  null === I ? (c.splice(R, 1), x++) : (c[R] = I);
                }
              } else {
                c = Object.defineProperties(
                  {},
                  Object.getOwnPropertyDescriptors(c)
                );
                for (const [x, T] of l) c[x] = T;
              }
            (a = r.index),
              (s = r.keys),
              (l = r.edits),
              (o = r.inArray),
              (r = r.prev);
          } else if (u) {
            if (((d = o ? a : s[a]), (c = u[d]), null == c)) continue;
            h.push(d);
          }
          let _;
          if (!Array.isArray(c)) {
            var m, p;
            if (
              (NT(c) || Ou(!1, `Invalid AST Node: ${MT(c)}.`),
              (_ = (
                b
                  ? null === (m = n.get(c.kind)) || void 0 === m
                    ? void 0
                    : m.leave
                  : null === (p = n.get(c.kind)) || void 0 === p
                  ? void 0
                  : p.enter
              )?.call(t, c, d, u, h, f)),
              _ === ao)
            )
              break;
            if (!1 === _) {
              if (!b) {
                h.pop();
                continue;
              }
            } else if (void 0 !== _ && (l.push([d, _]), !b)) {
              if (!NT(_)) {
                h.pop();
                continue;
              }
              c = _;
            }
          }
          var g;
          void 0 === _ && y && l.push([d, c]),
            b
              ? h.pop()
              : ((r = { inArray: o, index: a, keys: s, edits: l, prev: r }),
                (o = Array.isArray(c)),
                (s = o ? c : null !== (g = e[c.kind]) && void 0 !== g ? g : []),
                (a = -1),
                (l = []),
                u && f.push(u),
                (u = c));
        } while (void 0 !== r);
        return 0 !== l.length ? l[l.length - 1][1] : i;
      }
      function I_(i, t) {
        const e = i[t];
        return "object" == typeof e
          ? e
          : "function" == typeof e
          ? { enter: e, leave: void 0 }
          : { enter: i.enter, leave: i.leave };
      }
      function ju(i, t) {
        var e = i.directives;
        return (
          !e ||
          !e.length ||
          (function G6(i) {
            var t = [];
            return (
              i &&
                i.length &&
                i.forEach(function (e) {
                  if (
                    (function $6(i) {
                      var t = i.name.value;
                      return "skip" === t || "include" === t;
                    })(e)
                  ) {
                    var n = e.arguments,
                      r = e.name.value;
                    __DEV__
                      ? O(
                          n && 1 === n.length,
                          "Incorrect number of arguments for the @".concat(
                            r,
                            " directive."
                          )
                        )
                      : O(n && 1 === n.length, 41);
                    var o = n[0];
                    __DEV__
                      ? O(
                          o.name && "if" === o.name.value,
                          "Invalid argument for the @".concat(r, " directive.")
                        )
                      : O(o.name && "if" === o.name.value, 42);
                    var s = o.value;
                    __DEV__
                      ? O(
                          s &&
                            ("Variable" === s.kind ||
                              "BooleanValue" === s.kind),
                          "Argument for the @".concat(
                            r,
                            " directive must be a variable or a boolean value."
                          )
                        )
                      : O(
                          s &&
                            ("Variable" === s.kind ||
                              "BooleanValue" === s.kind),
                          43
                        ),
                      t.push({ directive: e, ifArgument: o });
                  }
                }),
              t
            );
          })(e).every(function (n) {
            var r = n.directive,
              o = n.ifArgument,
              s = !1;
            return (
              "Variable" === o.value.kind
                ? ((s = t && t[o.value.name.value]),
                  __DEV__
                    ? O(
                        void 0 !== s,
                        "Invalid variable referenced in @".concat(
                          r.name.value,
                          " directive."
                        )
                      )
                    : O(void 0 !== s, 40))
                : (s = o.value.value),
              "skip" === r.name.value ? !s : s
            );
          })
        );
      }
      function yl(i, t, e) {
        var n = new Set(i),
          r = n.size;
        return (
          Gn(t, {
            Directive: function (o) {
              if (n.delete(o.name.value) && (!e || !n.size)) return ao;
            },
          }),
          e ? !n.size : n.size < r
        );
      }
      function U6(i) {
        return i && yl(["client", "export"], i, !0);
      }
      var A_ = function (i, t) {
          var e;
          try {
            e = JSON.stringify(i);
          } catch (r) {
            var n = __DEV__
              ? new Ce(
                  "Network request failed. "
                    .concat(t, " is not serializable: ")
                    .concat(r.message)
                )
              : new Ce(24);
            throw ((n.parseError = r), n);
          }
          return e;
        },
        lo =
          "function" == typeof WeakMap &&
          "ReactNative" !==
            Fi(function () {
              return navigator.product;
            }),
        W6 = "function" == typeof WeakSet,
        LT = "function" == typeof Symbol && "function" == typeof Symbol.for,
        Hu = LT && Symbol.asyncIterator;
      function BT(i) {
        var t = {
          next: function () {
            return i.read();
          },
        };
        return (
          Hu &&
            (t[Symbol.asyncIterator] = function () {
              return this;
            }),
          t
        );
      }
      function oq(i) {
        var t = i;
        if (
          ((function K6(i) {
            return !!i.body;
          })(i) && (t = i.body),
          (function Z6(i) {
            return !(!Hu || !i[Symbol.asyncIterator]);
          })(t))
        )
          return (function iq(i) {
            var t,
              e = i[Symbol.asyncIterator]();
            return (
              ((t = {
                next: function () {
                  return e.next();
                },
              })[Symbol.asyncIterator] = function () {
                return this;
              }),
              t
            );
          })(t);
        if (
          (function X6(i) {
            return !!i.getReader;
          })(t)
        )
          return BT(t.getReader());
        if (
          (function J6(i) {
            return !!i.stream;
          })(t)
        )
          return BT(t.stream().getReader());
        if (
          (function eq(i) {
            return !!i.arrayBuffer;
          })(t)
        )
          return (function rq(i) {
            var t = !1,
              e = {
                next: function () {
                  return t
                    ? Promise.resolve({ value: void 0, done: !0 })
                    : ((t = !0),
                      new Promise(function (n, r) {
                        i.then(function (o) {
                          n({ value: o, done: !1 });
                        }).catch(r);
                      }));
                },
              };
            return (
              Hu &&
                (e[Symbol.asyncIterator] = function () {
                  return this;
                }),
              e
            );
          })(t.arrayBuffer());
        if (
          (function tq(i) {
            return !!i.pipe;
          })(t)
        )
          return (function nq(i) {
            var t = null,
              e = null,
              n = !1,
              r = [],
              o = [];
            function s(u) {
              if (!e) {
                if (o.length) {
                  var h = o.shift();
                  if (Array.isArray(h) && h[0])
                    return h[0]({ value: u, done: !1 });
                }
                r.push(u);
              }
            }
            function a(u) {
              (e = u),
                o.slice().forEach(function (f) {
                  f[1](u);
                }),
                !t || t();
            }
            function l() {
              (n = !0),
                o.slice().forEach(function (h) {
                  h[0]({ value: void 0, done: !0 });
                }),
                !t || t();
            }
            (t = function () {
              (t = null),
                i.removeListener("data", s),
                i.removeListener("error", a),
                i.removeListener("end", l),
                i.removeListener("finish", l),
                i.removeListener("close", l);
            }),
              i.on("data", s),
              i.on("error", a),
              i.on("end", l),
              i.on("finish", l),
              i.on("close", l);
            var d = {
              next: function () {
                return (function c() {
                  return new Promise(function (u, h) {
                    return e
                      ? h(e)
                      : r.length
                      ? u({ value: r.shift(), done: !1 })
                      : n
                      ? u({ value: void 0, done: !0 })
                      : void o.push([u, h]);
                  });
                })();
              },
            };
            return (
              Hu &&
                (d[Symbol.asyncIterator] = function () {
                  return this;
                }),
              d
            );
          })(t);
        throw new Error(
          "Unknown body type for responseIterator. Please pass a streamable response."
        );
      }
      Fi(function () {
        return window.document.createElement;
      }),
        Fi(function () {
          return navigator.userAgent.indexOf("jsdom") >= 0;
        });
      var R_ = function (i, t, e) {
          var n = new Error(e);
          throw (
            ((n.name = "ServerError"),
            (n.response = i),
            (n.statusCode = i.status),
            (n.result = t),
            n)
          );
        },
        VT = Object.prototype.hasOwnProperty;
      function aq(i) {
        var t = {};
        return (
          i.split("\n").forEach(function (e) {
            var n = e.indexOf(":");
            if (n > -1) {
              var r = e.slice(0, n).trim().toLowerCase(),
                o = e.slice(n + 1).trim();
              t[r] = o;
            }
          }),
          t
        );
      }
      function jT(i, t) {
        i.status >= 300 &&
          R_(
            i,
            (function () {
              try {
                return JSON.parse(t);
              } catch {
                return t;
              }
            })(),
            "Response not successful: Received status code ".concat(i.status)
          );
        try {
          return JSON.parse(t);
        } catch (r) {
          var n = r;
          throw (
            ((n.name = "ServerParseError"),
            (n.response = i),
            (n.statusCode = i.status),
            (n.bodyText = t),
            n)
          );
        }
      }
      function O_(i, t) {
        var e, n;
        "AbortError" !== i.name &&
          (i.result &&
            i.result.errors &&
            i.result.data &&
            (null === (e = t.next) || void 0 === e || e.call(t, i.result)),
          null === (n = t.error) || void 0 === n || n.call(t, i));
      }
      function HT(i) {
        return 9 === i || 32 === i;
      }
      const pq = /[\x00-\x1f\x22\x5c\x7f-\x9f]/g;
      function gq(i) {
        return _q[i.charCodeAt(0)];
      }
      const _q = [
        "\\u0000",
        "\\u0001",
        "\\u0002",
        "\\u0003",
        "\\u0004",
        "\\u0005",
        "\\u0006",
        "\\u0007",
        "\\b",
        "\\t",
        "\\n",
        "\\u000B",
        "\\f",
        "\\r",
        "\\u000E",
        "\\u000F",
        "\\u0010",
        "\\u0011",
        "\\u0012",
        "\\u0013",
        "\\u0014",
        "\\u0015",
        "\\u0016",
        "\\u0017",
        "\\u0018",
        "\\u0019",
        "\\u001A",
        "\\u001B",
        "\\u001C",
        "\\u001D",
        "\\u001E",
        "\\u001F",
        "",
        "",
        '\\"',
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "\\\\",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "\\u007F",
        "\\u0080",
        "\\u0081",
        "\\u0082",
        "\\u0083",
        "\\u0084",
        "\\u0085",
        "\\u0086",
        "\\u0087",
        "\\u0088",
        "\\u0089",
        "\\u008A",
        "\\u008B",
        "\\u008C",
        "\\u008D",
        "\\u008E",
        "\\u008F",
        "\\u0090",
        "\\u0091",
        "\\u0092",
        "\\u0093",
        "\\u0094",
        "\\u0095",
        "\\u0096",
        "\\u0097",
        "\\u0098",
        "\\u0099",
        "\\u009A",
        "\\u009B",
        "\\u009C",
        "\\u009D",
        "\\u009E",
        "\\u009F",
      ];
      function UT(i) {
        return Gn(i, vq);
      }
      const vq = {
        Name: { leave: (i) => i.value },
        Variable: { leave: (i) => "$" + i.name },
        Document: { leave: (i) => B(i.definitions, "\n\n") },
        OperationDefinition: {
          leave(i) {
            const t = pe("(", B(i.variableDefinitions, ", "), ")"),
              e = B([i.operation, B([i.name, t]), B(i.directives, " ")], " ");
            return ("query" === e ? "" : e + " ") + i.selectionSet;
          },
        },
        VariableDefinition: {
          leave: ({ variable: i, type: t, defaultValue: e, directives: n }) =>
            i + ": " + t + pe(" = ", e) + pe(" ", B(n, " ")),
        },
        SelectionSet: { leave: ({ selections: i }) => Zi(i) },
        Field: {
          leave({
            alias: i,
            name: t,
            arguments: e,
            directives: n,
            selectionSet: r,
          }) {
            const o = pe("", i, ": ") + t;
            let s = o + pe("(", B(e, ", "), ")");
            return (
              s.length > 80 && (s = o + pe("(\n", zu(B(e, "\n")), "\n)")),
              B([s, B(n, " "), r], " ")
            );
          },
        },
        Argument: { leave: ({ name: i, value: t }) => i + ": " + t },
        FragmentSpread: {
          leave: ({ name: i, directives: t }) => "..." + i + pe(" ", B(t, " ")),
        },
        InlineFragment: {
          leave: ({ typeCondition: i, directives: t, selectionSet: e }) =>
            B(["...", pe("on ", i), B(t, " "), e], " "),
        },
        FragmentDefinition: {
          leave: ({
            name: i,
            typeCondition: t,
            variableDefinitions: e,
            directives: n,
            selectionSet: r,
          }) =>
            `fragment ${i}${pe("(", B(e, ", "), ")")} on ${t} ${pe(
              "",
              B(n, " "),
              " "
            )}` + r,
        },
        IntValue: { leave: ({ value: i }) => i },
        FloatValue: { leave: ({ value: i }) => i },
        StringValue: {
          leave: ({ value: i, block: t }) =>
            t
              ? (function fq(i, t) {
                  const e = i.replace(/"""/g, '\\"""'),
                    n = e.split(/\r\n|[\n\r]/g),
                    r = 1 === n.length,
                    o =
                      n.length > 1 &&
                      n
                        .slice(1)
                        .every((f) => 0 === f.length || HT(f.charCodeAt(0))),
                    s = e.endsWith('\\"""'),
                    a = i.endsWith('"') && !s,
                    l = i.endsWith("\\"),
                    c = a || l,
                    d =
                      !(null != t && t.minimize) &&
                      (!r || i.length > 70 || c || o || s);
                  let u = "";
                  const h = r && HT(i.charCodeAt(0));
                  return (
                    ((d && !h) || o) && (u += "\n"),
                    (u += e),
                    (d || c) && (u += "\n"),
                    '"""' + u + '"""'
                  );
                })(i)
              : (function mq(i) {
                  return `"${i.replace(pq, gq)}"`;
                })(i),
        },
        BooleanValue: { leave: ({ value: i }) => (i ? "true" : "false") },
        NullValue: { leave: () => "null" },
        EnumValue: { leave: ({ value: i }) => i },
        ListValue: { leave: ({ values: i }) => "[" + B(i, ", ") + "]" },
        ObjectValue: { leave: ({ fields: i }) => "{" + B(i, ", ") + "}" },
        ObjectField: { leave: ({ name: i, value: t }) => i + ": " + t },
        Directive: {
          leave: ({ name: i, arguments: t }) =>
            "@" + i + pe("(", B(t, ", "), ")"),
        },
        NamedType: { leave: ({ name: i }) => i },
        ListType: { leave: ({ type: i }) => "[" + i + "]" },
        NonNullType: { leave: ({ type: i }) => i + "!" },
        SchemaDefinition: {
          leave: ({ description: i, directives: t, operationTypes: e }) =>
            pe("", i, "\n") + B(["schema", B(t, " "), Zi(e)], " "),
        },
        OperationTypeDefinition: {
          leave: ({ operation: i, type: t }) => i + ": " + t,
        },
        ScalarTypeDefinition: {
          leave: ({ description: i, name: t, directives: e }) =>
            pe("", i, "\n") + B(["scalar", t, B(e, " ")], " "),
        },
        ObjectTypeDefinition: {
          leave: ({
            description: i,
            name: t,
            interfaces: e,
            directives: n,
            fields: r,
          }) =>
            pe("", i, "\n") +
            B(
              ["type", t, pe("implements ", B(e, " & ")), B(n, " "), Zi(r)],
              " "
            ),
        },
        FieldDefinition: {
          leave: ({
            description: i,
            name: t,
            arguments: e,
            type: n,
            directives: r,
          }) =>
            pe("", i, "\n") +
            t +
            ($T(e)
              ? pe("(\n", zu(B(e, "\n")), "\n)")
              : pe("(", B(e, ", "), ")")) +
            ": " +
            n +
            pe(" ", B(r, " ")),
        },
        InputValueDefinition: {
          leave: ({
            description: i,
            name: t,
            type: e,
            defaultValue: n,
            directives: r,
          }) =>
            pe("", i, "\n") + B([t + ": " + e, pe("= ", n), B(r, " ")], " "),
        },
        InterfaceTypeDefinition: {
          leave: ({
            description: i,
            name: t,
            interfaces: e,
            directives: n,
            fields: r,
          }) =>
            pe("", i, "\n") +
            B(
              [
                "interface",
                t,
                pe("implements ", B(e, " & ")),
                B(n, " "),
                Zi(r),
              ],
              " "
            ),
        },
        UnionTypeDefinition: {
          leave: ({ description: i, name: t, directives: e, types: n }) =>
            pe("", i, "\n") +
            B(["union", t, B(e, " "), pe("= ", B(n, " | "))], " "),
        },
        EnumTypeDefinition: {
          leave: ({ description: i, name: t, directives: e, values: n }) =>
            pe("", i, "\n") + B(["enum", t, B(e, " "), Zi(n)], " "),
        },
        EnumValueDefinition: {
          leave: ({ description: i, name: t, directives: e }) =>
            pe("", i, "\n") + B([t, B(e, " ")], " "),
        },
        InputObjectTypeDefinition: {
          leave: ({ description: i, name: t, directives: e, fields: n }) =>
            pe("", i, "\n") + B(["input", t, B(e, " "), Zi(n)], " "),
        },
        DirectiveDefinition: {
          leave: ({
            description: i,
            name: t,
            arguments: e,
            repeatable: n,
            locations: r,
          }) =>
            pe("", i, "\n") +
            "directive @" +
            t +
            ($T(e)
              ? pe("(\n", zu(B(e, "\n")), "\n)")
              : pe("(", B(e, ", "), ")")) +
            (n ? " repeatable" : "") +
            " on " +
            B(r, " | "),
        },
        SchemaExtension: {
          leave: ({ directives: i, operationTypes: t }) =>
            B(["extend schema", B(i, " "), Zi(t)], " "),
        },
        ScalarTypeExtension: {
          leave: ({ name: i, directives: t }) =>
            B(["extend scalar", i, B(t, " ")], " "),
        },
        ObjectTypeExtension: {
          leave: ({ name: i, interfaces: t, directives: e, fields: n }) =>
            B(
              [
                "extend type",
                i,
                pe("implements ", B(t, " & ")),
                B(e, " "),
                Zi(n),
              ],
              " "
            ),
        },
        InterfaceTypeExtension: {
          leave: ({ name: i, interfaces: t, directives: e, fields: n }) =>
            B(
              [
                "extend interface",
                i,
                pe("implements ", B(t, " & ")),
                B(e, " "),
                Zi(n),
              ],
              " "
            ),
        },
        UnionTypeExtension: {
          leave: ({ name: i, directives: t, types: e }) =>
            B(["extend union", i, B(t, " "), pe("= ", B(e, " | "))], " "),
        },
        EnumTypeExtension: {
          leave: ({ name: i, directives: t, values: e }) =>
            B(["extend enum", i, B(t, " "), Zi(e)], " "),
        },
        InputObjectTypeExtension: {
          leave: ({ name: i, directives: t, fields: e }) =>
            B(["extend input", i, B(t, " "), Zi(e)], " "),
        },
      };
      function B(i, t = "") {
        var e;
        return null !== (e = i?.filter((n) => n).join(t)) && void 0 !== e
          ? e
          : "";
      }
      function Zi(i) {
        return pe("{\n", zu(B(i, "\n")), "\n}");
      }
      function pe(i, t, e = "") {
        return null != t && "" !== t ? i + t + e : "";
      }
      function zu(i) {
        return pe("  ", i.replace(/\n/g, "\n  "));
      }
      function $T(i) {
        var t;
        return (
          null !== (t = i?.some((e) => e.includes("\n"))) && void 0 !== t && t
        );
      }
      var Cq = {
          http: {
            includeQuery: !0,
            includeExtensions: !1,
            preserveHeaderCase: !1,
          },
          headers: { accept: "*/*", "content-type": "application/json" },
          options: { method: "POST" },
        },
        GT = function (i, t) {
          return t(i);
        };
      function Dq(i, t) {
        if (!t) {
          var e = Object.create(null);
          return (
            Object.keys(Object(i)).forEach(function (o) {
              e[o.toLowerCase()] = i[o];
            }),
            e
          );
        }
        var n = Object.create(null);
        Object.keys(Object(i)).forEach(function (o) {
          n[o.toLowerCase()] = { originalName: o, value: i[o] };
        });
        var r = Object.create(null);
        return (
          Object.keys(n).forEach(function (o) {
            r[n[o].originalName] = n[o].value;
          }),
          r
        );
      }
      function WT(i) {
        return new Be(function (t) {
          t.error(i);
        });
      }
      var QT = Fi(function () {
          return fetch;
        }),
        Sq = function (i) {
          void 0 === i && (i = {});
          var t = i.uri,
            e = void 0 === t ? "/graphql" : t,
            n = i.fetch,
            r = i.print,
            o = void 0 === r ? GT : r,
            s = i.includeExtensions,
            a = i.preserveHeaderCase,
            l = i.useGETForQueries,
            c = i.includeUnusedVariables,
            d = void 0 !== c && c,
            u = Cr(i, [
              "uri",
              "fetch",
              "print",
              "includeExtensions",
              "preserveHeaderCase",
              "useGETForQueries",
              "includeUnusedVariables",
            ]);
          __DEV__ &&
            (function (i) {
              if (!i && typeof fetch > "u")
                throw __DEV__
                  ? new Ce(
                      "\n\"fetch\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    "
                    )
                  : new Ce(23);
            })(n || QT);
          var h = {
            http: { includeExtensions: s, preserveHeaderCase: a },
            options: u.fetchOptions,
            credentials: u.credentials,
            headers: u.headers,
          };
          return new yn(function (f) {
            var m = (function (i, t) {
                return (
                  i.getContext().uri ||
                  ("function" == typeof t ? t(i) : t || "/graphql")
                );
              })(f, e),
              p = f.getContext(),
              g = {};
            if (p.clientAwareness) {
              var b = p.clientAwareness,
                y = b.name,
                _ = b.version;
              y && (g["apollographql-client-name"] = y),
                _ && (g["apollographql-client-version"] = _);
            }
            var Oe,
              x = C(C({}, g), p.headers),
              I = (function qT(i, t) {
                for (var e = [], n = 2; n < arguments.length; n++)
                  e[n - 2] = arguments[n];
                var r = {},
                  o = {};
                e.forEach(function (u) {
                  (r = C(C(C({}, r), u.options), {
                    headers: C(C({}, r.headers), u.headers),
                  })),
                    u.credentials && (r.credentials = u.credentials),
                    (o = C(C({}, o), u.http));
                }),
                  r.headers &&
                    (r.headers = Dq(r.headers, o.preserveHeaderCase));
                var s = i.operationName,
                  a = i.extensions,
                  l = i.variables,
                  c = i.query,
                  d = { operationName: s, variables: l };
                return (
                  o.includeExtensions && (d.extensions = a),
                  o.includeQuery && (d.query = t(c, UT)),
                  { options: r, body: d }
                );
              })(f, o, Cq, h, {
                http: p.http,
                options: p.fetchOptions,
                credentials: p.credentials,
                headers: x,
              }),
              R = I.options,
              z = I.body;
            if (z.variables && !d) {
              var De = new Set(Object.keys(z.variables));
              Gn(f.query, {
                Variable: function (V, ge, Ne) {
                  Ne &&
                    "VariableDefinition" !== Ne.kind &&
                    De.delete(V.name.value);
                },
              }),
                De.size &&
                  ((z.variables = C({}, z.variables)),
                  De.forEach(function (V) {
                    delete z.variables[V];
                  }));
            }
            if (!R.signal) {
              var wn = (function () {
                if (typeof AbortController > "u")
                  return { controller: !1, signal: !1 };
                var i = new AbortController();
                return { controller: i, signal: i.signal };
              })();
              (Oe = wn.controller) && (R.signal = wn.signal);
            }
            if (
              (l &&
                !f.query.definitions.some(function (V) {
                  return (
                    "OperationDefinition" === V.kind &&
                    "mutation" === V.operation
                  );
                }) &&
                (R.method = "GET"),
              yl(["defer"], f.query) &&
                ((R.headers = R.headers || {}),
                (R.headers.accept =
                  "multipart/mixed; deferSpec=20220824, application/json")),
              "GET" === R.method)
            ) {
              var Ll = (function Mq(i, t) {
                  var e = [],
                    n = function (u, h) {
                      e.push("".concat(u, "=").concat(encodeURIComponent(h)));
                    };
                  if (
                    ("query" in t && n("query", t.query),
                    t.operationName && n("operationName", t.operationName),
                    t.variables)
                  ) {
                    var r = void 0;
                    try {
                      r = A_(t.variables, "Variables map");
                    } catch (u) {
                      return { parseError: u };
                    }
                    n("variables", r);
                  }
                  if (t.extensions) {
                    var o = void 0;
                    try {
                      o = A_(t.extensions, "Extensions map");
                    } catch (u) {
                      return { parseError: u };
                    }
                    n("extensions", o);
                  }
                  var s = "",
                    a = i,
                    l = i.indexOf("#");
                  -1 !== l && ((s = i.substr(l)), (a = i.substr(0, l)));
                  var c = -1 === a.indexOf("?") ? "?" : "&";
                  return { newURI: a + c + e.join("&") + s };
                })(m, z),
                L = Ll.newURI,
                H = Ll.parseError;
              if (H) return WT(H);
              m = L;
            } else
              try {
                R.body = A_(z, "Payload");
              } catch (V) {
                return WT(V);
              }
            return new Be(function (V) {
              return (
                (
                  n ||
                  Fi(function () {
                    return fetch;
                  }) ||
                  QT
                )(m, R)
                  .then(function (Ne) {
                    var si;
                    f.setContext({ response: Ne });
                    var Ut =
                      null === (si = Ne.headers) || void 0 === si
                        ? void 0
                        : si.get("content-type");
                    return null !== Ut && /^multipart\/mixed/i.test(Ut)
                      ? (function sq(i, t) {
                          var e, n, r;
                          return xn(this, void 0, void 0, function () {
                            var o,
                              s,
                              a,
                              l,
                              c,
                              d,
                              u,
                              h,
                              f,
                              m,
                              p,
                              g,
                              b,
                              y,
                              _,
                              x,
                              T,
                              I,
                              R,
                              z;
                            return Kn(this, function (De) {
                              switch (De.label) {
                                case 0:
                                  if (void 0 === TextDecoder)
                                    throw new Error(
                                      "TextDecoder must be defined in the environment: please import a polyfill."
                                    );
                                  (o = new TextDecoder("utf-8")),
                                    (s =
                                      null === (e = i.headers) || void 0 === e
                                        ? void 0
                                        : e.get("content-type")),
                                    (l = s?.includes((a = "boundary="))
                                      ? s
                                          ?.substring(s?.indexOf(a) + a.length)
                                          .replace(/['"]/g, "")
                                          .replace(/\;(.*)/gm, "")
                                          .trim()
                                      : "-"),
                                    (c = "--".concat(l)),
                                    (d = ""),
                                    (u = oq(i)),
                                    (h = !0),
                                    (De.label = 1);
                                case 1:
                                  return h ? [4, u.next()] : [3, 3];
                                case 2:
                                  for (
                                    f = De.sent(),
                                      p = f.done,
                                      g =
                                        "string" == typeof (m = f.value)
                                          ? m
                                          : o.decode(m),
                                      h = !p,
                                      b = (d += g).indexOf(c);
                                    b > -1;

                                  ) {
                                    if (
                                      ((y = void 0),
                                      (z = [
                                        d.slice(0, b),
                                        d.slice(b + c.length),
                                      ]),
                                      (d = z[1]),
                                      (y = z[0]).trim())
                                    ) {
                                      if (
                                        ((_ = y.indexOf("\r\n\r\n")),
                                        (x = aq(y.slice(0, _))),
                                        (T = x["content-type"]) &&
                                          -1 ===
                                            T.toLowerCase().indexOf(
                                              "application/json"
                                            ))
                                      )
                                        throw new Error(
                                          "Unsupported patch content type: application/json is required."
                                        );
                                      I = y.slice(_);
                                      try {
                                        (R = jT(i, I.replace("\r\n", ""))),
                                          (Object.keys(R).length > 1 ||
                                            "data" in R ||
                                            "incremental" in R ||
                                            "errors" in R) &&
                                            (null === (n = t.next) ||
                                              void 0 === n ||
                                              n.call(t, R));
                                      } catch (Oe) {
                                        O_(Oe, t);
                                      }
                                    }
                                    b = d.indexOf(c);
                                  }
                                  return [3, 1];
                                case 3:
                                  return (
                                    null === (r = t.complete) ||
                                      void 0 === r ||
                                      r.call(t),
                                    [2]
                                  );
                              }
                            });
                          });
                        })(Ne, V)
                      : (function lq(i, t, e) {
                          (function cq(i) {
                            return function (t) {
                              return t
                                .text()
                                .then(function (e) {
                                  return jT(t, e);
                                })
                                .then(function (e) {
                                  return (
                                    t.status >= 300 &&
                                      R_(
                                        t,
                                        e,
                                        "Response not successful: Received status code ".concat(
                                          t.status
                                        )
                                      ),
                                    !Array.isArray(e) &&
                                      !VT.call(e, "data") &&
                                      !VT.call(e, "errors") &&
                                      R_(
                                        t,
                                        e,
                                        "Server response was missing for query '".concat(
                                          Array.isArray(i)
                                            ? i.map(function (n) {
                                                return n.operationName;
                                              })
                                            : i.operationName,
                                          "'."
                                        )
                                      ),
                                    e
                                  );
                                });
                            };
                          })(t)(i)
                            .then(function (n) {
                              var r, o;
                              null === (r = e.next) ||
                                void 0 === r ||
                                r.call(e, n),
                                null === (o = e.complete) ||
                                  void 0 === o ||
                                  o.call(e);
                            })
                            .catch(function (n) {
                              return O_(n, e);
                            });
                        })(Ne, f, V);
                  })
                  .catch(function (Ne) {
                    return O_(Ne, V);
                  }),
                function () {
                  Oe && Oe.abort();
                }
              );
            });
          });
        },
        Tq = (function (i) {
          function t(e) {
            void 0 === e && (e = {});
            var n = i.call(this, Sq(e).request) || this;
            return (n.options = e), n;
          }
          return xi(t, i), t;
        })(yn),
        YT = Object.prototype,
        KT = YT.toString,
        kq = YT.hasOwnProperty,
        XT = Function.prototype.toString,
        F_ = new Map();
      function Ct(i, t) {
        try {
          return P_(i, t);
        } finally {
          F_.clear();
        }
      }
      function P_(i, t) {
        if (i === t) return !0;
        var e = KT.call(i);
        if (e !== KT.call(t)) return !1;
        switch (e) {
          case "[object Array]":
            if (i.length !== t.length) return !1;
          case "[object Object]":
            if (JT(i, t)) return !0;
            var r = ZT(i),
              o = ZT(t),
              s = r.length;
            if (s !== o.length) return !1;
            for (var a = 0; a < s; ++a) if (!kq.call(t, r[a])) return !1;
            for (a = 0; a < s; ++a) {
              var l = r[a];
              if (!P_(i[l], t[l])) return !1;
            }
            return !0;
          case "[object Error]":
            return i.name === t.name && i.message === t.message;
          case "[object Number]":
            if (i != i) return t != t;
          case "[object Boolean]":
          case "[object Date]":
            return +i == +t;
          case "[object RegExp]":
          case "[object String]":
            return i == "".concat(t);
          case "[object Map]":
          case "[object Set]":
            if (i.size !== t.size) return !1;
            if (JT(i, t)) return !0;
            for (var c = i.entries(), d = "[object Map]" === e; ; ) {
              var u = c.next();
              if (u.done) break;
              var h = u.value,
                f = h[0],
                m = h[1];
              if (!t.has(f) || (d && !P_(m, t.get(f)))) return !1;
            }
            return !0;
          case "[object Uint16Array]":
          case "[object Uint8Array]":
          case "[object Uint32Array]":
          case "[object Int32Array]":
          case "[object Int8Array]":
          case "[object Int16Array]":
          case "[object ArrayBuffer]":
            (i = new Uint8Array(i)), (t = new Uint8Array(t));
          case "[object DataView]":
            var p = i.byteLength;
            if (p === t.byteLength) for (; p-- && i[p] === t[p]; );
            return -1 === p;
          case "[object AsyncFunction]":
          case "[object GeneratorFunction]":
          case "[object AsyncGeneratorFunction]":
          case "[object Function]":
            var g = XT.call(i);
            return (
              g === XT.call(t) &&
              !(function Rq(i, t) {
                var e = i.length - t.length;
                return e >= 0 && i.indexOf(t, e) === e;
              })(g, Aq)
            );
        }
        return !1;
      }
      function ZT(i) {
        return Object.keys(i).filter(Iq, i);
      }
      function Iq(i) {
        return void 0 !== this[i];
      }
      var Aq = "{ [native code] }";
      function JT(i, t) {
        var e = F_.get(i);
        if (e) {
          if (e.has(t)) return !0;
        } else F_.set(i, (e = new Set()));
        return e.add(t), !1;
      }
      var ot = Array.isArray;
      function Pi(i) {
        return Array.isArray(i) && i.length > 0;
      }
      var Oq = Object.prototype.hasOwnProperty;
      function ek() {
        for (var i = [], t = 0; t < arguments.length; t++) i[t] = arguments[t];
        return N_(i);
      }
      function N_(i) {
        var t = i[0] || {},
          e = i.length;
        if (e > 1)
          for (var n = new fr(), r = 1; r < e; ++r) t = n.merge(t, i[r]);
        return t;
      }
      var Fq = function (i, t, e) {
          return this.merge(i[e], t[e]);
        },
        fr = (function () {
          function i(t) {
            void 0 === t && (t = Fq),
              (this.reconciler = t),
              (this.isObject = rt),
              (this.pastCopies = new Set());
          }
          return (
            (i.prototype.merge = function (t, e) {
              for (var n = this, r = [], o = 2; o < arguments.length; o++)
                r[o - 2] = arguments[o];
              return rt(e) && rt(t)
                ? (Object.keys(e).forEach(function (s) {
                    if (Oq.call(t, s)) {
                      var a = t[s];
                      if (e[s] !== a) {
                        var l = n.reconciler.apply(n, Ul([t, e, s], r, !1));
                        l !== a && ((t = n.shallowCopyForMerge(t))[s] = l);
                      }
                    } else (t = n.shallowCopyForMerge(t))[s] = e[s];
                  }),
                  t)
                : e;
            }),
            (i.prototype.shallowCopyForMerge = function (t) {
              return (
                rt(t) &&
                  (this.pastCopies.has(t) ||
                    ((t = Array.isArray(t)
                      ? t.slice(0)
                      : C({ __proto__: Object.getPrototypeOf(t) }, t)),
                    this.pastCopies.add(t))),
                t
              );
            }),
            i
          );
        })();
      function Ss(i) {
        return "incremental" in i;
      }
      function tk(i, t) {
        var e = i,
          n = new fr();
        return (
          Ss(t) &&
            Pi(t.incremental) &&
            t.incremental.forEach(function (r) {
              for (var o = r.data, s = r.path, a = s.length - 1; a >= 0; --a) {
                var l = s[a],
                  d = isNaN(+l) ? {} : [];
                (d[l] = o), (o = d);
              }
              e = n.merge(e, o);
            }),
          e
        );
      }
      var B_,
        V_,
        Lq = function () {
          return Object.create(null);
        },
        ik = Array.prototype,
        Bq = ik.forEach,
        Vq = ik.slice,
        wl = (function () {
          function i(t, e) {
            void 0 === t && (t = !0),
              void 0 === e && (e = Lq),
              (this.weakness = t),
              (this.makeData = e);
          }
          return (
            (i.prototype.lookup = function () {
              for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
              return this.lookupArray(t);
            }),
            (i.prototype.lookupArray = function (t) {
              var e = this;
              return (
                Bq.call(t, function (n) {
                  return (e = e.getChildTrie(n));
                }),
                e.data || (e.data = this.makeData(Vq.call(t)))
              );
            }),
            (i.prototype.getChildTrie = function (t) {
              var e =
                  this.weakness &&
                  (function jq(i) {
                    switch (typeof i) {
                      case "object":
                        if (null === i) break;
                      case "function":
                        return !0;
                    }
                    return !1;
                  })(t)
                    ? this.weak || (this.weak = new WeakMap())
                    : this.strong || (this.strong = new Map()),
                n = e.get(t);
              return (
                n || e.set(t, (n = new i(this.weakness, this.makeData))), n
              );
            }),
            i
          );
        })(),
        L_ = (function () {
          function i() {
            (this.known = new (W6 ? WeakSet : Set)()),
              (this.pool = new wl(lo)),
              (this.passes = new WeakMap()),
              (this.keysByJSON = new Map()),
              (this.empty = this.admit({}));
          }
          return (
            (i.prototype.isKnown = function (t) {
              return rt(t) && this.known.has(t);
            }),
            (i.prototype.pass = function (t) {
              if (rt(t)) {
                var e = (function Hq(i) {
                  return rt(i)
                    ? ot(i)
                      ? i.slice(0)
                      : C({ __proto__: Object.getPrototypeOf(i) }, i)
                    : i;
                })(t);
                return this.passes.set(e, t), e;
              }
              return t;
            }),
            (i.prototype.admit = function (t) {
              var e = this;
              if (rt(t)) {
                var n = this.passes.get(t);
                if (n) return n;
                switch (Object.getPrototypeOf(t)) {
                  case Array.prototype:
                    if (this.known.has(t)) return t;
                    var o = t.map(this.admit, this);
                    return (
                      (s = this.pool.lookupArray(o)).array ||
                        (this.known.add((s.array = o)),
                        __DEV__ && Object.freeze(o)),
                      s.array
                    );
                  case null:
                  case Object.prototype:
                    if (this.known.has(t)) return t;
                    var a = Object.getPrototypeOf(t),
                      l = [a],
                      c = this.sortedKeys(t);
                    l.push(c.json);
                    var s,
                      d = l.length;
                    if (
                      (c.sorted.forEach(function (f) {
                        l.push(e.admit(t[f]));
                      }),
                      !(s = this.pool.lookupArray(l)).object)
                    ) {
                      var u = (s.object = Object.create(a));
                      this.known.add(u),
                        c.sorted.forEach(function (f, m) {
                          u[f] = l[d + m];
                        }),
                        __DEV__ && Object.freeze(u);
                    }
                    return s.object;
                }
              }
              return t;
            }),
            (i.prototype.sortedKeys = function (t) {
              var e = Object.keys(t),
                n = this.pool.lookupArray(e);
              if (!n.keys) {
                e.sort();
                var r = JSON.stringify(e);
                (n.keys = this.keysByJSON.get(r)) ||
                  this.keysByJSON.set(r, (n.keys = { sorted: e, json: r }));
              }
              return n.keys;
            }),
            i
          );
        })(),
        co = Object.assign(
          function (i) {
            if (rt(i)) {
              void 0 === B_ && nk();
              var t = B_.admit(i),
                e = V_.get(t);
              return void 0 === e && V_.set(t, (e = JSON.stringify(t))), e;
            }
            return JSON.stringify(i);
          },
          { reset: nk }
        );
      function nk() {
        (B_ = new L_()), (V_ = new (lo ? WeakMap : Map)());
      }
      function j_(i, t, e) {
        return new Be(function (n) {
          var r = n.next,
            o = n.error,
            s = n.complete,
            a = 0,
            l = !1,
            c = {
              then: function (f) {
                return new Promise(function (m) {
                  return m(f());
                });
              },
            };
          function d(f, m) {
            return f
              ? function (p) {
                  ++a;
                  var g = function () {
                    return f(p);
                  };
                  c = c
                    .then(g, g)
                    .then(
                      function (b) {
                        --a, r && r.call(n, b), l && u.complete();
                      },
                      function (b) {
                        throw (--a, b);
                      }
                    )
                    .catch(function (b) {
                      o && o.call(n, b);
                    });
                }
              : function (p) {
                  return m && m.call(n, p);
                };
          }
          var u = {
              next: d(t, r),
              error: d(e, o),
              complete: function () {
                (l = !0), a || (s && s.call(n));
              },
            },
            h = i.subscribe(u);
          return function () {
            return h.unsubscribe();
          };
        });
      }
      function Uu(i) {
        return Pi(H_(i));
      }
      function H_(i) {
        var t = Pi(i.errors) ? i.errors.slice(0) : [];
        return (
          Ss(i) &&
            Pi(i.incremental) &&
            i.incremental.forEach(function (e) {
              e.errors && t.push.apply(t, e.errors);
            }),
          t
        );
      }
      var rk = { kind: xt.FIELD, name: { kind: xt.NAME, value: "__typename" } };
      function ok(i, t) {
        return (
          !i ||
          i.selectionSet.selections.every(function (e) {
            return e.kind === xt.FRAGMENT_SPREAD && ok(t[e.name.value], t);
          })
        );
      }
      function z_(i) {
        return ok(
          bl(i) ||
            (function L6(i) {
              __DEV__
                ? O(
                    "Document" === i.kind,
                    'Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a "gql" tag? http://docs.apollostack.com/apollo-client/core.html#gql'
                  )
                : O("Document" === i.kind, 51),
                __DEV__
                  ? O(
                      i.definitions.length <= 1,
                      "Fragment must have exactly one definition."
                    )
                  : O(i.definitions.length <= 1, 52);
              var t = i.definitions[0];
              return (
                __DEV__
                  ? O(
                      "FragmentDefinition" === t.kind,
                      "Must be a fragment definition."
                    )
                  : O("FragmentDefinition" === t.kind, 53),
                t
              );
            })(i),
          w_(M_(i))
        )
          ? null
          : i;
      }
      function ak(i) {
        var t = new Map();
        return function (n) {
          void 0 === n && (n = i);
          var r = t.get(n);
          return (
            r ||
              t.set(
                n,
                (r = { variables: new Set(), fragmentSpreads: new Set() })
              ),
            r
          );
        };
      }
      function lk(i, t) {
        for (
          var e = ak(""),
            n = ak(""),
            r = function (y) {
              for (var _ = 0, x = void 0; _ < y.length && (x = y[_]); ++_)
                if (!ot(x)) {
                  if (x.kind === xt.OPERATION_DEFINITION)
                    return e(x.name && x.name.value);
                  if (x.kind === xt.FRAGMENT_DEFINITION) return n(x.name.value);
                }
              return (
                __DEV__ && O.error("Could not find operation or fragment"), null
              );
            },
            o = 0,
            s = t.definitions.length - 1;
          s >= 0;
          --s
        )
          t.definitions[s].kind === xt.OPERATION_DEFINITION && ++o;
        var a = (function sk(i) {
            var t = new Set(),
              e = [];
            return (
              i.forEach(function (n) {
                n.name ? t.add(n.name) : n.test && e.push(n.test);
              }),
              function (n) {
                return (
                  t.has(n.name.value) ||
                  e.some(function (r) {
                    return r(n);
                  })
                );
              }
            );
          })(i),
          l = i.some(function (y) {
            return y.remove;
          }),
          c = function (y) {
            return l && y && y.some(a);
          },
          d = new Map(),
          u = !1,
          h = {
            enter: function (y) {
              if (c(y.directives)) return (u = !0), null;
            },
          },
          f = Gn(t, {
            Field: h,
            InlineFragment: h,
            VariableDefinition: {
              enter: function () {
                return !1;
              },
            },
            Variable: {
              enter: function (y, _, x, T, I) {
                var R = r(I);
                R && R.variables.add(y.name.value);
              },
            },
            FragmentSpread: {
              enter: function (y, _, x, T, I) {
                if (c(y.directives)) return (u = !0), null;
                var R = r(I);
                R && R.fragmentSpreads.add(y.name.value);
              },
            },
            FragmentDefinition: {
              enter: function (y, _, x, T) {
                d.set(JSON.stringify(T), y);
              },
              leave: function (y, _, x, T) {
                return y === d.get(JSON.stringify(T))
                  ? y
                  : o > 0 &&
                    y.selectionSet.selections.every(function (R) {
                      return (
                        R.kind === xt.FIELD && "__typename" === R.name.value
                      );
                    })
                  ? ((n(y.name.value).removed = !0), (u = !0), null)
                  : void 0;
              },
            },
            Directive: {
              leave: function (y) {
                if (a(y)) return (u = !0), null;
              },
            },
          });
        if (!u) return t;
        var m = function (y) {
            return (
              y.transitiveVars ||
                ((y.transitiveVars = new Set(y.variables)),
                y.removed ||
                  y.fragmentSpreads.forEach(function (_) {
                    m(n(_)).transitiveVars.forEach(function (x) {
                      y.transitiveVars.add(x);
                    });
                  })),
              y
            );
          },
          p = new Set();
        f.definitions.forEach(function (y) {
          y.kind === xt.OPERATION_DEFINITION
            ? m(e(y.name && y.name.value)).fragmentSpreads.forEach(function (
                _
              ) {
                p.add(_);
              })
            : y.kind === xt.FRAGMENT_DEFINITION &&
              0 === o &&
              !n(y.name.value).removed &&
              p.add(y.name.value);
        }),
          p.forEach(function (y) {
            m(n(y)).fragmentSpreads.forEach(function (_) {
              p.add(_);
            });
          });
        var b = {
          enter: function (y) {
            if (
              (function (y) {
                return !(p.has(y) && !n(y).removed);
              })(y.name.value)
            )
              return null;
          },
        };
        return z_(
          Gn(f, {
            FragmentSpread: b,
            FragmentDefinition: b,
            OperationDefinition: {
              leave: function (y) {
                if (y.variableDefinitions) {
                  var _ = m(e(y.name && y.name.value)).transitiveVars;
                  if (_.size < y.variableDefinitions.length)
                    return C(C({}, y), {
                      variableDefinitions: y.variableDefinitions.filter(
                        function (x) {
                          return _.has(x.variable.name.value);
                        }
                      ),
                    });
                }
              },
            },
          })
        );
      }
      var U_ = Object.assign(
          function (i) {
            return Gn(i, {
              SelectionSet: {
                enter: function (t, e, n) {
                  if (!n || n.kind !== xt.OPERATION_DEFINITION) {
                    var r = t.selections;
                    if (
                      r &&
                      !r.some(function (a) {
                        return (
                          so(a) &&
                          ("__typename" === a.name.value ||
                            0 === a.name.value.lastIndexOf("__", 0))
                        );
                      })
                    ) {
                      var s = n;
                      if (
                        !(
                          so(s) &&
                          s.directives &&
                          s.directives.some(function (a) {
                            return "export" === a.name.value;
                          })
                        )
                      )
                        return C(C({}, t), {
                          selections: Ul(Ul([], r, !0), [rk], !1),
                        });
                    }
                  }
                },
              },
            });
          },
          {
            added: function (i) {
              return i === rk;
            },
          }
        ),
        zq = {
          test: function (i) {
            var t = "connection" === i.name.value;
            return (
              t &&
                (!i.arguments ||
                  !i.arguments.some(function (e) {
                    return "key" === e.name.value;
                  })) &&
                __DEV__ &&
                O.warn(
                  "Removing an @connection directive even though it does not have a key. You may want to use the key parameter to specify a store key."
                ),
              t
            );
          },
        };
      function Wq(i) {
        return "query" === S_(i).operation
          ? i
          : Gn(i, {
              OperationDefinition: {
                enter: function (r) {
                  return C(C({}, r), { operation: "query" });
                },
              },
            });
      }
      var ck = new Map();
      function $_(i) {
        var t = ck.get(i) || 1;
        return (
          ck.set(i, t + 1),
          ""
            .concat(i, ":")
            .concat(t, ":")
            .concat(Math.random().toString(36).slice(2))
        );
      }
      function xl(i, t, e) {
        var n = [];
        i.forEach(function (r) {
          return r[t] && n.push(r);
        }),
          n.forEach(function (r) {
            return r[t](e);
          });
      }
      function dk(i) {
        function t(e) {
          Object.defineProperty(i, e, { value: Be });
        }
        return LT && Symbol.species && t(Symbol.species), t("@@species"), i;
      }
      function uk(i) {
        return i && "function" == typeof i.then;
      }
      var Cl = (function (i) {
        function t(e) {
          var n =
            i.call(this, function (r) {
              return (
                n.addObserver(r),
                function () {
                  return n.removeObserver(r);
                }
              );
            }) || this;
          return (
            (n.observers = new Set()),
            (n.promise = new Promise(function (r, o) {
              (n.resolve = r), (n.reject = o);
            })),
            (n.handlers = {
              next: function (r) {
                null !== n.sub &&
                  ((n.latest = ["next", r]),
                  n.notify("next", r),
                  xl(n.observers, "next", r));
              },
              error: function (r) {
                var o = n.sub;
                null !== o &&
                  (o &&
                    setTimeout(function () {
                      return o.unsubscribe();
                    }),
                  (n.sub = null),
                  (n.latest = ["error", r]),
                  n.reject(r),
                  n.notify("error", r),
                  xl(n.observers, "error", r));
              },
              complete: function () {
                var o = n.sub,
                  s = n.sources;
                if (null !== o) {
                  var l = (void 0 === s ? [] : s).shift();
                  l
                    ? uk(l)
                      ? l.then(function (c) {
                          return (n.sub = c.subscribe(n.handlers));
                        })
                      : (n.sub = l.subscribe(n.handlers))
                    : (o &&
                        setTimeout(function () {
                          return o.unsubscribe();
                        }),
                      (n.sub = null),
                      n.latest && "next" === n.latest[0]
                        ? n.resolve(n.latest[1])
                        : n.resolve(),
                      n.notify("complete"),
                      xl(n.observers, "complete"));
                }
              },
            }),
            (n.nextResultListeners = new Set()),
            (n.cancel = function (r) {
              n.reject(r), (n.sources = []), n.handlers.complete();
            }),
            n.promise.catch(function (r) {}),
            "function" == typeof e && (e = [new Be(e)]),
            uk(e)
              ? e.then(function (r) {
                  return n.start(r);
                }, n.handlers.error)
              : n.start(e),
            n
          );
        }
        return (
          xi(t, i),
          (t.prototype.start = function (e) {
            void 0 === this.sub &&
              ((this.sources = Array.from(e)), this.handlers.complete());
          }),
          (t.prototype.deliverLastMessage = function (e) {
            if (this.latest) {
              var n = this.latest[0],
                r = e[n];
              r && r.call(e, this.latest[1]),
                null === this.sub && "next" === n && e.complete && e.complete();
            }
          }),
          (t.prototype.addObserver = function (e) {
            this.observers.has(e) ||
              (this.deliverLastMessage(e), this.observers.add(e));
          }),
          (t.prototype.removeObserver = function (e) {
            this.observers.delete(e) &&
              this.observers.size < 1 &&
              this.handlers.complete();
          }),
          (t.prototype.notify = function (e, n) {
            var r = this.nextResultListeners;
            r.size &&
              ((this.nextResultListeners = new Set()),
              r.forEach(function (o) {
                return o(e, n);
              }));
          }),
          (t.prototype.beforeNext = function (e) {
            var n = !1;
            this.nextResultListeners.add(function (r, o) {
              n || ((n = !0), e(r, o));
            });
          }),
          t
        );
      })(Be);
      dk(Cl);
      var Ts = (function (i) {
          function t(e) {
            var n = e.graphQLErrors,
              r = e.clientErrors,
              o = e.networkError,
              s = e.errorMessage,
              a = e.extraInfo,
              l = i.call(this, s) || this;
            return (
              (l.name = "ApolloError"),
              (l.graphQLErrors = n || []),
              (l.clientErrors = r || []),
              (l.networkError = o || null),
              (l.message =
                s ||
                (function (i) {
                  var t = "";
                  return (
                    (Pi(i.graphQLErrors) || Pi(i.clientErrors)) &&
                      (i.graphQLErrors || [])
                        .concat(i.clientErrors || [])
                        .forEach(function (n) {
                          t += "".concat(
                            n ? n.message : "Error message not found.",
                            "\n"
                          );
                        }),
                    i.networkError &&
                      (t += "".concat(i.networkError.message, "\n")),
                    (t = t.replace(/\n$/, ""))
                  );
                })(l)),
              (l.extraInfo = a),
              (l.__proto__ = t.prototype),
              l
            );
          }
          return xi(t, i), t;
        })(Error),
        Xq = Object.prototype.toString;
      function hk(i) {
        return G_(i);
      }
      function G_(i, t) {
        switch (Xq.call(i)) {
          case "[object Array]":
            if ((t = t || new Map()).has(i)) return t.get(i);
            var e = i.slice(0);
            return (
              t.set(i, e),
              e.forEach(function (r, o) {
                e[o] = G_(r, t);
              }),
              e
            );
          case "[object Object]":
            if ((t = t || new Map()).has(i)) return t.get(i);
            var n = Object.create(Object.getPrototypeOf(i));
            return (
              t.set(i, n),
              Object.keys(i).forEach(function (r) {
                n[r] = G_(i[r], t);
              }),
              n
            );
          default:
            return i;
        }
      }
      function $u() {
        for (var i = [], t = 0; t < arguments.length; t++) i[t] = arguments[t];
        var e = Object.create(null);
        return (
          i.forEach(function (n) {
            n &&
              Object.keys(n).forEach(function (r) {
                var o = n[r];
                void 0 !== o && (e[r] = o);
              });
          }),
          e
        );
      }
      var Zq = Object.assign,
        Jq = Object.hasOwnProperty,
        q_ = (function (i) {
          function t(e) {
            var n = e.queryManager,
              r = e.queryInfo,
              o = e.options,
              s =
                i.call(this, function (g) {
                  try {
                    var b = g._subscription._observer;
                    b && !b.error && (b.error = eW);
                  } catch {}
                  var y = !s.observers.size;
                  s.observers.add(g);
                  var _ = s.last;
                  return (
                    _ && _.error
                      ? g.error && g.error(_.error)
                      : _ && _.result && g.next && g.next(_.result),
                    y && s.reobserve().catch(function () {}),
                    function () {
                      s.observers.delete(g) &&
                        !s.observers.size &&
                        s.tearDownQuery();
                    }
                  );
                }) || this;
            (s.observers = new Set()),
              (s.subscriptions = new Set()),
              (s.queryInfo = r),
              (s.queryManager = n),
              (s.isTornDown = !1);
            var a = n.defaultOptions.watchQuery,
              c = (void 0 === a ? {} : a).fetchPolicy,
              d = void 0 === c ? "cache-first" : c,
              u = o.fetchPolicy,
              h = void 0 === u ? d : u,
              f = o.initialFetchPolicy,
              m = void 0 === f ? ("standby" === h ? d : h) : f;
            (s.options = C(C({}, o), {
              initialFetchPolicy: m,
              fetchPolicy: h,
            })),
              (s.queryId = r.queryId || n.generateQueryId());
            var p = bl(s.query);
            return (s.queryName = p && p.name && p.name.value), s;
          }
          return (
            xi(t, i),
            Object.defineProperty(t.prototype, "query", {
              get: function () {
                return this.queryManager.transform(this.options.query).document;
              },
              enumerable: !1,
              configurable: !0,
            }),
            Object.defineProperty(t.prototype, "variables", {
              get: function () {
                return this.options.variables;
              },
              enumerable: !1,
              configurable: !0,
            }),
            (t.prototype.result = function () {
              var e = this;
              return new Promise(function (n, r) {
                var o = {
                    next: function (a) {
                      n(a),
                        e.observers.delete(o),
                        e.observers.size ||
                          e.queryManager.removeQuery(e.queryId),
                        setTimeout(function () {
                          s.unsubscribe();
                        }, 0);
                    },
                    error: r,
                  },
                  s = e.subscribe(o);
              });
            }),
            (t.prototype.getCurrentResult = function (e) {
              void 0 === e && (e = !0);
              var n = this.getLastResult(!0),
                r =
                  this.queryInfo.networkStatus ||
                  (n && n.networkStatus) ||
                  Re.ready,
                o = C(C({}, n), { loading: pl(r), networkStatus: r }),
                s = this.options.fetchPolicy,
                a = void 0 === s ? "cache-first" : s;
              if (
                "network-only" !== a &&
                "no-cache" !== a &&
                "standby" !== a &&
                !this.queryManager.transform(this.options.query)
                  .hasForcedResolvers
              ) {
                var l = this.queryInfo.getDiff();
                (l.complete || this.options.returnPartialData) &&
                  (o.data = l.result),
                  Ct(o.data, {}) && (o.data = void 0),
                  l.complete
                    ? (delete o.partial,
                      l.complete &&
                        o.networkStatus === Re.loading &&
                        ("cache-first" === a || "cache-only" === a) &&
                        ((o.networkStatus = Re.ready), (o.loading = !1)))
                    : (o.partial = !0),
                  __DEV__ &&
                    !l.complete &&
                    !this.options.partialRefetch &&
                    !o.loading &&
                    !o.data &&
                    !o.error &&
                    mk(l.missing);
              }
              return e && this.updateLastResult(o), o;
            }),
            (t.prototype.isDifferentFromLastResult = function (e, n) {
              return (
                !this.last ||
                !Ct(this.last.result, e) ||
                (n && !Ct(this.last.variables, n))
              );
            }),
            (t.prototype.getLast = function (e, n) {
              var r = this.last;
              if (r && r[e] && (!n || Ct(r.variables, this.variables)))
                return r[e];
            }),
            (t.prototype.getLastResult = function (e) {
              return this.getLast("result", e);
            }),
            (t.prototype.getLastError = function (e) {
              return this.getLast("error", e);
            }),
            (t.prototype.resetLastResults = function () {
              delete this.last, (this.isTornDown = !1);
            }),
            (t.prototype.resetQueryStoreErrors = function () {
              this.queryManager.resetErrors(this.queryId);
            }),
            (t.prototype.refetch = function (e) {
              var n,
                r = { pollInterval: 0 },
                o = this.options.fetchPolicy;
              if (
                ((r.fetchPolicy =
                  "cache-and-network" === o
                    ? o
                    : "no-cache" === o
                    ? "no-cache"
                    : "network-only"),
                __DEV__ && e && Jq.call(e, "variables"))
              ) {
                var s = OT(this.query),
                  a = s.variableDefinitions;
                (!a ||
                  !a.some(function (l) {
                    return "variables" === l.variable.name.value;
                  })) &&
                  __DEV__ &&
                  O.warn(
                    "Called refetch("
                      .concat(JSON.stringify(e), ") for query ")
                      .concat(
                        (null === (n = s.name) || void 0 === n
                          ? void 0
                          : n.value) || JSON.stringify(s),
                        ", which does not declare a $variables variable.\nDid you mean to call refetch(variables) instead of refetch({ variables })?"
                      )
                  );
              }
              return (
                e &&
                  !Ct(this.options.variables, e) &&
                  (r.variables = this.options.variables =
                    C(C({}, this.options.variables), e)),
                this.queryInfo.resetLastWrite(),
                this.reobserve(r, Re.refetch)
              );
            }),
            (t.prototype.fetchMore = function (e) {
              var n = this,
                r = C(
                  C(
                    {},
                    e.query
                      ? e
                      : C(C(C(C({}, this.options), { query: this.query }), e), {
                          variables: C(
                            C({}, this.options.variables),
                            e.variables
                          ),
                        })
                  ),
                  { fetchPolicy: "no-cache" }
                ),
                o = this.queryManager.generateQueryId(),
                s = this.queryInfo,
                a = s.networkStatus;
              (s.networkStatus = Re.fetchMore),
                r.notifyOnNetworkStatusChange && this.observe();
              var l = new Set();
              return this.queryManager
                .fetchQuery(o, r, Re.fetchMore)
                .then(function (c) {
                  return (
                    n.queryManager.removeQuery(o),
                    s.networkStatus === Re.fetchMore && (s.networkStatus = a),
                    n.queryManager.cache.batch({
                      update: function (d) {
                        var u = e.updateQuery;
                        u
                          ? d.updateQuery(
                              {
                                query: n.query,
                                variables: n.variables,
                                returnPartialData: !0,
                                optimistic: !1,
                              },
                              function (h) {
                                return u(h, {
                                  fetchMoreResult: c.data,
                                  variables: r.variables,
                                });
                              }
                            )
                          : d.writeQuery({
                              query: r.query,
                              variables: r.variables,
                              data: c.data,
                            });
                      },
                      onWatchUpdated: function (d) {
                        l.add(d.query);
                      },
                    }),
                    c
                  );
                })
                .finally(function () {
                  l.has(n.query) || fk(n);
                });
            }),
            (t.prototype.subscribeToMore = function (e) {
              var n = this,
                r = this.queryManager
                  .startGraphQLSubscription({
                    query: e.document,
                    variables: e.variables,
                    context: e.context,
                  })
                  .subscribe({
                    next: function (o) {
                      var s = e.updateQuery;
                      s &&
                        n.updateQuery(function (a, l) {
                          return s(a, {
                            subscriptionData: o,
                            variables: l.variables,
                          });
                        });
                    },
                    error: function (o) {
                      e.onError
                        ? e.onError(o)
                        : __DEV__ &&
                          O.error("Unhandled GraphQL subscription error", o);
                    },
                  });
              return (
                this.subscriptions.add(r),
                function () {
                  n.subscriptions.delete(r) && r.unsubscribe();
                }
              );
            }),
            (t.prototype.setOptions = function (e) {
              return this.reobserve(e);
            }),
            (t.prototype.setVariables = function (e) {
              return Ct(this.variables, e)
                ? this.observers.size
                  ? this.result()
                  : Promise.resolve()
                : ((this.options.variables = e),
                  this.observers.size
                    ? this.reobserve(
                        {
                          fetchPolicy: this.options.initialFetchPolicy,
                          variables: e,
                        },
                        Re.setVariables
                      )
                    : Promise.resolve());
            }),
            (t.prototype.updateQuery = function (e) {
              var n = this.queryManager,
                o = e(
                  n.cache.diff({
                    query: this.options.query,
                    variables: this.variables,
                    returnPartialData: !0,
                    optimistic: !1,
                  }).result,
                  { variables: this.variables }
                );
              o &&
                (n.cache.writeQuery({
                  query: this.options.query,
                  data: o,
                  variables: this.variables,
                }),
                n.broadcastQueries());
            }),
            (t.prototype.startPolling = function (e) {
              (this.options.pollInterval = e), this.updatePolling();
            }),
            (t.prototype.stopPolling = function () {
              (this.options.pollInterval = 0), this.updatePolling();
            }),
            (t.prototype.applyNextFetchPolicy = function (e, n) {
              if (n.nextFetchPolicy) {
                var r = n.fetchPolicy,
                  o = void 0 === r ? "cache-first" : r,
                  s = n.initialFetchPolicy,
                  a = void 0 === s ? o : s;
                "standby" === o ||
                  (n.fetchPolicy =
                    "function" == typeof n.nextFetchPolicy
                      ? n.nextFetchPolicy(o, {
                          reason: e,
                          options: n,
                          observable: this,
                          initialFetchPolicy: a,
                        })
                      : "variables-changed" === e
                      ? a
                      : n.nextFetchPolicy);
              }
              return n.fetchPolicy;
            }),
            (t.prototype.fetch = function (e, n) {
              return (
                this.queryManager.setObservableQuery(this),
                this.queryManager.fetchQueryObservable(this.queryId, e, n)
              );
            }),
            (t.prototype.updatePolling = function () {
              var e = this;
              if (!this.queryManager.ssrMode) {
                var r = this.pollingInfo,
                  o = this.options.pollInterval;
                if (!o)
                  return void (
                    r && (clearTimeout(r.timeout), delete this.pollingInfo)
                  );
                if (!r || r.interval !== o) {
                  __DEV__
                    ? O(
                        o,
                        "Attempted to start a polling query without a polling interval."
                      )
                    : O(o, 13),
                    ((r || (this.pollingInfo = {})).interval = o);
                  var a = function () {
                      e.pollingInfo &&
                        (pl(e.queryInfo.networkStatus)
                          ? l()
                          : e
                              .reobserve(
                                {
                                  fetchPolicy:
                                    "no-cache" === e.options.initialFetchPolicy
                                      ? "no-cache"
                                      : "network-only",
                                },
                                Re.poll
                              )
                              .then(l, l));
                    },
                    l = function () {
                      var c = e.pollingInfo;
                      c &&
                        (clearTimeout(c.timeout),
                        (c.timeout = setTimeout(a, c.interval)));
                    };
                  l();
                }
              }
            }),
            (t.prototype.updateLastResult = function (e, n) {
              return (
                void 0 === n && (n = this.variables),
                (this.last = C(C({}, this.last), {
                  result: this.queryManager.assumeImmutableResults ? e : hk(e),
                  variables: n,
                })),
                Pi(e.errors) || delete this.last.error,
                this.last
              );
            }),
            (t.prototype.reobserve = function (e, n) {
              var r = this;
              this.isTornDown = !1;
              var o = n === Re.refetch || n === Re.fetchMore || n === Re.poll,
                s = this.options.variables,
                a = this.options.fetchPolicy,
                l = $u(this.options, e || {}),
                c = o ? l : Zq(this.options, l);
              o ||
                (this.updatePolling(),
                e &&
                  e.variables &&
                  !Ct(e.variables, s) &&
                  "standby" !== c.fetchPolicy &&
                  c.fetchPolicy === a &&
                  (this.applyNextFetchPolicy("variables-changed", c),
                  void 0 === n && (n = Re.setVariables)));
              var d = c.variables && C({}, c.variables),
                u = this.fetch(c, n),
                h = {
                  next: function (f) {
                    r.reportResult(f, d);
                  },
                  error: function (f) {
                    r.reportError(f, d);
                  },
                };
              return (
                o ||
                  (this.concast &&
                    this.observer &&
                    this.concast.removeObserver(this.observer),
                  (this.concast = u),
                  (this.observer = h)),
                u.addObserver(h),
                u.promise
              );
            }),
            (t.prototype.observe = function () {
              this.reportResult(this.getCurrentResult(!1), this.variables);
            }),
            (t.prototype.reportResult = function (e, n) {
              var r = this.getLastError();
              (r || this.isDifferentFromLastResult(e, n)) &&
                ((r || !e.partial || this.options.returnPartialData) &&
                  this.updateLastResult(e, n),
                xl(this.observers, "next", e));
            }),
            (t.prototype.reportError = function (e, n) {
              var r = C(C({}, this.getLastResult()), {
                error: e,
                errors: e.graphQLErrors,
                networkStatus: Re.error,
                loading: !1,
              });
              this.updateLastResult(r, n),
                xl(this.observers, "error", (this.last.error = e));
            }),
            (t.prototype.hasObservers = function () {
              return this.observers.size > 0;
            }),
            (t.prototype.tearDownQuery = function () {
              this.isTornDown ||
                (this.concast &&
                  this.observer &&
                  (this.concast.removeObserver(this.observer),
                  delete this.concast,
                  delete this.observer),
                this.stopPolling(),
                this.subscriptions.forEach(function (e) {
                  return e.unsubscribe();
                }),
                this.subscriptions.clear(),
                this.queryManager.stopQuery(this.queryId),
                this.observers.clear(),
                (this.isTornDown = !0));
            }),
            t
          );
        })(Be);
      function fk(i) {
        var t = i.options,
          e = t.fetchPolicy,
          n = t.nextFetchPolicy;
        return "cache-and-network" === e || "network-only" === e
          ? i.reobserve({
              fetchPolicy: "cache-first",
              nextFetchPolicy: function () {
                return (
                  (this.nextFetchPolicy = n),
                  "function" == typeof n ? n.apply(this, arguments) : e
                );
              },
            })
          : i.reobserve();
      }
      function eW(i) {
        __DEV__ && O.error("Unhandled error", i.message, i.stack);
      }
      function mk(i) {
        __DEV__ &&
          i &&
          __DEV__ &&
          O.debug("Missing cache result fields: ".concat(JSON.stringify(i)), i);
      }
      function pk(i) {
        return (
          i.kind === xt.FIELD ||
          i.kind === xt.FRAGMENT_SPREAD ||
          i.kind === xt.INLINE_FRAGMENT
        );
      }
      dk(q_);
      var Rt = null,
        _k = {},
        aW = 1;
      function bk(i) {
        try {
          return i();
        } catch {}
      }
      var W_ = "@wry/context:Slot",
        vk =
          bk(function () {
            return globalThis;
          }) ||
          bk(function () {
            return global;
          }) ||
          Object.create(null),
        Gu =
          vk[W_] ||
          Array[W_] ||
          (function (i) {
            try {
              Object.defineProperty(vk, W_, {
                value: i,
                enumerable: !1,
                writable: !1,
                configurable: !0,
              });
            } finally {
              return i;
            }
          })(
            (function () {
              function i() {
                this.id = [
                  "slot",
                  aW++,
                  Date.now(),
                  Math.random().toString(36).slice(2),
                ].join(":");
              }
              return (
                (i.prototype.hasValue = function () {
                  for (var t = Rt; t; t = t.parent)
                    if (this.id in t.slots) {
                      var e = t.slots[this.id];
                      if (e === _k) break;
                      return t !== Rt && (Rt.slots[this.id] = e), !0;
                    }
                  return Rt && (Rt.slots[this.id] = _k), !1;
                }),
                (i.prototype.getValue = function () {
                  if (this.hasValue()) return Rt.slots[this.id];
                }),
                (i.prototype.withValue = function (t, e, n, r) {
                  var o,
                    s = (((o = { __proto__: null })[this.id] = t), o),
                    a = Rt;
                  Rt = { parent: a, slots: s };
                  try {
                    return e.apply(r, n);
                  } finally {
                    Rt = a;
                  }
                }),
                (i.bind = function (t) {
                  var e = Rt;
                  return function () {
                    var n = Rt;
                    try {
                      return (Rt = e), t.apply(this, arguments);
                    } finally {
                      Rt = n;
                    }
                  };
                }),
                (i.noContext = function (t, e, n) {
                  if (!Rt) return t.apply(n, e);
                  var r = Rt;
                  try {
                    return (Rt = null), t.apply(n, e);
                  } finally {
                    Rt = r;
                  }
                }),
                i
              );
            })()
          );
      function hW() {}
      var Y_,
        fW = (function () {
          function i(t, e) {
            void 0 === t && (t = 1 / 0),
              void 0 === e && (e = hW),
              (this.max = t),
              (this.dispose = e),
              (this.map = new Map()),
              (this.newest = null),
              (this.oldest = null);
          }
          return (
            (i.prototype.has = function (t) {
              return this.map.has(t);
            }),
            (i.prototype.get = function (t) {
              var e = this.getNode(t);
              return e && e.value;
            }),
            (i.prototype.getNode = function (t) {
              var e = this.map.get(t);
              if (e && e !== this.newest) {
                var n = e.older,
                  r = e.newer;
                r && (r.older = n),
                  n && (n.newer = r),
                  (e.older = this.newest),
                  (e.older.newer = e),
                  (e.newer = null),
                  (this.newest = e),
                  e === this.oldest && (this.oldest = r);
              }
              return e;
            }),
            (i.prototype.set = function (t, e) {
              var n = this.getNode(t);
              return n
                ? (n.value = e)
                : ((n = { key: t, value: e, newer: null, older: this.newest }),
                  this.newest && (this.newest.newer = n),
                  (this.newest = n),
                  (this.oldest = this.oldest || n),
                  this.map.set(t, n),
                  n.value);
            }),
            (i.prototype.clean = function () {
              for (; this.oldest && this.map.size > this.max; )
                this.delete(this.oldest.key);
            }),
            (i.prototype.delete = function (t) {
              var e = this.map.get(t);
              return (
                !!e &&
                (e === this.newest && (this.newest = e.older),
                e === this.oldest && (this.oldest = e.newer),
                e.newer && (e.newer.older = e.older),
                e.older && (e.older.newer = e.newer),
                this.map.delete(t),
                this.dispose(e.value, t),
                !0)
              );
            }),
            i
          );
        })(),
        qu = new Gu(),
        mW = Object.prototype.hasOwnProperty,
        K_ =
          void 0 === (Y_ = Array.from)
            ? function (i) {
                var t = [];
                return (
                  i.forEach(function (e) {
                    return t.push(e);
                  }),
                  t
                );
              }
            : Y_;
      function Wu(i) {
        var t = i.unsubscribe;
        "function" == typeof t && ((i.unsubscribe = void 0), t());
      }
      var Dl = [];
      function ks(i, t) {
        if (!i) throw new Error(t || "assertion failure");
      }
      function wk(i) {
        switch (i.length) {
          case 0:
            throw new Error("unknown value");
          case 1:
            return i[0];
          case 2:
            throw i[1];
        }
      }
      var bW = (function () {
        function i(t) {
          (this.fn = t),
            (this.parents = new Set()),
            (this.childValues = new Map()),
            (this.dirtyChildren = null),
            (this.dirty = !0),
            (this.recomputing = !1),
            (this.value = []),
            (this.deps = null),
            ++i.count;
        }
        return (
          (i.prototype.peek = function () {
            if (1 === this.value.length && !mr(this))
              return xk(this), this.value[0];
          }),
          (i.prototype.recompute = function (t) {
            return (
              ks(!this.recomputing, "already recomputing"),
              xk(this),
              mr(this)
                ? (function vW(i, t) {
                    return (
                      Tk(i),
                      qu.withValue(i, yW, [i, t]),
                      (function xW(i, t) {
                        if ("function" == typeof i.subscribe)
                          try {
                            Wu(i), (i.unsubscribe = i.subscribe.apply(null, t));
                          } catch {
                            return i.setDirty(), !1;
                          }
                        return !0;
                      })(i, t) &&
                        (function wW(i) {
                          (i.dirty = !1), !mr(i) && Dk(i);
                        })(i),
                      wk(i.value)
                    );
                  })(this, t)
                : wk(this.value)
            );
          }),
          (i.prototype.setDirty = function () {
            this.dirty ||
              ((this.dirty = !0), (this.value.length = 0), Ck(this), Wu(this));
          }),
          (i.prototype.dispose = function () {
            var t = this;
            this.setDirty(),
              Tk(this),
              X_(this, function (e, n) {
                e.setDirty(), kk(e, t);
              });
          }),
          (i.prototype.forget = function () {
            this.dispose();
          }),
          (i.prototype.dependOn = function (t) {
            t.add(this),
              this.deps || (this.deps = Dl.pop() || new Set()),
              this.deps.add(t);
          }),
          (i.prototype.forgetDeps = function () {
            var t = this;
            this.deps &&
              (K_(this.deps).forEach(function (e) {
                return e.delete(t);
              }),
              this.deps.clear(),
              Dl.push(this.deps),
              (this.deps = null));
          }),
          (i.count = 0),
          i
        );
      })();
      function xk(i) {
        var t = qu.getValue();
        if (t)
          return (
            i.parents.add(t),
            t.childValues.has(i) || t.childValues.set(i, []),
            mr(i) ? Ek(t, i) : Mk(t, i),
            t
          );
      }
      function yW(i, t) {
        (i.recomputing = !0), (i.value.length = 0);
        try {
          i.value[0] = i.fn.apply(null, t);
        } catch (e) {
          i.value[1] = e;
        }
        i.recomputing = !1;
      }
      function mr(i) {
        return i.dirty || !(!i.dirtyChildren || !i.dirtyChildren.size);
      }
      function Ck(i) {
        X_(i, Ek);
      }
      function Dk(i) {
        X_(i, Mk);
      }
      function X_(i, t) {
        var e = i.parents.size;
        if (e) for (var n = K_(i.parents), r = 0; r < e; ++r) t(n[r], i);
      }
      function Ek(i, t) {
        ks(i.childValues.has(t)), ks(mr(t));
        var e = !mr(i);
        if (i.dirtyChildren) {
          if (i.dirtyChildren.has(t)) return;
        } else i.dirtyChildren = Dl.pop() || new Set();
        i.dirtyChildren.add(t), e && Ck(i);
      }
      function Mk(i, t) {
        ks(i.childValues.has(t)), ks(!mr(t));
        var e = i.childValues.get(t);
        0 === e.length
          ? i.childValues.set(
              t,
              (function _W(i) {
                return i.slice(0);
              })(t.value)
            )
          : (function gW(i, t) {
              var e = i.length;
              return e > 0 && e === t.length && i[e - 1] === t[e - 1];
            })(e, t.value) || i.setDirty(),
          Sk(i, t),
          !mr(i) && Dk(i);
      }
      function Sk(i, t) {
        var e = i.dirtyChildren;
        e &&
          (e.delete(t),
          0 === e.size &&
            (Dl.length < 100 && Dl.push(e), (i.dirtyChildren = null)));
      }
      function Tk(i) {
        i.childValues.size > 0 &&
          i.childValues.forEach(function (t, e) {
            kk(i, e);
          }),
          i.forgetDeps(),
          ks(null === i.dirtyChildren);
      }
      function kk(i, t) {
        t.parents.delete(i), i.childValues.delete(t), Sk(i, t);
      }
      var CW = { setDirty: !0, dispose: !0, forget: !0 };
      function Ik(i) {
        var t = new Map(),
          e = i && i.subscribe;
        function n(r) {
          var o = qu.getValue();
          if (o) {
            var s = t.get(r);
            s || t.set(r, (s = new Set())),
              o.dependOn(s),
              "function" == typeof e && (Wu(s), (s.unsubscribe = e(r)));
          }
        }
        return (
          (n.dirty = function (o, s) {
            var a = t.get(o);
            if (a) {
              var l = s && mW.call(CW, s) ? s : "setDirty";
              K_(a).forEach(function (c) {
                return c[l]();
              }),
                t.delete(o),
                Wu(a);
            }
          }),
          n
        );
      }
      function Ak() {
        var i = new wl("function" == typeof WeakMap);
        return function () {
          return i.lookupArray(arguments);
        };
      }
      Ak();
      var Z_ = new Set();
      function Qu(i, t) {
        void 0 === t && (t = Object.create(null));
        var e = new fW(t.max || Math.pow(2, 16), function (c) {
            return c.dispose();
          }),
          n = t.keyArgs,
          r = t.makeCacheKey || Ak(),
          o = function () {
            var c = r.apply(null, n ? n.apply(null, arguments) : arguments);
            if (void 0 === c) return i.apply(null, arguments);
            var d = e.get(c);
            d ||
              (e.set(c, (d = new bW(i))),
              (d.subscribe = t.subscribe),
              (d.forget = function () {
                return e.delete(c);
              }));
            var u = d.recompute(Array.prototype.slice.call(arguments));
            return (
              e.set(c, d),
              Z_.add(e),
              qu.hasValue() ||
                (Z_.forEach(function (h) {
                  return h.clean();
                }),
                Z_.clear()),
              u
            );
          };
        function s(c) {
          var d = e.get(c);
          d && d.setDirty();
        }
        function a(c) {
          var d = e.get(c);
          if (d) return d.peek();
        }
        function l(c) {
          return e.delete(c);
        }
        return (
          Object.defineProperty(o, "size", {
            get: function () {
              return e.map.size;
            },
            configurable: !1,
            enumerable: !1,
          }),
          (o.dirtyKey = s),
          (o.dirty = function () {
            s(r.apply(null, arguments));
          }),
          (o.peekKey = a),
          (o.peek = function () {
            return a(r.apply(null, arguments));
          }),
          (o.forgetKey = l),
          (o.forget = function () {
            return l(r.apply(null, arguments));
          }),
          (o.makeCacheKey = r),
          (o.getKey = n
            ? function () {
                return r.apply(null, n.apply(null, arguments));
              }
            : r),
          Object.freeze(o)
        );
      }
      var J_ = new Gu(),
        Rk = new WeakMap();
      function El(i) {
        var t = Rk.get(i);
        return t || Rk.set(i, (t = { vars: new Set(), dep: Ik() })), t;
      }
      function Ok(i) {
        El(i).vars.forEach(function (t) {
          return t.forgetCache(i);
        });
      }
      function EW(i) {
        var t = new Set(),
          e = new Set(),
          n = function (o) {
            if (arguments.length > 0) {
              if (i !== o) {
                (i = o),
                  t.forEach(function (l) {
                    El(l).dep.dirty(n), MW(l);
                  });
                var s = Array.from(e);
                e.clear(),
                  s.forEach(function (l) {
                    return l(i);
                  });
              }
            } else {
              var a = J_.getValue();
              a && (r(a), El(a).dep(n));
            }
            return i;
          };
        n.onNextChange = function (o) {
          return (
            e.add(o),
            function () {
              e.delete(o);
            }
          );
        };
        var r = (n.attachCache = function (o) {
          return t.add(o), El(o).vars.add(n), n;
        });
        return (
          (n.forgetCache = function (o) {
            return t.delete(o);
          }),
          n
        );
      }
      function MW(i) {
        i.broadcastWatches && i.broadcastWatches();
      }
      var Fk = (function () {
          function i(t) {
            var e = t.cache,
              n = t.client,
              r = t.resolvers,
              o = t.fragmentMatcher;
            (this.selectionsToResolveCache = new WeakMap()),
              (this.cache = e),
              n && (this.client = n),
              r && this.addResolvers(r),
              o && this.setFragmentMatcher(o);
          }
          return (
            (i.prototype.addResolvers = function (t) {
              var e = this;
              (this.resolvers = this.resolvers || {}),
                Array.isArray(t)
                  ? t.forEach(function (n) {
                      e.resolvers = ek(e.resolvers, n);
                    })
                  : (this.resolvers = ek(this.resolvers, t));
            }),
            (i.prototype.setResolvers = function (t) {
              (this.resolvers = {}), this.addResolvers(t);
            }),
            (i.prototype.getResolvers = function () {
              return this.resolvers || {};
            }),
            (i.prototype.runResolvers = function (t) {
              var e = t.document,
                n = t.remoteResult,
                r = t.context,
                o = t.variables,
                s = t.onlyRunForcedResolvers,
                a = void 0 !== s && s;
              return xn(this, void 0, void 0, function () {
                return Kn(this, function (l) {
                  return e
                    ? [
                        2,
                        this.resolveDocument(
                          e,
                          n.data,
                          r,
                          o,
                          this.fragmentMatcher,
                          a
                        ).then(function (c) {
                          return C(C({}, n), { data: c.result });
                        }),
                      ]
                    : [2, n];
                });
              });
            }),
            (i.prototype.setFragmentMatcher = function (t) {
              this.fragmentMatcher = t;
            }),
            (i.prototype.getFragmentMatcher = function () {
              return this.fragmentMatcher;
            }),
            (i.prototype.clientQuery = function (t) {
              return yl(["client"], t) && this.resolvers ? t : null;
            }),
            (i.prototype.serverQuery = function (t) {
              return (function Qq(i) {
                return (
                  Bu(i),
                  lk(
                    [
                      {
                        test: function (e) {
                          return "client" === e.name.value;
                        },
                        remove: !0,
                      },
                    ],
                    i
                  )
                );
              })(t);
            }),
            (i.prototype.prepareContext = function (t) {
              var e = this.cache;
              return C(C({}, t), {
                cache: e,
                getCacheKey: function (n) {
                  return e.identify(n);
                },
              });
            }),
            (i.prototype.addExportedVariables = function (t, e, n) {
              return (
                void 0 === e && (e = {}),
                void 0 === n && (n = {}),
                xn(this, void 0, void 0, function () {
                  return Kn(this, function (r) {
                    return t
                      ? [
                          2,
                          this.resolveDocument(
                            t,
                            this.buildRootValueFromCache(t, e) || {},
                            this.prepareContext(n),
                            e
                          ).then(function (o) {
                            return C(C({}, e), o.exportedVariables);
                          }),
                        ]
                      : [2, C({}, e)];
                  });
                })
              );
            }),
            (i.prototype.shouldForceResolvers = function (t) {
              var e = !1;
              return (
                Gn(t, {
                  Directive: {
                    enter: function (n) {
                      if (
                        "client" === n.name.value &&
                        n.arguments &&
                        (e = n.arguments.some(function (r) {
                          return (
                            "always" === r.name.value &&
                            "BooleanValue" === r.value.kind &&
                            !0 === r.value.value
                          );
                        }))
                      )
                        return ao;
                    },
                  },
                }),
                e
              );
            }),
            (i.prototype.buildRootValueFromCache = function (t, e) {
              return this.cache.diff({
                query: Wq(t),
                variables: e,
                returnPartialData: !0,
                optimistic: !1,
              }).result;
            }),
            (i.prototype.resolveDocument = function (t, e, n, r, o, s) {
              return (
                void 0 === n && (n = {}),
                void 0 === r && (r = {}),
                void 0 === o &&
                  (o = function () {
                    return !0;
                  }),
                void 0 === s && (s = !1),
                xn(this, void 0, void 0, function () {
                  var a, l, c, d, u, h, f, m, p, g;
                  return Kn(this, function (y) {
                    return (
                      (a = S_(t)),
                      (l = M_(t)),
                      (c = w_(l)),
                      (d = this.collectSelectionsToResolve(a, c)),
                      (h = (u = a.operation)
                        ? u.charAt(0).toUpperCase() + u.slice(1)
                        : "Query"),
                      (m = (f = this).cache),
                      (p = f.client),
                      (g = {
                        fragmentMap: c,
                        context: C(C({}, n), { cache: m, client: p }),
                        variables: r,
                        fragmentMatcher: o,
                        defaultOperationType: h,
                        exportedVariables: {},
                        selectionsToResolve: d,
                        onlyRunForcedResolvers: s,
                      }),
                      [
                        2,
                        this.resolveSelectionSet(a.selectionSet, !1, e, g).then(
                          function (_) {
                            return {
                              result: _,
                              exportedVariables: g.exportedVariables,
                            };
                          }
                        ),
                      ]
                    );
                  });
                })
              );
            }),
            (i.prototype.resolveSelectionSet = function (t, e, n, r) {
              return xn(this, void 0, void 0, function () {
                var o,
                  s,
                  a,
                  l,
                  c,
                  d = this;
                return Kn(this, function (u) {
                  return (
                    (o = r.fragmentMap),
                    (s = r.context),
                    (a = r.variables),
                    (l = [n]),
                    (c = function (h) {
                      return xn(d, void 0, void 0, function () {
                        var f;
                        return Kn(this, function (p) {
                          return (e || r.selectionsToResolve.has(h)) && ju(h, a)
                            ? so(h)
                              ? [
                                  2,
                                  this.resolveField(h, e, n, r).then(function (
                                    g
                                  ) {
                                    var b;
                                    typeof g < "u" &&
                                      l.push((((b = {})[oo(h)] = g), b));
                                  }),
                                ]
                              : ((function N6(i) {
                                  return "InlineFragment" === i.kind;
                                })(h)
                                  ? (f = h)
                                  : ((f = o[h.name.value]),
                                    __DEV__
                                      ? O(
                                          f,
                                          "No fragment named ".concat(
                                            h.name.value
                                          )
                                        )
                                      : O(f, 11)),
                                f &&
                                f.typeCondition &&
                                r.fragmentMatcher(
                                  n,
                                  f.typeCondition.name.value,
                                  s
                                )
                                  ? [
                                      2,
                                      this.resolveSelectionSet(
                                        f.selectionSet,
                                        e,
                                        n,
                                        r
                                      ).then(function (g) {
                                        l.push(g);
                                      }),
                                    ]
                                  : [2])
                            : [2];
                        });
                      });
                    }),
                    [
                      2,
                      Promise.all(t.selections.map(c)).then(function () {
                        return N_(l);
                      }),
                    ]
                  );
                });
              });
            }),
            (i.prototype.resolveField = function (t, e, n, r) {
              return xn(this, void 0, void 0, function () {
                var o,
                  s,
                  a,
                  l,
                  c,
                  d,
                  u,
                  h,
                  f,
                  m = this;
                return Kn(this, function (p) {
                  return n
                    ? ((o = r.variables),
                      (s = t.name.value),
                      (a = oo(t)),
                      (l = s !== a),
                      (c = n[a] || n[s]),
                      (d = Promise.resolve(c)),
                      (!r.onlyRunForcedResolvers ||
                        this.shouldForceResolvers(t)) &&
                        ((u = n.__typename || r.defaultOperationType),
                        (h = this.resolvers && this.resolvers[u]) &&
                          (f = h[l ? s : a]) &&
                          (d = Promise.resolve(
                            J_.withValue(this.cache, f, [
                              n,
                              Lu(t, o),
                              r.context,
                              { field: t, fragmentMap: r.fragmentMap },
                            ])
                          ))),
                      [
                        2,
                        d.then(function (g) {
                          var b, y;
                          if (
                            (void 0 === g && (g = c),
                            t.directives &&
                              t.directives.forEach(function (x) {
                                "export" === x.name.value &&
                                  x.arguments &&
                                  x.arguments.forEach(function (T) {
                                    "as" === T.name.value &&
                                      "StringValue" === T.value.kind &&
                                      (r.exportedVariables[T.value.value] = g);
                                  });
                              }),
                            !t.selectionSet || null == g)
                          )
                            return g;
                          var _ =
                            null !==
                              (y =
                                null === (b = t.directives) || void 0 === b
                                  ? void 0
                                  : b.some(function (x) {
                                      return "client" === x.name.value;
                                    })) &&
                            void 0 !== y &&
                            y;
                          return Array.isArray(g)
                            ? m.resolveSubSelectedArray(t, e || _, g, r)
                            : t.selectionSet
                            ? m.resolveSelectionSet(
                                t.selectionSet,
                                e || _,
                                g,
                                r
                              )
                            : void 0;
                        }),
                      ])
                    : [2, null];
                });
              });
            }),
            (i.prototype.resolveSubSelectedArray = function (t, e, n, r) {
              var o = this;
              return Promise.all(
                n.map(function (s) {
                  return null === s
                    ? null
                    : Array.isArray(s)
                    ? o.resolveSubSelectedArray(t, e, s, r)
                    : t.selectionSet
                    ? o.resolveSelectionSet(t.selectionSet, e, s, r)
                    : void 0;
                })
              );
            }),
            (i.prototype.collectSelectionsToResolve = function (t, e) {
              var n = function (s) {
                  return !Array.isArray(s);
                },
                r = this.selectionsToResolveCache;
              return (function o(s) {
                if (!r.has(s)) {
                  var a = new Set();
                  r.set(s, a),
                    Gn(s, {
                      Directive: function (l, c, d, u, h) {
                        "client" === l.name.value &&
                          h.forEach(function (f) {
                            n(f) && pk(f) && a.add(f);
                          });
                      },
                      FragmentSpread: function (l, c, d, u, h) {
                        var f = e[l.name.value];
                        __DEV__
                          ? O(f, "No fragment named ".concat(l.name.value))
                          : O(f, 12);
                        var m = o(f);
                        m.size > 0 &&
                          (h.forEach(function (p) {
                            n(p) && pk(p) && a.add(p);
                          }),
                          a.add(l),
                          m.forEach(function (p) {
                            a.add(p);
                          }));
                      },
                    });
                }
                return r.get(s);
              })(t);
            }),
            i
          );
        })(),
        Is = new (lo ? WeakMap : Map)();
      function eb(i, t) {
        var e = i[t];
        "function" == typeof e &&
          (i[t] = function () {
            return Is.set(i, (Is.get(i) + 1) % 1e15), e.apply(this, arguments);
          });
      }
      function Pk(i) {
        i.notifyTimeout &&
          (clearTimeout(i.notifyTimeout), (i.notifyTimeout = void 0));
      }
      var tb = (function () {
        function i(t, e) {
          void 0 === e && (e = t.generateQueryId()),
            (this.queryId = e),
            (this.listeners = new Set()),
            (this.document = null),
            (this.lastRequestId = 1),
            (this.subscriptions = new Set()),
            (this.stopped = !1),
            (this.dirty = !1),
            (this.observableQuery = null);
          var n = (this.cache = t.cache);
          Is.has(n) ||
            (Is.set(n, 0), eb(n, "evict"), eb(n, "modify"), eb(n, "reset"));
        }
        return (
          (i.prototype.init = function (t) {
            var e = t.networkStatus || Re.loading;
            return (
              this.variables &&
                this.networkStatus !== Re.loading &&
                !Ct(this.variables, t.variables) &&
                (e = Re.setVariables),
              Ct(t.variables, this.variables) || (this.lastDiff = void 0),
              Object.assign(this, {
                document: t.document,
                variables: t.variables,
                networkError: null,
                graphQLErrors: this.graphQLErrors || [],
                networkStatus: e,
              }),
              t.observableQuery && this.setObservableQuery(t.observableQuery),
              t.lastRequestId && (this.lastRequestId = t.lastRequestId),
              this
            );
          }),
          (i.prototype.reset = function () {
            Pk(this), (this.dirty = !1);
          }),
          (i.prototype.getDiff = function (t) {
            void 0 === t && (t = this.variables);
            var e = this.getDiffOptions(t);
            if (this.lastDiff && Ct(e, this.lastDiff.options))
              return this.lastDiff.diff;
            this.updateWatch((this.variables = t));
            var n = this.observableQuery;
            if (n && "no-cache" === n.options.fetchPolicy)
              return { complete: !1 };
            var r = this.cache.diff(e);
            return this.updateLastDiff(r, e), r;
          }),
          (i.prototype.updateLastDiff = function (t, e) {
            this.lastDiff = t
              ? { diff: t, options: e || this.getDiffOptions() }
              : void 0;
          }),
          (i.prototype.getDiffOptions = function (t) {
            var e;
            return (
              void 0 === t && (t = this.variables),
              {
                query: this.document,
                variables: t,
                returnPartialData: !0,
                optimistic: !0,
                canonizeResults:
                  null === (e = this.observableQuery) || void 0 === e
                    ? void 0
                    : e.options.canonizeResults,
              }
            );
          }),
          (i.prototype.setDiff = function (t) {
            var e = this,
              n = this.lastDiff && this.lastDiff.diff;
            this.updateLastDiff(t),
              !this.dirty &&
                !Ct(n && n.result, t && t.result) &&
                ((this.dirty = !0),
                this.notifyTimeout ||
                  (this.notifyTimeout = setTimeout(function () {
                    return e.notify();
                  }, 0)));
          }),
          (i.prototype.setObservableQuery = function (t) {
            var e = this;
            t !== this.observableQuery &&
              (this.oqListener && this.listeners.delete(this.oqListener),
              (this.observableQuery = t),
              t
                ? ((t.queryInfo = this),
                  this.listeners.add(
                    (this.oqListener = function () {
                      e.getDiff().fromOptimisticTransaction
                        ? t.observe()
                        : fk(t);
                    })
                  ))
                : delete this.oqListener);
          }),
          (i.prototype.notify = function () {
            var t = this;
            Pk(this),
              this.shouldNotify() &&
                this.listeners.forEach(function (e) {
                  return e(t);
                }),
              (this.dirty = !1);
          }),
          (i.prototype.shouldNotify = function () {
            if (!this.dirty || !this.listeners.size) return !1;
            if (pl(this.networkStatus) && this.observableQuery) {
              var t = this.observableQuery.options.fetchPolicy;
              if ("cache-only" !== t && "cache-and-network" !== t) return !1;
            }
            return !0;
          }),
          (i.prototype.stop = function () {
            if (!this.stopped) {
              (this.stopped = !0),
                this.reset(),
                this.cancel(),
                (this.cancel = i.prototype.cancel),
                this.subscriptions.forEach(function (e) {
                  return e.unsubscribe();
                });
              var t = this.observableQuery;
              t && t.stopPolling();
            }
          }),
          (i.prototype.cancel = function () {}),
          (i.prototype.updateWatch = function (t) {
            var e = this;
            void 0 === t && (t = this.variables);
            var n = this.observableQuery;
            if (!n || "no-cache" !== n.options.fetchPolicy) {
              var r = C(C({}, this.getDiffOptions(t)), {
                watcher: this,
                callback: function (o) {
                  return e.setDiff(o);
                },
              });
              (!this.lastWatch || !Ct(r, this.lastWatch)) &&
                (this.cancel(),
                (this.cancel = this.cache.watch((this.lastWatch = r))));
            }
          }),
          (i.prototype.resetLastWrite = function () {
            this.lastWrite = void 0;
          }),
          (i.prototype.shouldWrite = function (t, e) {
            var n = this.lastWrite;
            return !(
              n &&
              n.dmCount === Is.get(this.cache) &&
              Ct(e, n.variables) &&
              Ct(t.data, n.result.data)
            );
          }),
          (i.prototype.markResult = function (t, e, n, r) {
            var o = this,
              s = new fr(),
              a = Pi(t.errors) ? t.errors.slice(0) : [];
            if ((this.reset(), "incremental" in t && Pi(t.incremental))) {
              var l = tk(this.getDiff().result, t);
              t.data = l;
            } else if ("hasNext" in t && t.hasNext) {
              var c = this.getDiff();
              t.data = s.merge(c.result, t.data);
            }
            (this.graphQLErrors = a),
              "no-cache" === n.fetchPolicy
                ? this.updateLastDiff(
                    { result: t.data, complete: !0 },
                    this.getDiffOptions(n.variables)
                  )
                : 0 !== r &&
                  (ib(t, n.errorPolicy)
                    ? this.cache.performTransaction(function (d) {
                        if (o.shouldWrite(t, n.variables))
                          d.writeQuery({
                            query: e,
                            data: t.data,
                            variables: n.variables,
                            overwrite: 1 === r,
                          }),
                            (o.lastWrite = {
                              result: t,
                              variables: n.variables,
                              dmCount: Is.get(o.cache),
                            });
                        else if (o.lastDiff && o.lastDiff.diff.complete)
                          return void (t.data = o.lastDiff.diff.result);
                        var u = o.getDiffOptions(n.variables),
                          h = d.diff(u);
                        o.stopped || o.updateWatch(n.variables),
                          o.updateLastDiff(h, u),
                          h.complete && (t.data = h.result);
                      })
                    : (this.lastWrite = void 0));
          }),
          (i.prototype.markReady = function () {
            return (this.networkError = null), (this.networkStatus = Re.ready);
          }),
          (i.prototype.markError = function (t) {
            return (
              (this.networkStatus = Re.error),
              (this.lastWrite = void 0),
              this.reset(),
              t.graphQLErrors && (this.graphQLErrors = t.graphQLErrors),
              t.networkError && (this.networkError = t.networkError),
              t
            );
          }),
          i
        );
      })();
      function ib(i, t) {
        void 0 === t && (t = "none");
        var e = "ignore" === t || "all" === t,
          n = !Uu(i);
        return !n && e && i.data && (n = !0), n;
      }
      var SW = Object.prototype.hasOwnProperty,
        TW = (function () {
          function i(t) {
            var e = t.cache,
              n = t.link,
              r = t.defaultOptions,
              o = t.queryDeduplication,
              s = void 0 !== o && o,
              a = t.onBroadcast,
              l = t.ssrMode,
              c = void 0 !== l && l,
              d = t.clientAwareness,
              u = void 0 === d ? {} : d,
              h = t.localState,
              f = t.assumeImmutableResults;
            (this.clientAwareness = {}),
              (this.queries = new Map()),
              (this.fetchCancelFns = new Map()),
              (this.transformCache = new (lo ? WeakMap : Map)()),
              (this.queryIdCounter = 1),
              (this.requestIdCounter = 1),
              (this.mutationIdCounter = 1),
              (this.inFlightLinkObservables = new Map()),
              (this.cache = e),
              (this.link = n),
              (this.defaultOptions = r || Object.create(null)),
              (this.queryDeduplication = s),
              (this.clientAwareness = u),
              (this.localState = h || new Fk({ cache: e })),
              (this.ssrMode = c),
              (this.assumeImmutableResults = !!f),
              (this.onBroadcast = a) &&
                (this.mutationStore = Object.create(null));
          }
          return (
            (i.prototype.stop = function () {
              var t = this;
              this.queries.forEach(function (e, n) {
                t.stopQueryNoBroadcast(n);
              }),
                this.cancelPendingFetches(
                  __DEV__
                    ? new Ce("QueryManager stopped while query was in flight")
                    : new Ce(14)
                );
            }),
            (i.prototype.cancelPendingFetches = function (t) {
              this.fetchCancelFns.forEach(function (e) {
                return e(t);
              }),
                this.fetchCancelFns.clear();
            }),
            (i.prototype.mutate = function (t) {
              var e,
                n,
                r = t.mutation,
                o = t.variables,
                s = t.optimisticResponse,
                a = t.updateQueries,
                l = t.refetchQueries,
                c = void 0 === l ? [] : l,
                d = t.awaitRefetchQueries,
                u = void 0 !== d && d,
                h = t.update,
                f = t.onQueryUpdated,
                m = t.fetchPolicy,
                p =
                  void 0 === m
                    ? (null === (e = this.defaultOptions.mutate) || void 0 === e
                        ? void 0
                        : e.fetchPolicy) || "network-only"
                    : m,
                g = t.errorPolicy,
                b =
                  void 0 === g
                    ? (null === (n = this.defaultOptions.mutate) || void 0 === n
                        ? void 0
                        : n.errorPolicy) || "none"
                    : g,
                y = t.keepRootFields,
                _ = t.context;
              return xn(this, void 0, void 0, function () {
                var x, T, R, z, De;
                return Kn(this, function (Oe) {
                  switch (Oe.label) {
                    case 0:
                      return (
                        __DEV__
                          ? O(
                              r,
                              "mutation option is required. You must specify your GraphQL document in the mutation option."
                            )
                          : O(r, 15),
                        __DEV__
                          ? O(
                              "network-only" === p || "no-cache" === p,
                              "Mutations support only 'network-only' or 'no-cache' fetchPolicy strings. The default `network-only` behavior automatically writes mutation results to the cache. Passing `no-cache` skips the cache write."
                            )
                          : O("network-only" === p || "no-cache" === p, 16),
                        (x = this.generateMutationId()),
                        (T = this.transform(r)),
                        (R = T.hasClientExports),
                        (r = this.cache.transformForLink(T.document)),
                        (o = this.getVariables(r, o)),
                        R
                          ? [4, this.localState.addExportedVariables(r, o, _)]
                          : [3, 2]
                      );
                    case 1:
                      (o = Oe.sent()), (Oe.label = 2);
                    case 2:
                      return (
                        (z =
                          this.mutationStore &&
                          (this.mutationStore[x] = {
                            mutation: r,
                            variables: o,
                            loading: !0,
                            error: null,
                          })),
                        s &&
                          this.markMutationOptimistic(s, {
                            mutationId: x,
                            document: r,
                            variables: o,
                            fetchPolicy: p,
                            errorPolicy: b,
                            context: _,
                            updateQueries: a,
                            update: h,
                            keepRootFields: y,
                          }),
                        this.broadcastQueries(),
                        (De = this),
                        [
                          2,
                          new Promise(function (wn, Ni) {
                            return j_(
                              De.getObservableFromLink(
                                r,
                                C(C({}, _), { optimisticResponse: s }),
                                o,
                                !1
                              ),
                              function (st) {
                                if (Uu(st) && "none" === b)
                                  throw new Ts({ graphQLErrors: H_(st) });
                                z && ((z.loading = !1), (z.error = null));
                                var Qn = C({}, st);
                                return (
                                  "function" == typeof c && (c = c(Qn)),
                                  "ignore" === b && Uu(Qn) && delete Qn.errors,
                                  De.markMutationResult({
                                    mutationId: x,
                                    result: Qn,
                                    document: r,
                                    variables: o,
                                    fetchPolicy: p,
                                    errorPolicy: b,
                                    context: _,
                                    update: h,
                                    updateQueries: a,
                                    awaitRefetchQueries: u,
                                    refetchQueries: c,
                                    removeOptimistic: s ? x : void 0,
                                    onQueryUpdated: f,
                                    keepRootFields: y,
                                  })
                                );
                              }
                            ).subscribe({
                              next: function (st) {
                                De.broadcastQueries(),
                                  (!("hasNext" in st) || !1 === st.hasNext) &&
                                    wn(st);
                              },
                              error: function (st) {
                                z && ((z.loading = !1), (z.error = st)),
                                  s && De.cache.removeOptimistic(x),
                                  De.broadcastQueries(),
                                  Ni(
                                    st instanceof Ts
                                      ? st
                                      : new Ts({ networkError: st })
                                  );
                              },
                            });
                          }),
                        ]
                      );
                  }
                });
              });
            }),
            (i.prototype.markMutationResult = function (t, e) {
              var n = this;
              void 0 === e && (e = this.cache);
              var r = t.result,
                o = [],
                s = "no-cache" === t.fetchPolicy;
              if (!s && ib(r, t.errorPolicy)) {
                if (
                  (Ss(r) ||
                    o.push({
                      result: r.data,
                      dataId: "ROOT_MUTATION",
                      query: t.document,
                      variables: t.variables,
                    }),
                  Ss(r) && Pi(r.incremental))
                ) {
                  var a = e.diff({
                      id: "ROOT_MUTATION",
                      query: this.transform(t.document).asQuery,
                      variables: t.variables,
                      optimistic: !1,
                      returnPartialData: !0,
                    }),
                    l = void 0;
                  a.result && (l = tk(a.result, r)),
                    typeof l < "u" &&
                      ((r.data = l),
                      o.push({
                        result: l,
                        dataId: "ROOT_MUTATION",
                        query: t.document,
                        variables: t.variables,
                      }));
                }
                var c = t.updateQueries;
                c &&
                  this.queries.forEach(function (u, h) {
                    var f = u.observableQuery,
                      m = f && f.queryName;
                    if (m && SW.call(c, m)) {
                      var p = c[m],
                        g = n.queries.get(h),
                        b = g.document,
                        y = g.variables,
                        _ = e.diff({
                          query: b,
                          variables: y,
                          returnPartialData: !0,
                          optimistic: !1,
                        }),
                        x = _.result;
                      if (_.complete && x) {
                        var I = p(x, {
                          mutationResult: r,
                          queryName: (b && E_(b)) || void 0,
                          queryVariables: y,
                        });
                        I &&
                          o.push({
                            result: I,
                            dataId: "ROOT_QUERY",
                            query: b,
                            variables: y,
                          });
                      }
                    }
                  });
              }
              if (
                o.length > 0 ||
                t.refetchQueries ||
                t.update ||
                t.onQueryUpdated ||
                t.removeOptimistic
              ) {
                var d = [];
                if (
                  (this.refetchQueries({
                    updateCache: function (u) {
                      s ||
                        o.forEach(function (p) {
                          return u.write(p);
                        });
                      var h = t.update,
                        f =
                          !(function Nq(i) {
                            return (
                              Ss(i) ||
                              (function Pq(i) {
                                return "hasNext" in i && "data" in i;
                              })(i)
                            );
                          })(r) ||
                          (Ss(r) && !r.hasNext);
                      if (h) {
                        if (!s) {
                          var m = u.diff({
                            id: "ROOT_MUTATION",
                            query: n.transform(t.document).asQuery,
                            variables: t.variables,
                            optimistic: !1,
                            returnPartialData: !0,
                          });
                          m.complete &&
                            ("incremental" in
                              (r = C(C({}, r), { data: m.result })) &&
                              delete r.incremental,
                            "hasNext" in r && delete r.hasNext);
                        }
                        f &&
                          h(u, r, {
                            context: t.context,
                            variables: t.variables,
                          });
                      }
                      !s &&
                        !t.keepRootFields &&
                        f &&
                        u.modify({
                          id: "ROOT_MUTATION",
                          fields: function (p, g) {
                            return "__typename" === g.fieldName ? p : g.DELETE;
                          },
                        });
                    },
                    include: t.refetchQueries,
                    optimistic: !1,
                    removeOptimistic: t.removeOptimistic,
                    onQueryUpdated: t.onQueryUpdated || null,
                  }).forEach(function (u) {
                    return d.push(u);
                  }),
                  t.awaitRefetchQueries || t.onQueryUpdated)
                )
                  return Promise.all(d).then(function () {
                    return r;
                  });
              }
              return Promise.resolve(r);
            }),
            (i.prototype.markMutationOptimistic = function (t, e) {
              var n = this,
                r = "function" == typeof t ? t(e.variables) : t;
              return this.cache.recordOptimisticTransaction(function (o) {
                try {
                  n.markMutationResult(C(C({}, e), { result: { data: r } }), o);
                } catch (s) {
                  __DEV__ && O.error(s);
                }
              }, e.mutationId);
            }),
            (i.prototype.fetchQuery = function (t, e, n) {
              return this.fetchQueryObservable(t, e, n).promise;
            }),
            (i.prototype.getQueryStore = function () {
              var t = Object.create(null);
              return (
                this.queries.forEach(function (e, n) {
                  t[n] = {
                    variables: e.variables,
                    networkStatus: e.networkStatus,
                    networkError: e.networkError,
                    graphQLErrors: e.graphQLErrors,
                  };
                }),
                t
              );
            }),
            (i.prototype.resetErrors = function (t) {
              var e = this.queries.get(t);
              e && ((e.networkError = void 0), (e.graphQLErrors = []));
            }),
            (i.prototype.transform = function (t) {
              var e = this.transformCache;
              if (!e.has(t)) {
                var n = this.cache.transformDocument(t),
                  r = (function Uq(i) {
                    return lk([zq], Bu(i));
                  })(n),
                  o = this.localState.clientQuery(n),
                  s = r && this.localState.serverQuery(r),
                  a = {
                    document: n,
                    hasClientExports: U6(n),
                    hasForcedResolvers: this.localState.shouldForceResolvers(n),
                    clientQuery: o,
                    serverQuery: s,
                    defaultVars: T_(bl(n)),
                    asQuery: C(C({}, n), {
                      definitions: n.definitions.map(function (c) {
                        return "OperationDefinition" === c.kind &&
                          "query" !== c.operation
                          ? C(C({}, c), { operation: "query" })
                          : c;
                      }),
                    }),
                  },
                  l = function (c) {
                    c && !e.has(c) && e.set(c, a);
                  };
                l(t), l(n), l(o), l(s);
              }
              return e.get(t);
            }),
            (i.prototype.getVariables = function (t, e) {
              return C(C({}, this.transform(t).defaultVars), e);
            }),
            (i.prototype.watchQuery = function (t) {
              typeof (t = C(C({}, t), {
                variables: this.getVariables(t.query, t.variables),
              })).notifyOnNetworkStatusChange > "u" &&
                (t.notifyOnNetworkStatusChange = !1);
              var e = new tb(this),
                n = new q_({ queryManager: this, queryInfo: e, options: t });
              return (
                this.queries.set(n.queryId, e),
                e.init({
                  document: n.query,
                  observableQuery: n,
                  variables: n.variables,
                }),
                n
              );
            }),
            (i.prototype.query = function (t, e) {
              var n = this;
              return (
                void 0 === e && (e = this.generateQueryId()),
                __DEV__
                  ? O(
                      t.query,
                      "query option is required. You must specify your GraphQL document in the query option."
                    )
                  : O(t.query, 17),
                __DEV__
                  ? O(
                      "Document" === t.query.kind,
                      'You must wrap the query string in a "gql" tag.'
                    )
                  : O("Document" === t.query.kind, 18),
                __DEV__
                  ? O(
                      !t.returnPartialData,
                      "returnPartialData option only supported on watchQuery."
                    )
                  : O(!t.returnPartialData, 19),
                __DEV__
                  ? O(
                      !t.pollInterval,
                      "pollInterval option only supported on watchQuery."
                    )
                  : O(!t.pollInterval, 20),
                this.fetchQuery(e, t).finally(function () {
                  return n.stopQuery(e);
                })
              );
            }),
            (i.prototype.generateQueryId = function () {
              return String(this.queryIdCounter++);
            }),
            (i.prototype.generateRequestId = function () {
              return this.requestIdCounter++;
            }),
            (i.prototype.generateMutationId = function () {
              return String(this.mutationIdCounter++);
            }),
            (i.prototype.stopQueryInStore = function (t) {
              this.stopQueryInStoreNoBroadcast(t), this.broadcastQueries();
            }),
            (i.prototype.stopQueryInStoreNoBroadcast = function (t) {
              var e = this.queries.get(t);
              e && e.stop();
            }),
            (i.prototype.clearStore = function (t) {
              return (
                void 0 === t && (t = { discardWatches: !0 }),
                this.cancelPendingFetches(
                  __DEV__
                    ? new Ce(
                        "Store reset while query was in flight (not completed in link chain)"
                      )
                    : new Ce(21)
                ),
                this.queries.forEach(function (e) {
                  e.observableQuery ? (e.networkStatus = Re.loading) : e.stop();
                }),
                this.mutationStore &&
                  (this.mutationStore = Object.create(null)),
                this.cache.reset(t)
              );
            }),
            (i.prototype.getObservableQueries = function (t) {
              var e = this;
              void 0 === t && (t = "active");
              var n = new Map(),
                r = new Map(),
                o = new Set();
              return (
                Array.isArray(t) &&
                  t.forEach(function (s) {
                    "string" == typeof s
                      ? r.set(s, !1)
                      : (function C6(i) {
                          return (
                            rt(i) &&
                            "Document" === i.kind &&
                            Array.isArray(i.definitions)
                          );
                        })(s)
                      ? r.set(e.transform(s).document, !1)
                      : rt(s) && s.query && o.add(s);
                  }),
                this.queries.forEach(function (s, a) {
                  var l = s.observableQuery,
                    c = s.document;
                  if (l) {
                    if ("all" === t) return void n.set(a, l);
                    var d = l.queryName;
                    if (
                      "standby" === l.options.fetchPolicy ||
                      ("active" === t && !l.hasObservers())
                    )
                      return;
                    ("active" === t || (d && r.has(d)) || (c && r.has(c))) &&
                      (n.set(a, l), d && r.set(d, !0), c && r.set(c, !0));
                  }
                }),
                o.size &&
                  o.forEach(function (s) {
                    var a = $_("legacyOneTimeQuery"),
                      l = e
                        .getQuery(a)
                        .init({ document: s.query, variables: s.variables }),
                      c = new q_({
                        queryManager: e,
                        queryInfo: l,
                        options: C(C({}, s), { fetchPolicy: "network-only" }),
                      });
                    O(c.queryId === a), l.setObservableQuery(c), n.set(a, c);
                  }),
                __DEV__ &&
                  r.size &&
                  r.forEach(function (s, a) {
                    s ||
                      (__DEV__ &&
                        O.warn(
                          "Unknown query "
                            .concat("string" == typeof a ? "named " : "")
                            .concat(
                              JSON.stringify(a, null, 2),
                              " requested in refetchQueries options.include array"
                            )
                        ));
                  }),
                n
              );
            }),
            (i.prototype.reFetchObservableQueries = function (t) {
              var e = this;
              void 0 === t && (t = !1);
              var n = [];
              return (
                this.getObservableQueries(t ? "all" : "active").forEach(
                  function (r, o) {
                    var s = r.options.fetchPolicy;
                    r.resetLastResults(),
                      (t || ("standby" !== s && "cache-only" !== s)) &&
                        n.push(r.refetch()),
                      e.getQuery(o).setDiff(null);
                  }
                ),
                this.broadcastQueries(),
                Promise.all(n)
              );
            }),
            (i.prototype.setObservableQuery = function (t) {
              this.getQuery(t.queryId).setObservableQuery(t);
            }),
            (i.prototype.startGraphQLSubscription = function (t) {
              var e = this,
                n = t.query,
                r = t.fetchPolicy,
                o = t.errorPolicy,
                s = t.variables,
                a = t.context,
                l = void 0 === a ? {} : a;
              (n = this.transform(n).document), (s = this.getVariables(n, s));
              var c = function (u) {
                return e.getObservableFromLink(n, l, u).map(function (h) {
                  if (
                    ("no-cache" !== r &&
                      (ib(h, o) &&
                        e.cache.write({
                          query: n,
                          result: h.data,
                          dataId: "ROOT_SUBSCRIPTION",
                          variables: u,
                        }),
                      e.broadcastQueries()),
                    Uu(h))
                  )
                    throw new Ts({ graphQLErrors: h.errors });
                  return h;
                });
              };
              if (this.transform(n).hasClientExports) {
                var d = this.localState.addExportedVariables(n, s, l).then(c);
                return new Be(function (u) {
                  var h = null;
                  return (
                    d.then(function (f) {
                      return (h = f.subscribe(u));
                    }, u.error),
                    function () {
                      return h && h.unsubscribe();
                    }
                  );
                });
              }
              return c(s);
            }),
            (i.prototype.stopQuery = function (t) {
              this.stopQueryNoBroadcast(t), this.broadcastQueries();
            }),
            (i.prototype.stopQueryNoBroadcast = function (t) {
              this.stopQueryInStoreNoBroadcast(t), this.removeQuery(t);
            }),
            (i.prototype.removeQuery = function (t) {
              this.fetchCancelFns.delete(t),
                this.queries.has(t) &&
                  (this.getQuery(t).stop(), this.queries.delete(t));
            }),
            (i.prototype.broadcastQueries = function () {
              this.onBroadcast && this.onBroadcast(),
                this.queries.forEach(function (t) {
                  return t.notify();
                });
            }),
            (i.prototype.getLocalState = function () {
              return this.localState;
            }),
            (i.prototype.getObservableFromLink = function (t, e, n, r) {
              var s,
                o = this;
              void 0 === r &&
                (r =
                  null !== (s = e?.queryDeduplication) && void 0 !== s
                    ? s
                    : this.queryDeduplication);
              var a,
                l = this.transform(t).serverQuery;
              if (l) {
                var d = this.inFlightLinkObservables,
                  u = this.link,
                  h = {
                    query: l,
                    variables: n,
                    operationName: E_(l) || void 0,
                    context: this.prepareContext(
                      C(C({}, e), { forceFetch: !r })
                    ),
                  };
                if (((e = h.context), r)) {
                  var f = d.get(l) || new Map();
                  d.set(l, f);
                  var m = co(n);
                  if (!(a = f.get(m))) {
                    var p = new Cl([k_(u, h)]);
                    f.set(m, (a = p)),
                      p.beforeNext(function () {
                        f.delete(m) && f.size < 1 && d.delete(l);
                      });
                  }
                } else a = new Cl([k_(u, h)]);
              } else
                (a = new Cl([Be.of({ data: {} })])),
                  (e = this.prepareContext(e));
              var g = this.transform(t).clientQuery;
              return (
                g &&
                  (a = j_(a, function (b) {
                    return o.localState.runResolvers({
                      document: g,
                      remoteResult: b,
                      context: e,
                      variables: n,
                    });
                  })),
                a
              );
            }),
            (i.prototype.getResultsFromLink = function (t, e, n) {
              var r = (t.lastRequestId = this.generateRequestId()),
                o = this.cache.transformForLink(
                  this.transform(t.document).document
                );
              return j_(
                this.getObservableFromLink(o, n.context, n.variables),
                function (s) {
                  var a = H_(s),
                    l = a.length > 0;
                  if (r >= t.lastRequestId) {
                    if (l && "none" === n.errorPolicy)
                      throw t.markError(new Ts({ graphQLErrors: a }));
                    t.markResult(s, o, n, e), t.markReady();
                  }
                  var c = {
                    data: s.data,
                    loading: !1,
                    networkStatus: Re.ready,
                  };
                  return (
                    l &&
                      "ignore" !== n.errorPolicy &&
                      ((c.errors = a), (c.networkStatus = Re.error)),
                    c
                  );
                },
                function (s) {
                  var a = (function Yq(i) {
                    return i.hasOwnProperty("graphQLErrors");
                  })(s)
                    ? s
                    : new Ts({ networkError: s });
                  throw (r >= t.lastRequestId && t.markError(a), a);
                }
              );
            }),
            (i.prototype.fetchQueryObservable = function (t, e, n) {
              var r = this;
              void 0 === n && (n = Re.loading);
              var o = this.transform(e.query).document,
                s = this.getVariables(o, e.variables),
                a = this.getQuery(t),
                l = this.defaultOptions.watchQuery,
                c = e.fetchPolicy,
                u = e.errorPolicy,
                f = e.returnPartialData,
                p = e.notifyOnNetworkStatusChange,
                b = e.context,
                _ = Object.assign({}, e, {
                  query: o,
                  variables: s,
                  fetchPolicy:
                    void 0 === c ? (l && l.fetchPolicy) || "cache-first" : c,
                  errorPolicy:
                    void 0 === u ? (l && l.errorPolicy) || "none" : u,
                  returnPartialData: void 0 !== f && f,
                  notifyOnNetworkStatusChange: void 0 !== p && p,
                  context: void 0 === b ? {} : b,
                }),
                x = function (R) {
                  _.variables = R;
                  var z = r.fetchQueryByPolicy(a, _, n);
                  return (
                    "standby" !== _.fetchPolicy &&
                      z.length > 0 &&
                      a.observableQuery &&
                      a.observableQuery.applyNextFetchPolicy("after-fetch", e),
                    z
                  );
                },
                T = function () {
                  return r.fetchCancelFns.delete(t);
                };
              this.fetchCancelFns.set(t, function (R) {
                T(),
                  setTimeout(function () {
                    return I.cancel(R);
                  });
              });
              var I = new Cl(
                this.transform(_.query).hasClientExports
                  ? this.localState
                      .addExportedVariables(_.query, _.variables, _.context)
                      .then(x)
                  : x(_.variables)
              );
              return I.promise.then(T, T), I;
            }),
            (i.prototype.refetchQueries = function (t) {
              var e = this,
                n = t.updateCache,
                r = t.include,
                o = t.optimistic,
                s = void 0 !== o && o,
                a = t.removeOptimistic,
                l = void 0 === a ? (s ? $_("refetchQueries") : void 0) : a,
                c = t.onQueryUpdated,
                d = new Map();
              r &&
                this.getObservableQueries(r).forEach(function (h, f) {
                  d.set(f, { oq: h, lastDiff: e.getQuery(f).getDiff() });
                });
              var u = new Map();
              return (
                n &&
                  this.cache.batch({
                    update: n,
                    optimistic: (s && l) || !1,
                    removeOptimistic: l,
                    onWatchUpdated: function (h, f, m) {
                      var p =
                        h.watcher instanceof tb && h.watcher.observableQuery;
                      if (p) {
                        if (c) {
                          d.delete(p.queryId);
                          var g = c(p, f, m);
                          return (
                            !0 === g && (g = p.refetch()),
                            !1 !== g && u.set(p, g),
                            g
                          );
                        }
                        null !== c &&
                          d.set(p.queryId, { oq: p, lastDiff: m, diff: f });
                      }
                    },
                  }),
                d.size &&
                  d.forEach(function (h, f) {
                    var b,
                      m = h.oq,
                      p = h.lastDiff,
                      g = h.diff;
                    if (c) {
                      if (!g) {
                        var y = m.queryInfo;
                        y.reset(), (g = y.getDiff());
                      }
                      b = c(m, g, p);
                    }
                    (!c || !0 === b) && (b = m.refetch()),
                      !1 !== b && u.set(m, b),
                      f.indexOf("legacyOneTimeQuery") >= 0 &&
                        e.stopQueryNoBroadcast(f);
                  }),
                l && this.cache.removeOptimistic(l),
                u
              );
            }),
            (i.prototype.fetchQueryByPolicy = function (t, e, n) {
              var r = this,
                o = e.query,
                s = e.variables,
                a = e.fetchPolicy,
                l = e.refetchWritePolicy,
                c = e.errorPolicy,
                d = e.returnPartialData,
                u = e.context,
                h = e.notifyOnNetworkStatusChange,
                f = t.networkStatus;
              t.init({
                document: this.transform(o).document,
                variables: s,
                networkStatus: n,
              });
              var m = function () {
                  return t.getDiff(s);
                },
                p = function (x, T) {
                  void 0 === T && (T = t.networkStatus || Re.loading);
                  var I = x.result;
                  __DEV__ && !d && !Ct(I, {}) && mk(x.missing);
                  var R = function (z) {
                    return Be.of(
                      C(
                        { data: z, loading: pl(T), networkStatus: T },
                        x.complete ? null : { partial: !0 }
                      )
                    );
                  };
                  return I && r.transform(o).hasForcedResolvers
                    ? r.localState
                        .runResolvers({
                          document: o,
                          remoteResult: { data: I },
                          context: u,
                          variables: s,
                          onlyRunForcedResolvers: !0,
                        })
                        .then(function (z) {
                          return R(z.data || void 0);
                        })
                    : "none" === c &&
                      T === Re.refetch &&
                      Array.isArray(x.missing)
                    ? R(void 0)
                    : R(I);
                },
                g =
                  "no-cache" === a
                    ? 0
                    : n === Re.refetch && "merge" !== l
                    ? 1
                    : 2,
                b = function () {
                  return r.getResultsFromLink(t, g, {
                    variables: s,
                    context: u,
                    fetchPolicy: a,
                    errorPolicy: c,
                  });
                },
                y = h && "number" == typeof f && f !== n && pl(n);
              switch (a) {
                default:
                case "cache-first":
                  return (_ = m()).complete
                    ? [p(_, t.markReady())]
                    : d || y
                    ? [p(_), b()]
                    : [b()];
                case "cache-and-network":
                  var _;
                  return (_ = m()).complete || d || y ? [p(_), b()] : [b()];
                case "cache-only":
                  return [p(m(), t.markReady())];
                case "network-only":
                  return y ? [p(m()), b()] : [b()];
                case "no-cache":
                  return y ? [p(t.getDiff()), b()] : [b()];
                case "standby":
                  return [];
              }
            }),
            (i.prototype.getQuery = function (t) {
              return (
                t &&
                  !this.queries.has(t) &&
                  this.queries.set(t, new tb(this, t)),
                this.queries.get(t)
              );
            }),
            (i.prototype.prepareContext = function (t) {
              void 0 === t && (t = {});
              var e = this.localState.prepareContext(t);
              return C(C({}, e), { clientAwareness: this.clientAwareness });
            }),
            i
          );
        })();
      function nb(i, t) {
        return $u(
          i,
          t,
          t.variables && { variables: C(C({}, i && i.variables), t.variables) }
        );
      }
      var Nk = !1;
      !(function () {
        function i(t) {
          var e = this;
          (this.resetStoreCallbacks = []), (this.clearStoreCallbacks = []);
          var n = t.uri,
            s = t.cache,
            a = t.ssrMode,
            l = void 0 !== a && a,
            c = t.ssrForceFetchDelay,
            d = void 0 === c ? 0 : c,
            u = t.connectToDevTools,
            h =
              void 0 === u
                ? "object" == typeof window &&
                  !window.__APOLLO_CLIENT__ &&
                  __DEV__
                : u,
            f = t.queryDeduplication,
            m = void 0 === f || f,
            p = t.defaultOptions,
            g = t.assumeImmutableResults,
            b = void 0 !== g && g,
            y = t.resolvers,
            _ = t.typeDefs,
            x = t.fragmentMatcher,
            T = t.name,
            I = t.version,
            R = t.link;
          if (
            (R ||
              (R = n
                ? new Tq({
                    uri: n,
                    credentials: t.credentials,
                    headers: t.headers,
                  })
                : yn.empty()),
            !s)
          )
            throw __DEV__
              ? new Ce(
                  "To initialize Apollo Client, you must specify a 'cache' property in the options object. \nFor more information, please visit: https://go.apollo.dev/c/docs"
                )
              : new Ce(9);
          if (
            ((this.link = R),
            (this.cache = s),
            (this.disableNetworkFetches = l || d > 0),
            (this.queryDeduplication = m),
            (this.defaultOptions = p || Object.create(null)),
            (this.typeDefs = _),
            d &&
              setTimeout(function () {
                return (e.disableNetworkFetches = !1);
              }, d),
            (this.watchQuery = this.watchQuery.bind(this)),
            (this.query = this.query.bind(this)),
            (this.mutate = this.mutate.bind(this)),
            (this.resetStore = this.resetStore.bind(this)),
            (this.reFetchObservableQueries =
              this.reFetchObservableQueries.bind(this)),
            h && "object" == typeof window && (window.__APOLLO_CLIENT__ = this),
            !Nk &&
              h &&
              __DEV__ &&
              ((Nk = !0),
              typeof window < "u" &&
                window.document &&
                window.top === window.self &&
                !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__))
          ) {
            var z = window.navigator,
              De = z && z.userAgent,
              Oe = void 0;
            "string" == typeof De &&
              (De.indexOf("Chrome/") > -1
                ? (Oe =
                    "https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm")
                : De.indexOf("Firefox/") > -1 &&
                  (Oe =
                    "https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/")),
              Oe &&
                __DEV__ &&
                O.log(
                  "Download the Apollo DevTools for a better development experience: " +
                    Oe
                );
          }
          (this.version = "3.7.9"),
            (this.localState = new Fk({
              cache: s,
              client: this,
              resolvers: y,
              fragmentMatcher: x,
            })),
            (this.queryManager = new TW({
              cache: this.cache,
              link: this.link,
              defaultOptions: this.defaultOptions,
              queryDeduplication: m,
              ssrMode: l,
              clientAwareness: { name: T, version: I },
              localState: this.localState,
              assumeImmutableResults: b,
              onBroadcast: h
                ? function () {
                    e.devToolsHookCb &&
                      e.devToolsHookCb({
                        action: {},
                        state: {
                          queries: e.queryManager.getQueryStore(),
                          mutations: e.queryManager.mutationStore || {},
                        },
                        dataWithOptimisticResults: e.cache.extract(!0),
                      });
                  }
                : void 0,
            }));
        }
        (i.prototype.stop = function () {
          this.queryManager.stop();
        }),
          (i.prototype.watchQuery = function (t) {
            return (
              this.defaultOptions.watchQuery &&
                (t = nb(this.defaultOptions.watchQuery, t)),
              this.disableNetworkFetches &&
                ("network-only" === t.fetchPolicy ||
                  "cache-and-network" === t.fetchPolicy) &&
                (t = C(C({}, t), { fetchPolicy: "cache-first" })),
              this.queryManager.watchQuery(t)
            );
          }),
          (i.prototype.query = function (t) {
            return (
              this.defaultOptions.query &&
                (t = nb(this.defaultOptions.query, t)),
              __DEV__
                ? O(
                    "cache-and-network" !== t.fetchPolicy,
                    "The cache-and-network fetchPolicy does not work with client.query, because client.query can only return a single result. Please use client.watchQuery to receive multiple results from the cache and the network, or consider using a different fetchPolicy, such as cache-first or network-only."
                  )
                : O("cache-and-network" !== t.fetchPolicy, 10),
              this.disableNetworkFetches &&
                "network-only" === t.fetchPolicy &&
                (t = C(C({}, t), { fetchPolicy: "cache-first" })),
              this.queryManager.query(t)
            );
          }),
          (i.prototype.mutate = function (t) {
            return (
              this.defaultOptions.mutate &&
                (t = nb(this.defaultOptions.mutate, t)),
              this.queryManager.mutate(t)
            );
          }),
          (i.prototype.subscribe = function (t) {
            return this.queryManager.startGraphQLSubscription(t);
          }),
          (i.prototype.readQuery = function (t, e) {
            return void 0 === e && (e = !1), this.cache.readQuery(t, e);
          }),
          (i.prototype.readFragment = function (t, e) {
            return void 0 === e && (e = !1), this.cache.readFragment(t, e);
          }),
          (i.prototype.writeQuery = function (t) {
            this.cache.writeQuery(t), this.queryManager.broadcastQueries();
          }),
          (i.prototype.writeFragment = function (t) {
            this.cache.writeFragment(t), this.queryManager.broadcastQueries();
          }),
          (i.prototype.__actionHookForDevTools = function (t) {
            this.devToolsHookCb = t;
          }),
          (i.prototype.__requestRaw = function (t) {
            return k_(this.link, t);
          }),
          (i.prototype.resetStore = function () {
            var t = this;
            return Promise.resolve()
              .then(function () {
                return t.queryManager.clearStore({ discardWatches: !1 });
              })
              .then(function () {
                return Promise.all(
                  t.resetStoreCallbacks.map(function (e) {
                    return e();
                  })
                );
              })
              .then(function () {
                return t.reFetchObservableQueries();
              });
          }),
          (i.prototype.clearStore = function () {
            var t = this;
            return Promise.resolve()
              .then(function () {
                return t.queryManager.clearStore({ discardWatches: !0 });
              })
              .then(function () {
                return Promise.all(
                  t.clearStoreCallbacks.map(function (e) {
                    return e();
                  })
                );
              });
          }),
          (i.prototype.onResetStore = function (t) {
            var e = this;
            return (
              this.resetStoreCallbacks.push(t),
              function () {
                e.resetStoreCallbacks = e.resetStoreCallbacks.filter(function (
                  n
                ) {
                  return n !== t;
                });
              }
            );
          }),
          (i.prototype.onClearStore = function (t) {
            var e = this;
            return (
              this.clearStoreCallbacks.push(t),
              function () {
                e.clearStoreCallbacks = e.clearStoreCallbacks.filter(function (
                  n
                ) {
                  return n !== t;
                });
              }
            );
          }),
          (i.prototype.reFetchObservableQueries = function (t) {
            return this.queryManager.reFetchObservableQueries(t);
          }),
          (i.prototype.refetchQueries = function (t) {
            var e = this.queryManager.refetchQueries(t),
              n = [],
              r = [];
            e.forEach(function (s, a) {
              n.push(a), r.push(s);
            });
            var o = Promise.all(r);
            return (
              (o.queries = n),
              (o.results = r),
              o.catch(function (s) {
                __DEV__ &&
                  O.debug(
                    "In client.refetchQueries, Promise.all promise rejected with error ".concat(
                      s
                    )
                  );
              }),
              o
            );
          }),
          (i.prototype.getObservableQueries = function (t) {
            return (
              void 0 === t && (t = "active"),
              this.queryManager.getObservableQueries(t)
            );
          }),
          (i.prototype.extract = function (t) {
            return this.cache.extract(t);
          }),
          (i.prototype.restore = function (t) {
            return this.cache.restore(t);
          }),
          (i.prototype.addResolvers = function (t) {
            this.localState.addResolvers(t);
          }),
          (i.prototype.setResolvers = function (t) {
            this.localState.setResolvers(t);
          }),
          (i.prototype.getResolvers = function () {
            return this.localState.getResolvers();
          }),
          (i.prototype.setLocalStateFragmentMatcher = function (t) {
            this.localState.setFragmentMatcher(t);
          }),
          (i.prototype.setLink = function (t) {
            this.link = this.queryManager.link = t;
          });
      })(),
        new (class IW extends uu {})(
          class kW extends du {
            constructor(t, e) {
              super(t, e), (this.scheduler = t), (this.work = e);
            }
            schedule(t, e = 0) {
              return e > 0
                ? super.schedule(t, e)
                : ((this.delay = e),
                  (this.state = t),
                  this.scheduler.flush(this),
                  this);
            }
            execute(t, e) {
              return e > 0 || this.closed
                ? super.execute(t, e)
                : this._execute(t, e);
            }
            requestAsyncId(t, e, n = 0) {
              return (null != n && n > 0) || (null == n && this.delay > 0)
                ? super.requestAsyncId(t, e, n)
                : (t.flush(this), 0);
            }
          }
        ),
        new E("APOLLO_FLAGS");
      const rb = new E("APOLLO_OPTIONS");
      new E("APOLLO_NAMED_OPTIONS");
      var VW = (function () {
          function i() {
            this.getFragmentDoc = Qu(x6);
          }
          return (
            (i.prototype.batch = function (t) {
              var r,
                e = this;
              return (
                this.performTransaction(
                  function () {
                    return (r = t.update(e));
                  },
                  "string" == typeof t.optimistic
                    ? t.optimistic
                    : !1 === t.optimistic
                    ? null
                    : void 0
                ),
                r
              );
            }),
            (i.prototype.recordOptimisticTransaction = function (t, e) {
              this.performTransaction(t, e);
            }),
            (i.prototype.transformDocument = function (t) {
              return t;
            }),
            (i.prototype.transformForLink = function (t) {
              return t;
            }),
            (i.prototype.identify = function (t) {}),
            (i.prototype.gc = function () {
              return [];
            }),
            (i.prototype.modify = function (t) {
              return !1;
            }),
            (i.prototype.readQuery = function (t, e) {
              return (
                void 0 === e && (e = !!t.optimistic),
                this.read(
                  C(C({}, t), { rootId: t.id || "ROOT_QUERY", optimistic: e })
                )
              );
            }),
            (i.prototype.readFragment = function (t, e) {
              return (
                void 0 === e && (e = !!t.optimistic),
                this.read(
                  C(C({}, t), {
                    query: this.getFragmentDoc(t.fragment, t.fragmentName),
                    rootId: t.id,
                    optimistic: e,
                  })
                )
              );
            }),
            (i.prototype.writeQuery = function (t) {
              var e = t.id,
                n = t.data,
                r = Cr(t, ["id", "data"]);
              return this.write(
                Object.assign(r, { dataId: e || "ROOT_QUERY", result: n })
              );
            }),
            (i.prototype.writeFragment = function (t) {
              var e = t.id,
                n = t.data,
                r = t.fragment,
                o = t.fragmentName,
                s = Cr(t, ["id", "data", "fragment", "fragmentName"]);
              return this.write(
                Object.assign(s, {
                  query: this.getFragmentDoc(r, o),
                  dataId: e,
                  result: n,
                })
              );
            }),
            (i.prototype.updateQuery = function (t, e) {
              return this.batch({
                update: function (n) {
                  var r = n.readQuery(t),
                    o = e(r);
                  return null == o
                    ? r
                    : (n.writeQuery(C(C({}, t), { data: o })), o);
                },
              });
            }),
            (i.prototype.updateFragment = function (t, e) {
              return this.batch({
                update: function (n) {
                  var r = n.readFragment(t),
                    o = e(r);
                  return null == o
                    ? r
                    : (n.writeFragment(C(C({}, t), { data: o })), o);
                },
              });
            }),
            i
          );
        })(),
        Uk = (function (i) {
          function t(e, n, r, o) {
            var s,
              a = i.call(this, e) || this;
            if (
              ((a.message = e),
              (a.path = n),
              (a.query = r),
              (a.variables = o),
              Array.isArray(a.path))
            ) {
              a.missing = a.message;
              for (var l = a.path.length - 1; l >= 0; --l)
                a.missing = (((s = {})[a.path[l]] = a.missing), s);
            } else a.missing = a.path;
            return (a.__proto__ = t.prototype), a;
          }
          return xi(t, i), t;
        })(Error);
      function sb(i) {
        return (
          __DEV__ &&
            (function jW(i) {
              var t = new Set([i]);
              return (
                t.forEach(function (e) {
                  rt(e) &&
                    (function HW(i) {
                      if (__DEV__ && !Object.isFrozen(i))
                        try {
                          Object.freeze(i);
                        } catch (t) {
                          if (t instanceof TypeError) return null;
                          throw t;
                        }
                      return i;
                    })(e) === e &&
                    Object.getOwnPropertyNames(e).forEach(function (n) {
                      rt(e[n]) && t.add(e[n]);
                    });
                }),
                i
              );
            })(i),
          i
        );
      }
      var Mt = Object.prototype.hasOwnProperty;
      function Ml(i) {
        return null == i;
      }
      function $k(i, t) {
        var e = i.__typename,
          n = i.id,
          r = i._id;
        if (
          "string" == typeof e &&
          (t &&
            (t.keyObject = Ml(n) ? (Ml(r) ? void 0 : { _id: r }) : { id: n }),
          Ml(n) && !Ml(r) && (n = r),
          !Ml(n))
        )
          return ""
            .concat(e, ":")
            .concat(
              "number" == typeof n || "string" == typeof n
                ? n
                : JSON.stringify(n)
            );
      }
      var Gk = {
        dataIdFromObject: $k,
        addTypename: !0,
        resultCaching: !0,
        canonizeResults: !1,
      };
      function qk(i) {
        var t = i.canonizeResults;
        return void 0 === t ? Gk.canonizeResults : t;
      }
      var Wk = /^[_a-z][_0-9a-z]*/i;
      function pr(i) {
        var t = i.match(Wk);
        return t ? t[0] : i;
      }
      function ab(i, t, e) {
        return (
          !!rt(t) &&
          (ot(t)
            ? t.every(function (n) {
                return ab(i, n, e);
              })
            : i.selections.every(function (n) {
                if (so(n) && ju(n, e)) {
                  var r = oo(n);
                  return (
                    Mt.call(t, r) &&
                    (!n.selectionSet || ab(n.selectionSet, t[r], e))
                  );
                }
                return !0;
              }))
        );
      }
      function As(i) {
        return rt(i) && !Fe(i) && !ot(i);
      }
      function Qk(i, t) {
        var e = w_(M_(i));
        return {
          fragmentMap: e,
          lookupFragment: function (n) {
            var r = e[n];
            return !r && t && (r = t.lookup(n)), r || null;
          },
        };
      }
      var Yu = Object.create(null),
        lb = function () {
          return Yu;
        },
        Yk = Object.create(null),
        Sl = (function () {
          function i(t, e) {
            var n = this;
            (this.policies = t),
              (this.group = e),
              (this.data = Object.create(null)),
              (this.rootIds = Object.create(null)),
              (this.refs = Object.create(null)),
              (this.getFieldValue = function (r, o) {
                return sb(Fe(r) ? n.get(r.__ref, o) : r && r[o]);
              }),
              (this.canRead = function (r) {
                return Fe(r) ? n.has(r.__ref) : "object" == typeof r;
              }),
              (this.toReference = function (r, o) {
                if ("string" == typeof r) return Es(r);
                if (Fe(r)) return r;
                var s = n.policies.identify(r)[0];
                if (s) {
                  var a = Es(s);
                  return o && n.merge(s, r), a;
                }
              });
          }
          return (
            (i.prototype.toObject = function () {
              return C({}, this.data);
            }),
            (i.prototype.has = function (t) {
              return void 0 !== this.lookup(t, !0);
            }),
            (i.prototype.get = function (t, e) {
              if ((this.group.depend(t, e), Mt.call(this.data, t))) {
                var n = this.data[t];
                if (n && Mt.call(n, e)) return n[e];
              }
              return "__typename" === e &&
                Mt.call(this.policies.rootTypenamesById, t)
                ? this.policies.rootTypenamesById[t]
                : this instanceof gr
                ? this.parent.get(t, e)
                : void 0;
            }),
            (i.prototype.lookup = function (t, e) {
              return (
                e && this.group.depend(t, "__exists"),
                Mt.call(this.data, t)
                  ? this.data[t]
                  : this instanceof gr
                  ? this.parent.lookup(t, e)
                  : this.policies.rootTypenamesById[t]
                  ? Object.create(null)
                  : void 0
              );
            }),
            (i.prototype.merge = function (t, e) {
              var r,
                n = this;
              Fe(t) && (t = t.__ref), Fe(e) && (e = e.__ref);
              var o = "string" == typeof t ? this.lookup((r = t)) : t,
                s = "string" == typeof e ? this.lookup((r = e)) : e;
              if (s) {
                __DEV__
                  ? O("string" == typeof r, "store.merge expects a string ID")
                  : O("string" == typeof r, 1);
                var a = new fr(qW).merge(o, s);
                if (
                  ((this.data[r] = a),
                  a !== o && (delete this.refs[r], this.group.caching))
                ) {
                  var l = Object.create(null);
                  o || (l.__exists = 1),
                    Object.keys(s).forEach(function (c) {
                      if (!o || o[c] !== a[c]) {
                        l[c] = 1;
                        var d = pr(c);
                        d !== c &&
                          !n.policies.hasKeyArgs(a.__typename, d) &&
                          (l[d] = 1),
                          void 0 === a[c] && !(n instanceof gr) && delete a[c];
                      }
                    }),
                    l.__typename &&
                      !(o && o.__typename) &&
                      this.policies.rootTypenamesById[r] === a.__typename &&
                      delete l.__typename,
                    Object.keys(l).forEach(function (c) {
                      return n.group.dirty(r, c);
                    });
                }
              }
            }),
            (i.prototype.modify = function (t, e) {
              var n = this,
                r = this.lookup(t);
              if (r) {
                var o = Object.create(null),
                  s = !1,
                  a = !0,
                  l = {
                    DELETE: Yu,
                    INVALIDATE: Yk,
                    isReference: Fe,
                    toReference: this.toReference,
                    canRead: this.canRead,
                    readField: function (c, d) {
                      return n.policies.readField(
                        "string" == typeof c
                          ? { fieldName: c, from: d || Es(t) }
                          : c,
                        { store: n }
                      );
                    },
                  };
                if (
                  (Object.keys(r).forEach(function (c) {
                    var d = pr(c),
                      u = r[c];
                    if (void 0 !== u) {
                      var h = "function" == typeof e ? e : e[c] || e[d];
                      if (h) {
                        var f =
                          h === lb
                            ? Yu
                            : h(
                                sb(u),
                                C(C({}, l), {
                                  fieldName: d,
                                  storeFieldName: c,
                                  storage: n.getStorage(t, c),
                                })
                              );
                        f === Yk
                          ? n.group.dirty(t, c)
                          : (f === Yu && (f = void 0),
                            f !== u && ((o[c] = f), (s = !0), (u = f)));
                      }
                      void 0 !== u && (a = !1);
                    }
                  }),
                  s)
                )
                  return (
                    this.merge(t, o),
                    a &&
                      (this instanceof gr
                        ? (this.data[t] = void 0)
                        : delete this.data[t],
                      this.group.dirty(t, "__exists")),
                    !0
                  );
              }
              return !1;
            }),
            (i.prototype.delete = function (t, e, n) {
              var r,
                o = this.lookup(t);
              if (o) {
                var s = this.getFieldValue(o, "__typename"),
                  a =
                    e && n
                      ? this.policies.getStoreFieldName({
                          typename: s,
                          fieldName: e,
                          args: n,
                        })
                      : e;
                return this.modify(t, a ? (((r = {})[a] = lb), r) : lb);
              }
              return !1;
            }),
            (i.prototype.evict = function (t, e) {
              var n = !1;
              return (
                t.id &&
                  (Mt.call(this.data, t.id) &&
                    (n = this.delete(t.id, t.fieldName, t.args)),
                  this instanceof gr &&
                    this !== e &&
                    (n = this.parent.evict(t, e) || n),
                  (t.fieldName || n) &&
                    this.group.dirty(t.id, t.fieldName || "__exists")),
                n
              );
            }),
            (i.prototype.clear = function () {
              this.replace(null);
            }),
            (i.prototype.extract = function () {
              var t = this,
                e = this.toObject(),
                n = [];
              return (
                this.getRootIdSet().forEach(function (r) {
                  Mt.call(t.policies.rootTypenamesById, r) || n.push(r);
                }),
                n.length && (e.__META = { extraRootIds: n.sort() }),
                e
              );
            }),
            (i.prototype.replace = function (t) {
              var e = this;
              if (
                (Object.keys(this.data).forEach(function (o) {
                  (t && Mt.call(t, o)) || e.delete(o);
                }),
                t)
              ) {
                var n = t.__META,
                  r = Cr(t, ["__META"]);
                Object.keys(r).forEach(function (o) {
                  e.merge(o, r[o]);
                }),
                  n && n.extraRootIds.forEach(this.retain, this);
              }
            }),
            (i.prototype.retain = function (t) {
              return (this.rootIds[t] = (this.rootIds[t] || 0) + 1);
            }),
            (i.prototype.release = function (t) {
              if (this.rootIds[t] > 0) {
                var e = --this.rootIds[t];
                return e || delete this.rootIds[t], e;
              }
              return 0;
            }),
            (i.prototype.getRootIdSet = function (t) {
              return (
                void 0 === t && (t = new Set()),
                Object.keys(this.rootIds).forEach(t.add, t),
                this instanceof gr
                  ? this.parent.getRootIdSet(t)
                  : Object.keys(this.policies.rootTypenamesById).forEach(
                      t.add,
                      t
                    ),
                t
              );
            }),
            (i.prototype.gc = function () {
              var t = this,
                e = this.getRootIdSet(),
                n = this.toObject();
              e.forEach(function (s) {
                Mt.call(n, s) &&
                  (Object.keys(t.findChildRefIds(s)).forEach(e.add, e),
                  delete n[s]);
              });
              var r = Object.keys(n);
              if (r.length) {
                for (var o = this; o instanceof gr; ) o = o.parent;
                r.forEach(function (s) {
                  return o.delete(s);
                });
              }
              return r;
            }),
            (i.prototype.findChildRefIds = function (t) {
              if (!Mt.call(this.refs, t)) {
                var e = (this.refs[t] = Object.create(null)),
                  n = this.data[t];
                if (!n) return e;
                var r = new Set([n]);
                r.forEach(function (o) {
                  Fe(o) && (e[o.__ref] = !0),
                    rt(o) &&
                      Object.keys(o).forEach(function (s) {
                        var a = o[s];
                        rt(a) && r.add(a);
                      });
                });
              }
              return this.refs[t];
            }),
            (i.prototype.makeCacheKey = function () {
              return this.group.keyMaker.lookupArray(arguments);
            }),
            i
          );
        })(),
        Kk = (function () {
          function i(t, e) {
            void 0 === e && (e = null),
              (this.caching = t),
              (this.parent = e),
              (this.d = null),
              this.resetCaching();
          }
          return (
            (i.prototype.resetCaching = function () {
              (this.d = this.caching ? Ik() : null),
                (this.keyMaker = new wl(lo));
            }),
            (i.prototype.depend = function (t, e) {
              if (this.d) {
                this.d(cb(t, e));
                var n = pr(e);
                n !== e && this.d(cb(t, n)),
                  this.parent && this.parent.depend(t, e);
              }
            }),
            (i.prototype.dirty = function (t, e) {
              this.d &&
                this.d.dirty(
                  cb(t, e),
                  "__exists" === e ? "forget" : "setDirty"
                );
            }),
            i
          );
        })();
      function cb(i, t) {
        return t + "#" + i;
      }
      function Xk(i, t) {
        Tl(i) && i.group.depend(t, "__exists");
      }
      !(function (i) {
        var t = (function (e) {
          function n(r) {
            var s = r.resultCaching,
              l = r.seed,
              c = e.call(this, r.policies, new Kk(void 0 === s || s)) || this;
            return (
              (c.stump = new GW(c)),
              (c.storageTrie = new wl(lo)),
              l && c.replace(l),
              c
            );
          }
          return (
            xi(n, e),
            (n.prototype.addLayer = function (r, o) {
              return this.stump.addLayer(r, o);
            }),
            (n.prototype.removeLayer = function () {
              return this;
            }),
            (n.prototype.getStorage = function () {
              return this.storageTrie.lookupArray(arguments);
            }),
            n
          );
        })(i);
        i.Root = t;
      })(Sl || (Sl = {}));
      var gr = (function (i) {
          function t(e, n, r, o) {
            var s = i.call(this, n.policies, o) || this;
            return (
              (s.id = e), (s.parent = n), (s.replay = r), (s.group = o), r(s), s
            );
          }
          return (
            xi(t, i),
            (t.prototype.addLayer = function (e, n) {
              return new t(e, this, n, this.group);
            }),
            (t.prototype.removeLayer = function (e) {
              var n = this,
                r = this.parent.removeLayer(e);
              return e === this.id
                ? (this.group.caching &&
                    Object.keys(this.data).forEach(function (o) {
                      var s = n.data[o],
                        a = r.lookup(o);
                      a
                        ? s
                          ? s !== a &&
                            Object.keys(s).forEach(function (l) {
                              Ct(s[l], a[l]) || n.group.dirty(o, l);
                            })
                          : (n.group.dirty(o, "__exists"),
                            Object.keys(a).forEach(function (l) {
                              n.group.dirty(o, l);
                            }))
                        : n.delete(o);
                    }),
                  r)
                : r === this.parent
                ? this
                : r.addLayer(this.id, this.replay);
            }),
            (t.prototype.toObject = function () {
              return C(C({}, this.parent.toObject()), this.data);
            }),
            (t.prototype.findChildRefIds = function (e) {
              var n = this.parent.findChildRefIds(e);
              return Mt.call(this.data, e)
                ? C(C({}, n), i.prototype.findChildRefIds.call(this, e))
                : n;
            }),
            (t.prototype.getStorage = function () {
              for (var e = this.parent; e.parent; ) e = e.parent;
              return e.getStorage.apply(e, arguments);
            }),
            t
          );
        })(Sl),
        GW = (function (i) {
          function t(e) {
            return (
              i.call(
                this,
                "EntityStore.Stump",
                e,
                function () {},
                new Kk(e.group.caching, e.group)
              ) || this
            );
          }
          return (
            xi(t, i),
            (t.prototype.removeLayer = function () {
              return this;
            }),
            (t.prototype.merge = function () {
              return this.parent.merge.apply(this.parent, arguments);
            }),
            t
          );
        })(gr);
      function qW(i, t, e) {
        var n = i[e],
          r = t[e];
        return Ct(n, r) ? n : r;
      }
      function Tl(i) {
        return !!(i instanceof Sl && i.group.caching);
      }
      function Zk(i) {
        return [
          i.selectionSet,
          i.objectOrReference,
          i.context,
          i.context.canonizeResults,
        ];
      }
      var WW = (function () {
        function i(t) {
          var e = this;
          (this.knownResults = new (lo ? WeakMap : Map)()),
            (this.config = $u(t, {
              addTypename: !1 !== t.addTypename,
              canonizeResults: qk(t),
            })),
            (this.canon = t.canon || new L_()),
            (this.executeSelectionSet = Qu(
              function (n) {
                var r,
                  o = n.context.canonizeResults,
                  s = Zk(n);
                s[3] = !o;
                var a = (r = e.executeSelectionSet).peek.apply(r, s);
                return a
                  ? o
                    ? C(C({}, a), { result: e.canon.admit(a.result) })
                    : a
                  : (Xk(n.context.store, n.enclosingRef.__ref),
                    e.execSelectionSetImpl(n));
              },
              {
                max: this.config.resultCacheMaxSize,
                keyArgs: Zk,
                makeCacheKey: function (n, r, o, s) {
                  if (Tl(o.store))
                    return o.store.makeCacheKey(
                      n,
                      Fe(r) ? r.__ref : r,
                      o.varString,
                      s
                    );
                },
              }
            )),
            (this.executeSubSelectedArray = Qu(
              function (n) {
                return (
                  Xk(n.context.store, n.enclosingRef.__ref),
                  e.execSubSelectedArrayImpl(n)
                );
              },
              {
                max: this.config.resultCacheMaxSize,
                makeCacheKey: function (n) {
                  var r = n.field,
                    o = n.array,
                    s = n.context;
                  if (Tl(s.store))
                    return s.store.makeCacheKey(r, o, s.varString);
                },
              }
            ));
        }
        return (
          (i.prototype.resetCanon = function () {
            this.canon = new L_();
          }),
          (i.prototype.diffQueryAgainstStore = function (t) {
            var e = t.store,
              n = t.query,
              r = t.rootId,
              o = void 0 === r ? "ROOT_QUERY" : r,
              s = t.variables,
              a = t.returnPartialData,
              l = void 0 === a || a,
              c = t.canonizeResults,
              d = void 0 === c ? this.config.canonizeResults : c,
              u = this.config.cache.policies;
            s = C(C({}, T_(OT(n))), s);
            var m,
              h = Es(o),
              f = this.executeSelectionSet({
                selectionSet: S_(n).selectionSet,
                objectOrReference: h,
                enclosingRef: h,
                context: C(
                  {
                    store: e,
                    query: n,
                    policies: u,
                    variables: s,
                    varString: co(s),
                    canonizeResults: d,
                  },
                  Qk(n, this.config.fragments)
                ),
              });
            if (
              f.missing &&
              ((m = [new Uk(QW(f.missing), f.missing, n, s)]), !l)
            )
              throw m[0];
            return { result: f.result, complete: !m, missing: m };
          }),
          (i.prototype.isFresh = function (t, e, n, r) {
            if (Tl(r.store) && this.knownResults.get(t) === n) {
              var o = this.executeSelectionSet.peek(
                n,
                e,
                r,
                this.canon.isKnown(t)
              );
              if (o && t === o.result) return !0;
            }
            return !1;
          }),
          (i.prototype.execSelectionSetImpl = function (t) {
            var e = this,
              n = t.selectionSet,
              r = t.objectOrReference,
              o = t.enclosingRef,
              s = t.context;
            if (
              Fe(r) &&
              !s.policies.rootTypenamesById[r.__ref] &&
              !s.store.has(r.__ref)
            )
              return {
                result: this.canon.empty,
                missing: "Dangling reference to missing ".concat(
                  r.__ref,
                  " object"
                ),
              };
            var h,
              a = s.variables,
              l = s.policies,
              d = s.store.getFieldValue(r, "__typename"),
              u = [],
              f = new fr();
            function m(_, x) {
              var T;
              return (
                _.missing && (h = f.merge(h, (((T = {})[x] = _.missing), T))),
                _.result
              );
            }
            this.config.addTypename &&
              "string" == typeof d &&
              !l.rootIdsByTypename[d] &&
              u.push({ __typename: d });
            var p = new Set(n.selections);
            p.forEach(function (_) {
              var x, T;
              if (ju(_, a))
                if (so(_)) {
                  var I = l.readField(
                      {
                        fieldName: _.name.value,
                        field: _,
                        variables: s.variables,
                        from: r,
                      },
                      s
                    ),
                    R = oo(_);
                  void 0 === I
                    ? U_.added(_) ||
                      (h = f.merge(
                        h,
                        (((x = {})[R] = "Can't find field '"
                          .concat(_.name.value, "' on ")
                          .concat(
                            Fe(r)
                              ? r.__ref + " object"
                              : "object " + JSON.stringify(r, null, 2)
                          )),
                        x)
                      ))
                    : ot(I)
                    ? (I = m(
                        e.executeSubSelectedArray({
                          field: _,
                          array: I,
                          enclosingRef: o,
                          context: s,
                        }),
                        R
                      ))
                    : _.selectionSet
                    ? null != I &&
                      (I = m(
                        e.executeSelectionSet({
                          selectionSet: _.selectionSet,
                          objectOrReference: I,
                          enclosingRef: Fe(I) ? I : o,
                          context: s,
                        }),
                        R
                      ))
                    : s.canonizeResults && (I = e.canon.pass(I)),
                    void 0 !== I && u.push((((T = {})[R] = I), T));
                } else {
                  var z = x_(_, s.lookupFragment);
                  if (!z && _.kind === xt.FRAGMENT_SPREAD)
                    throw __DEV__
                      ? new Ce("No fragment named ".concat(_.name.value))
                      : new Ce(5);
                  z &&
                    l.fragmentMatches(z, d) &&
                    z.selectionSet.selections.forEach(p.add, p);
                }
            });
            var b = { result: N_(u), missing: h },
              y = s.canonizeResults ? this.canon.admit(b) : sb(b);
            return y.result && this.knownResults.set(y.result, n), y;
          }),
          (i.prototype.execSubSelectedArrayImpl = function (t) {
            var a,
              e = this,
              n = t.field,
              r = t.array,
              o = t.enclosingRef,
              s = t.context,
              l = new fr();
            function c(d, u) {
              var h;
              return (
                d.missing && (a = l.merge(a, (((h = {})[u] = d.missing), h))),
                d.result
              );
            }
            return (
              n.selectionSet && (r = r.filter(s.store.canRead)),
              (r = r.map(function (d, u) {
                return null === d
                  ? null
                  : ot(d)
                  ? c(
                      e.executeSubSelectedArray({
                        field: n,
                        array: d,
                        enclosingRef: o,
                        context: s,
                      }),
                      u
                    )
                  : n.selectionSet
                  ? c(
                      e.executeSelectionSet({
                        selectionSet: n.selectionSet,
                        objectOrReference: d,
                        enclosingRef: Fe(d) ? d : o,
                        context: s,
                      }),
                      u
                    )
                  : (__DEV__ &&
                      (function YW(i, t, e) {
                        if (!t.selectionSet) {
                          var n = new Set([e]);
                          n.forEach(function (r) {
                            rt(r) &&
                              (__DEV__
                                ? O(
                                    !Fe(r),
                                    "Missing selection set for object of type "
                                      .concat(
                                        (function UW(i, t) {
                                          return Fe(t)
                                            ? i.get(t.__ref, "__typename")
                                            : t && t.__typename;
                                        })(i, r),
                                        " returned for query field "
                                      )
                                      .concat(t.name.value)
                                  )
                                : O(!Fe(r), 6),
                              Object.values(r).forEach(n.add, n));
                          });
                        }
                      })(s.store, n, d),
                    d);
              })),
              {
                result: s.canonizeResults ? this.canon.admit(r) : r,
                missing: a,
              }
            );
          }),
          i
        );
      })();
      function QW(i) {
        try {
          JSON.stringify(i, function (t, e) {
            if ("string" == typeof e) throw e;
            return e;
          });
        } catch (t) {
          return t;
        }
      }
      var Jk = Object.create(null);
      function db(i) {
        var t = JSON.stringify(i);
        return Jk[t] || (Jk[t] = Object.create(null));
      }
      function eI(i) {
        var t = db(i);
        return (
          t.keyFieldsFn ||
          (t.keyFieldsFn = function (e, n) {
            var r = function (s, a) {
                return n.readField(a, s);
              },
              o = (n.keyObject = ub(i, function (s) {
                var a = Rs(n.storeObject, s, r);
                return (
                  void 0 === a &&
                    e !== n.storeObject &&
                    Mt.call(e, s[0]) &&
                    (a = Rs(e, s, nI)),
                  __DEV__
                    ? O(
                        void 0 !== a,
                        "Missing field '"
                          .concat(
                            s.join("."),
                            "' while extracting keyFields from "
                          )
                          .concat(JSON.stringify(e))
                      )
                    : O(void 0 !== a, 2),
                  a
                );
              }));
            return "".concat(n.typename, ":").concat(JSON.stringify(o));
          })
        );
      }
      function tI(i) {
        var t = db(i);
        return (
          t.keyArgsFn ||
          (t.keyArgsFn = function (e, n) {
            var r = n.field,
              o = n.variables,
              s = n.fieldName,
              a = ub(i, function (c) {
                var d = c[0],
                  u = d.charAt(0);
                if ("@" !== u)
                  if ("$" !== u) {
                    if (e) return Rs(e, c);
                  } else {
                    var p = d.slice(1);
                    if (o && Mt.call(o, p)) {
                      var g = c.slice(0);
                      return (g[0] = p), Rs(o, g);
                    }
                  }
                else if (r && Pi(r.directives)) {
                  var h = d.slice(1),
                    f = r.directives.find(function (b) {
                      return b.name.value === h;
                    }),
                    m = f && Lu(f, o);
                  return m && Rs(m, c.slice(1));
                }
              }),
              l = JSON.stringify(a);
            return (e || "{}" !== l) && (s += ":" + l), s;
          })
        );
      }
      function ub(i, t) {
        var e = new fr();
        return iI(i).reduce(function (n, r) {
          var o,
            s = t(r);
          if (void 0 !== s) {
            for (var a = r.length - 1; a >= 0; --a)
              ((o = {})[r[a]] = s), (s = o);
            n = e.merge(n, s);
          }
          return n;
        }, Object.create(null));
      }
      function iI(i) {
        var t = db(i);
        if (!t.paths) {
          var e = (t.paths = []),
            n = [];
          i.forEach(function (r, o) {
            ot(r)
              ? (iI(r).forEach(function (s) {
                  return e.push(n.concat(s));
                }),
                (n.length = 0))
              : (n.push(r),
                ot(i[o + 1]) || (e.push(n.slice(0)), (n.length = 0)));
          });
        }
        return t.paths;
      }
      function nI(i, t) {
        return i[t];
      }
      function Rs(i, t, e) {
        return (
          (e = e || nI),
          rI(
            t.reduce(function n(r, o) {
              return ot(r)
                ? r.map(function (s) {
                    return n(s, o);
                  })
                : r && e(r, o);
            }, i)
          )
        );
      }
      function rI(i) {
        return rt(i)
          ? ot(i)
            ? i.map(rI)
            : ub(Object.keys(i).sort(), function (t) {
                return Rs(i, t);
              })
          : i;
      }
      function hb(i) {
        return void 0 !== i.args
          ? i.args
          : i.field
          ? Lu(i.field, i.variables)
          : null;
      }
      C_.setStringify(co);
      var XW = function () {},
        oI = function (i, t) {
          return t.fieldName;
        },
        sI = function (i, t, e) {
          return (0, e.mergeObjects)(i, t);
        },
        aI = function (i, t) {
          return t;
        },
        ZW = (function () {
          function i(t) {
            (this.config = t),
              (this.typePolicies = Object.create(null)),
              (this.toBeAdded = Object.create(null)),
              (this.supertypeMap = new Map()),
              (this.fuzzySubtypes = new Map()),
              (this.rootIdsByTypename = Object.create(null)),
              (this.rootTypenamesById = Object.create(null)),
              (this.usingPossibleTypes = !1),
              (this.config = C({ dataIdFromObject: $k }, t)),
              (this.cache = this.config.cache),
              this.setRootTypename("Query"),
              this.setRootTypename("Mutation"),
              this.setRootTypename("Subscription"),
              t.possibleTypes && this.addPossibleTypes(t.possibleTypes),
              t.typePolicies && this.addTypePolicies(t.typePolicies);
          }
          return (
            (i.prototype.identify = function (t, e) {
              var n,
                r = this,
                o =
                  (e &&
                    (e.typename ||
                      (null === (n = e.storeObject) || void 0 === n
                        ? void 0
                        : n.__typename))) ||
                  t.__typename;
              if (o === this.rootTypenamesById.ROOT_QUERY)
                return ["ROOT_QUERY"];
              for (
                var l,
                  s = (e && e.storeObject) || t,
                  a = C(C({}, e), {
                    typename: o,
                    storeObject: s,
                    readField:
                      (e && e.readField) ||
                      function () {
                        var h = fb(arguments, s);
                        return r.readField(h, {
                          store: r.cache.data,
                          variables: h.variables,
                        });
                      },
                  }),
                  c = o && this.getTypePolicy(o),
                  d = (c && c.keyFn) || this.config.dataIdFromObject;
                d;

              ) {
                var u = d(t, a);
                if (!ot(u)) {
                  l = u;
                  break;
                }
                d = eI(u);
              }
              return (
                (l = l ? String(l) : void 0),
                a.keyObject ? [l, a.keyObject] : [l]
              );
            }),
            (i.prototype.addTypePolicies = function (t) {
              var e = this;
              Object.keys(t).forEach(function (n) {
                var r = t[n],
                  o = r.queryType,
                  s = r.mutationType,
                  a = r.subscriptionType,
                  l = Cr(r, ["queryType", "mutationType", "subscriptionType"]);
                o && e.setRootTypename("Query", n),
                  s && e.setRootTypename("Mutation", n),
                  a && e.setRootTypename("Subscription", n),
                  Mt.call(e.toBeAdded, n)
                    ? e.toBeAdded[n].push(l)
                    : (e.toBeAdded[n] = [l]);
              });
            }),
            (i.prototype.updateTypePolicy = function (t, e) {
              var n = this,
                r = this.getTypePolicy(t),
                o = e.keyFields,
                s = e.fields;
              function a(l, c) {
                l.merge =
                  "function" == typeof c
                    ? c
                    : !0 === c
                    ? sI
                    : !1 === c
                    ? aI
                    : l.merge;
              }
              a(r, e.merge),
                (r.keyFn =
                  !1 === o
                    ? XW
                    : ot(o)
                    ? eI(o)
                    : "function" == typeof o
                    ? o
                    : r.keyFn),
                s &&
                  Object.keys(s).forEach(function (l) {
                    var c = n.getFieldPolicy(t, l, !0),
                      d = s[l];
                    if ("function" == typeof d) c.read = d;
                    else {
                      var u = d.keyArgs,
                        h = d.read,
                        f = d.merge;
                      (c.keyFn =
                        !1 === u
                          ? oI
                          : ot(u)
                          ? tI(u)
                          : "function" == typeof u
                          ? u
                          : c.keyFn),
                        "function" == typeof h && (c.read = h),
                        a(c, f);
                    }
                    c.read && c.merge && (c.keyFn = c.keyFn || oI);
                  });
            }),
            (i.prototype.setRootTypename = function (t, e) {
              void 0 === e && (e = t);
              var n = "ROOT_" + t.toUpperCase(),
                r = this.rootTypenamesById[n];
              e !== r &&
                (__DEV__
                  ? O(
                      !r || r === t,
                      "Cannot change root ".concat(
                        t,
                        " __typename more than once"
                      )
                    )
                  : O(!r || r === t, 3),
                r && delete this.rootIdsByTypename[r],
                (this.rootIdsByTypename[e] = n),
                (this.rootTypenamesById[n] = e));
            }),
            (i.prototype.addPossibleTypes = function (t) {
              var e = this;
              (this.usingPossibleTypes = !0),
                Object.keys(t).forEach(function (n) {
                  e.getSupertypeSet(n, !0),
                    t[n].forEach(function (r) {
                      e.getSupertypeSet(r, !0).add(n);
                      var o = r.match(Wk);
                      (!o || o[0] !== r) &&
                        e.fuzzySubtypes.set(r, new RegExp(r));
                    });
                });
            }),
            (i.prototype.getTypePolicy = function (t) {
              var e = this;
              if (!Mt.call(this.typePolicies, t)) {
                var n = (this.typePolicies[t] = Object.create(null));
                n.fields = Object.create(null);
                var r = this.supertypeMap.get(t);
                r &&
                  r.size &&
                  r.forEach(function (s) {
                    var a = e.getTypePolicy(s),
                      l = a.fields,
                      c = Cr(a, ["fields"]);
                    Object.assign(n, c), Object.assign(n.fields, l);
                  });
              }
              var o = this.toBeAdded[t];
              return (
                o &&
                  o.length &&
                  o.splice(0).forEach(function (s) {
                    e.updateTypePolicy(t, s);
                  }),
                this.typePolicies[t]
              );
            }),
            (i.prototype.getFieldPolicy = function (t, e, n) {
              if (t) {
                var r = this.getTypePolicy(t).fields;
                return r[e] || (n && (r[e] = Object.create(null)));
              }
            }),
            (i.prototype.getSupertypeSet = function (t, e) {
              var n = this.supertypeMap.get(t);
              return !n && e && this.supertypeMap.set(t, (n = new Set())), n;
            }),
            (i.prototype.fragmentMatches = function (t, e, n, r) {
              var o = this;
              if (!t.typeCondition) return !0;
              if (!e) return !1;
              var s = t.typeCondition.name.value;
              if (e === s) return !0;
              if (this.usingPossibleTypes && this.supertypeMap.has(s))
                for (
                  var a = this.getSupertypeSet(e, !0),
                    l = [a],
                    c = function (m) {
                      var p = o.getSupertypeSet(m, !1);
                      p && p.size && l.indexOf(p) < 0 && l.push(p);
                    },
                    d = !(!n || !this.fuzzySubtypes.size),
                    u = !1,
                    h = 0;
                  h < l.length;
                  ++h
                ) {
                  var f = l[h];
                  if (f.has(s))
                    return (
                      a.has(s) ||
                        (u &&
                          __DEV__ &&
                          O.warn(
                            "Inferring subtype "
                              .concat(e, " of supertype ")
                              .concat(s)
                          ),
                        a.add(s)),
                      !0
                    );
                  f.forEach(c),
                    d &&
                      h === l.length - 1 &&
                      ab(t.selectionSet, n, r) &&
                      ((d = !1),
                      (u = !0),
                      this.fuzzySubtypes.forEach(function (m, p) {
                        var g = e.match(m);
                        g && g[0] === e && c(p);
                      }));
                }
              return !1;
            }),
            (i.prototype.hasKeyArgs = function (t, e) {
              var n = this.getFieldPolicy(t, e, !1);
              return !(!n || !n.keyFn);
            }),
            (i.prototype.getStoreFieldName = function (t) {
              var o,
                e = t.typename,
                n = t.fieldName,
                r = this.getFieldPolicy(e, n, !1),
                s = r && r.keyFn;
              if (s && e)
                for (
                  var a = {
                      typename: e,
                      fieldName: n,
                      field: t.field || null,
                      variables: t.variables,
                    },
                    l = hb(t);
                  s;

                ) {
                  var c = s(l, a);
                  if (!ot(c)) {
                    o = c || n;
                    break;
                  }
                  s = tI(c);
                }
              return (
                void 0 === o &&
                  (o = t.field
                    ? (function O6(i, t) {
                        var e = null;
                        i.directives &&
                          ((e = {}),
                          i.directives.forEach(function (r) {
                            (e[r.name.value] = {}),
                              r.arguments &&
                                r.arguments.forEach(function (o) {
                                  return Ms(
                                    e[r.name.value],
                                    o.name,
                                    o.value,
                                    t
                                  );
                                });
                          }));
                        var n = null;
                        return (
                          i.arguments &&
                            i.arguments.length &&
                            ((n = {}),
                            i.arguments.forEach(function (r) {
                              return Ms(n, r.name, r.value, t);
                            })),
                          C_(i.name.value, n, e)
                        );
                      })(t.field, t.variables)
                    : C_(n, hb(t))),
                !1 === o ? n : n === pr(o) ? o : n + ":" + o
              );
            }),
            (i.prototype.readField = function (t, e) {
              var n = t.from;
              if (n && (t.field || t.fieldName)) {
                if (void 0 === t.typename) {
                  var o = e.store.getFieldValue(n, "__typename");
                  o && (t.typename = o);
                }
                var s = this.getStoreFieldName(t),
                  a = pr(s),
                  l = e.store.getFieldValue(n, s),
                  c = this.getFieldPolicy(t.typename, a, !1),
                  d = c && c.read;
                if (d) {
                  var u = lI(
                    this,
                    n,
                    t,
                    e,
                    e.store.getStorage(Fe(n) ? n.__ref : n, s)
                  );
                  return J_.withValue(this.cache, d, [l, u]);
                }
                return l;
              }
            }),
            (i.prototype.getReadFunction = function (t, e) {
              var n = this.getFieldPolicy(t, e, !1);
              return n && n.read;
            }),
            (i.prototype.getMergeFunction = function (t, e, n) {
              var r = this.getFieldPolicy(t, e, !1),
                o = r && r.merge;
              return !o && n && (o = (r = this.getTypePolicy(n)) && r.merge), o;
            }),
            (i.prototype.runMergeFunction = function (t, e, n, r, o) {
              var s = n.field,
                a = n.typename,
                l = n.merge;
              return l === sI
                ? cI(r.store)(t, e)
                : l === aI
                ? e
                : (r.overwrite && (t = void 0),
                  l(
                    t,
                    e,
                    lI(
                      this,
                      void 0,
                      {
                        typename: a,
                        fieldName: s.name.value,
                        field: s,
                        variables: r.variables,
                      },
                      r,
                      o || Object.create(null)
                    )
                  ));
            }),
            i
          );
        })();
      function lI(i, t, e, n, r) {
        var o = i.getStoreFieldName(e),
          s = pr(o),
          a = e.variables || n.variables,
          l = n.store,
          c = l.toReference,
          d = l.canRead;
        return {
          args: hb(e),
          field: e.field || null,
          fieldName: s,
          storeFieldName: o,
          variables: a,
          isReference: Fe,
          toReference: c,
          storage: r,
          cache: i.cache,
          canRead: d,
          readField: function () {
            return i.readField(fb(arguments, t, a), n);
          },
          mergeObjects: cI(n.store),
        };
      }
      function fb(i, t, e) {
        var s,
          n = i[0];
        return (
          "string" == typeof n
            ? (s = { fieldName: n, from: i.length > 1 ? i[1] : t })
            : ((s = C({}, n)), Mt.call(s, "from") || (s.from = t)),
          __DEV__ &&
            void 0 === s.from &&
            __DEV__ &&
            O.warn(
              "Undefined 'from' passed to readField with arguments ".concat(
                (function KW(i) {
                  var t = $_("stringifyForDisplay");
                  return JSON.stringify(i, function (e, n) {
                    return void 0 === n ? t : n;
                  })
                    .split(JSON.stringify(t))
                    .join("<undefined>");
                })(Array.from(i))
              )
            ),
          void 0 === s.variables && (s.variables = e),
          s
        );
      }
      function cI(i) {
        return function (e, n) {
          if (ot(e) || ot(n))
            throw __DEV__
              ? new Ce("Cannot automatically merge arrays")
              : new Ce(4);
          if (rt(e) && rt(n)) {
            var r = i.getFieldValue(e, "__typename"),
              o = i.getFieldValue(n, "__typename");
            if (r && o && r !== o) return n;
            if (Fe(e) && As(n)) return i.merge(e.__ref, n), e;
            if (As(e) && Fe(n)) return i.merge(e, n.__ref), n;
            if (As(e) && As(n)) return C(C({}, e), n);
          }
          return n;
        };
      }
      function mb(i, t, e) {
        var n = "".concat(t).concat(e),
          r = i.flavors.get(n);
        return (
          r ||
            i.flavors.set(
              n,
              (r =
                i.clientOnly === t && i.deferred === e
                  ? i
                  : C(C({}, i), { clientOnly: t, deferred: e }))
            ),
          r
        );
      }
      var JW = (function () {
          function i(t, e, n) {
            (this.cache = t), (this.reader = e), (this.fragments = n);
          }
          return (
            (i.prototype.writeToStore = function (t, e) {
              var n = this,
                r = e.query,
                o = e.result,
                s = e.dataId,
                a = e.variables,
                l = e.overwrite,
                c = bl(r),
                d = (function $W() {
                  return new fr();
                })();
              a = C(C({}, T_(c)), a);
              var u = C(
                  C(
                    {
                      store: t,
                      written: Object.create(null),
                      merge: function (f, m) {
                        return d.merge(f, m);
                      },
                      variables: a,
                      varString: co(a),
                    },
                    Qk(r, this.fragments)
                  ),
                  {
                    overwrite: !!l,
                    incomingById: new Map(),
                    clientOnly: !1,
                    deferred: !1,
                    flavors: new Map(),
                  }
                ),
                h = this.processSelectionSet({
                  result: o || Object.create(null),
                  dataId: s,
                  selectionSet: c.selectionSet,
                  mergeTree: { map: new Map() },
                  context: u,
                });
              if (!Fe(h))
                throw __DEV__
                  ? new Ce(
                      "Could not identify object ".concat(JSON.stringify(o))
                    )
                  : new Ce(7);
              return (
                u.incomingById.forEach(function (f, m) {
                  var p = f.storeObject,
                    g = f.mergeTree,
                    b = f.fieldNodeSet,
                    y = Es(m);
                  if (g && g.map.size) {
                    var _ = n.applyMerges(g, y, p, u);
                    if (Fe(_)) return;
                    p = _;
                  }
                  if (__DEV__ && !u.overwrite) {
                    var x = Object.create(null);
                    b.forEach(function (R) {
                      R.selectionSet && (x[R.name.value] = !0);
                    }),
                      Object.keys(p).forEach(function (R) {
                        (function (R) {
                          return !0 === x[pr(R)];
                        })(R) &&
                          !(function (R) {
                            var z = g && g.map.get(R);
                            return Boolean(z && z.info && z.info.merge);
                          })(R) &&
                          (function eQ(i, t, e, n) {
                            var r = function (u) {
                                var h = n.getFieldValue(u, e);
                                return "object" == typeof h && h;
                              },
                              o = r(i);
                            if (o) {
                              var s = r(t);
                              if (
                                s &&
                                !Fe(o) &&
                                !Ct(o, s) &&
                                !Object.keys(o).every(function (u) {
                                  return void 0 !== n.getFieldValue(s, u);
                                })
                              ) {
                                var a =
                                    n.getFieldValue(i, "__typename") ||
                                    n.getFieldValue(t, "__typename"),
                                  l = pr(e),
                                  c = "".concat(a, ".").concat(l);
                                if (!fI.has(c)) {
                                  fI.add(c);
                                  var d = [];
                                  !ot(o) &&
                                    !ot(s) &&
                                    [o, s].forEach(function (u) {
                                      var h = n.getFieldValue(u, "__typename");
                                      "string" == typeof h &&
                                        !d.includes(h) &&
                                        d.push(h);
                                    }),
                                    __DEV__ &&
                                      O.warn(
                                        "Cache data may be lost when replacing the "
                                          .concat(l, " field of a ")
                                          .concat(
                                            a,
                                            " object.\n\nTo address this problem (which is not a bug in Apollo Client), "
                                          )
                                          .concat(
                                            d.length
                                              ? "either ensure all objects of type " +
                                                  d.join(" and ") +
                                                  " have an ID or a custom merge function, or "
                                              : "",
                                            "define a custom merge function for the "
                                          )
                                          .concat(
                                            c,
                                            " field, so InMemoryCache can safely merge these objects:\n\n  existing: "
                                          )
                                          .concat(
                                            JSON.stringify(o).slice(0, 1e3),
                                            "\n  incoming: "
                                          )
                                          .concat(
                                            JSON.stringify(s).slice(0, 1e3),
                                            "\n\nFor more information about these options, please refer to the documentation:\n\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\n"
                                          )
                                      );
                                }
                              }
                            }
                          })(y, p, R, u.store);
                      });
                  }
                  t.merge(m, p);
                }),
                t.retain(h.__ref),
                h
              );
            }),
            (i.prototype.processSelectionSet = function (t) {
              var e = this,
                n = t.dataId,
                r = t.result,
                o = t.selectionSet,
                s = t.context,
                a = t.mergeTree,
                l = this.cache.policies,
                c = Object.create(null),
                d =
                  (n && l.rootTypenamesById[n]) ||
                  D_(r, o, s.fragmentMap) ||
                  (n && s.store.get(n, "__typename"));
              "string" == typeof d && (c.__typename = d);
              var u = function () {
                  var _ = fb(arguments, c, s.variables);
                  if (Fe(_.from)) {
                    var x = s.incomingById.get(_.from.__ref);
                    if (x) {
                      var T = l.readField(
                        C(C({}, _), { from: x.storeObject }),
                        s
                      );
                      if (void 0 !== T) return T;
                    }
                  }
                  return l.readField(_, s);
                },
                h = new Set();
              this.flattenFields(o, r, s, d).forEach(function (_, x) {
                var T,
                  I = oo(x),
                  R = r[I];
                if ((h.add(x), void 0 !== R)) {
                  var z = l.getStoreFieldName({
                      typename: d,
                      fieldName: x.name.value,
                      field: x,
                      variables: _.variables,
                    }),
                    De = uI(a, z),
                    Oe = e.processFieldValue(
                      R,
                      x,
                      x.selectionSet ? mb(_, !1, !1) : _,
                      De
                    ),
                    wn = void 0;
                  x.selectionSet &&
                    (Fe(Oe) || As(Oe)) &&
                    (wn = u("__typename", Oe));
                  var Ni = l.getMergeFunction(d, x.name.value, wn);
                  Ni
                    ? (De.info = { field: x, typename: d, merge: Ni })
                    : hI(a, z),
                    (c = _.merge(c, (((T = {})[z] = Oe), T)));
                } else __DEV__ && !_.clientOnly && !_.deferred && !U_.added(x) && !l.getReadFunction(d, x.name.value) && __DEV__ && O.error("Missing field '".concat(oo(x), "' while writing result ").concat(JSON.stringify(r, null, 2)).substring(0, 1e3));
              });
              try {
                var f = l.identify(r, {
                    typename: d,
                    selectionSet: o,
                    fragmentMap: s.fragmentMap,
                    storeObject: c,
                    readField: u,
                  }),
                  p = f[1];
                (n = n || f[0]), p && (c = s.merge(c, p));
              } catch (_) {
                if (!n) throw _;
              }
              if ("string" == typeof n) {
                var g = Es(n),
                  b = s.written[n] || (s.written[n] = []);
                if (
                  b.indexOf(o) >= 0 ||
                  (b.push(o), this.reader && this.reader.isFresh(r, g, o, s))
                )
                  return g;
                var y = s.incomingById.get(n);
                return (
                  y
                    ? ((y.storeObject = s.merge(y.storeObject, c)),
                      (y.mergeTree = pb(y.mergeTree, a)),
                      h.forEach(function (_) {
                        return y.fieldNodeSet.add(_);
                      }))
                    : s.incomingById.set(n, {
                        storeObject: c,
                        mergeTree: Ku(a) ? void 0 : a,
                        fieldNodeSet: h,
                      }),
                  g
                );
              }
              return c;
            }),
            (i.prototype.processFieldValue = function (t, e, n, r) {
              var o = this;
              return e.selectionSet && null !== t
                ? ot(t)
                  ? t.map(function (s, a) {
                      var l = o.processFieldValue(s, e, n, uI(r, a));
                      return hI(r, a), l;
                    })
                  : this.processSelectionSet({
                      result: t,
                      selectionSet: e.selectionSet,
                      context: n,
                      mergeTree: r,
                    })
                : __DEV__
                ? hk(t)
                : t;
            }),
            (i.prototype.flattenFields = function (t, e, n, r) {
              void 0 === r && (r = D_(e, t, n.fragmentMap));
              var o = new Map(),
                s = this.cache.policies,
                a = new wl(!1);
              return (
                (function l(c, d) {
                  var u = a.lookup(c, d.clientOnly, d.deferred);
                  u.visited ||
                    ((u.visited = !0),
                    c.selections.forEach(function (h) {
                      if (ju(h, n.variables)) {
                        var f = d.clientOnly,
                          m = d.deferred;
                        if (
                          (!(f && m) &&
                            Pi(h.directives) &&
                            h.directives.forEach(function (b) {
                              var y = b.name.value;
                              if (("client" === y && (f = !0), "defer" === y)) {
                                var _ = Lu(b, n.variables);
                                (!_ || !1 !== _.if) && (m = !0);
                              }
                            }),
                          so(h))
                        ) {
                          var p = o.get(h);
                          p && ((f = f && p.clientOnly), (m = m && p.deferred)),
                            o.set(h, mb(n, f, m));
                        } else {
                          var g = x_(h, n.lookupFragment);
                          if (!g && h.kind === xt.FRAGMENT_SPREAD)
                            throw __DEV__
                              ? new Ce(
                                  "No fragment named ".concat(h.name.value)
                                )
                              : new Ce(8);
                          g &&
                            s.fragmentMatches(g, r, e, n.variables) &&
                            l(g.selectionSet, mb(n, f, m));
                        }
                      }
                    }));
                })(t, n),
                o
              );
            }),
            (i.prototype.applyMerges = function (t, e, n, r, o) {
              var s,
                a = this;
              if (t.map.size && !Fe(n)) {
                var l = ot(n) || (!Fe(e) && !As(e)) ? void 0 : e,
                  c = n;
                l && !o && (o = [Fe(l) ? l.__ref : l]);
                var d,
                  u = function (h, f) {
                    return ot(h)
                      ? "number" == typeof f
                        ? h[f]
                        : void 0
                      : r.store.getFieldValue(h, String(f));
                  };
                t.map.forEach(function (h, f) {
                  var m = u(l, f),
                    p = u(c, f);
                  if (void 0 !== p) {
                    o && o.push(f);
                    var g = a.applyMerges(h, m, p, r, o);
                    g !== p && (d = d || new Map()).set(f, g),
                      o && O(o.pop() === f);
                  }
                }),
                  d &&
                    ((n = ot(c) ? c.slice(0) : C({}, c)),
                    d.forEach(function (h, f) {
                      n[f] = h;
                    }));
              }
              return t.info
                ? this.cache.policies.runMergeFunction(
                    e,
                    n,
                    t.info,
                    r,
                    o && (s = r.store).getStorage.apply(s, o)
                  )
                : n;
            }),
            i
          );
        })(),
        dI = [];
      function uI(i, t) {
        var e = i.map;
        return e.has(t) || e.set(t, dI.pop() || { map: new Map() }), e.get(t);
      }
      function pb(i, t) {
        if (i === t || !t || Ku(t)) return i;
        if (!i || Ku(i)) return t;
        var e = i.info && t.info ? C(C({}, i.info), t.info) : i.info || t.info,
          n = i.map.size && t.map.size,
          o = { info: e, map: n ? new Map() : i.map.size ? i.map : t.map };
        if (n) {
          var s = new Set(t.map.keys());
          i.map.forEach(function (a, l) {
            o.map.set(l, pb(a, t.map.get(l))), s.delete(l);
          }),
            s.forEach(function (a) {
              o.map.set(a, pb(t.map.get(a), i.map.get(a)));
            });
        }
        return o;
      }
      function Ku(i) {
        return !i || !(i.info || i.map.size);
      }
      function hI(i, t) {
        var e = i.map,
          n = e.get(t);
        n && Ku(n) && (dI.push(n), e.delete(t));
      }
      var fI = new Set(),
        mI = (function (i) {
          function t(e) {
            void 0 === e && (e = {});
            var n = i.call(this) || this;
            return (
              (n.watches = new Set()),
              (n.typenameDocumentCache = new Map()),
              (n.makeVar = EW),
              (n.txCount = 0),
              (n.config = (function zW(i) {
                return $u(Gk, i);
              })(e)),
              (n.addTypename = !!n.config.addTypename),
              (n.policies = new ZW({
                cache: n,
                dataIdFromObject: n.config.dataIdFromObject,
                possibleTypes: n.config.possibleTypes,
                typePolicies: n.config.typePolicies,
              })),
              n.init(),
              n
            );
          }
          return (
            xi(t, i),
            (t.prototype.init = function () {
              var e = (this.data = new Sl.Root({
                policies: this.policies,
                resultCaching: this.config.resultCaching,
              }));
              (this.optimisticData = e.stump), this.resetResultCache();
            }),
            (t.prototype.resetResultCache = function (e) {
              var n = this,
                r = this.storeReader,
                o = this.config.fragments;
              (this.storeWriter = new JW(
                this,
                (this.storeReader = new WW({
                  cache: this,
                  addTypename: this.addTypename,
                  resultCacheMaxSize: this.config.resultCacheMaxSize,
                  canonizeResults: qk(this.config),
                  canon: e ? void 0 : r && r.canon,
                  fragments: o,
                })),
                o
              )),
                (this.maybeBroadcastWatch = Qu(
                  function (s, a) {
                    return n.broadcastWatch(s, a);
                  },
                  {
                    max: this.config.resultCacheMaxSize,
                    makeCacheKey: function (s) {
                      var a = s.optimistic ? n.optimisticData : n.data;
                      if (Tl(a))
                        return a.makeCacheKey(
                          s.query,
                          s.callback,
                          co({
                            optimistic: s.optimistic,
                            id: s.id,
                            variables: s.variables,
                          })
                        );
                    },
                  }
                )),
                new Set([this.data.group, this.optimisticData.group]).forEach(
                  function (s) {
                    return s.resetCaching();
                  }
                );
            }),
            (t.prototype.restore = function (e) {
              return this.init(), e && this.data.replace(e), this;
            }),
            (t.prototype.extract = function (e) {
              return (
                void 0 === e && (e = !1),
                (e ? this.optimisticData : this.data).extract()
              );
            }),
            (t.prototype.read = function (e) {
              var n = e.returnPartialData,
                r = void 0 !== n && n;
              try {
                return (
                  this.storeReader.diffQueryAgainstStore(
                    C(C({}, e), {
                      store: e.optimistic ? this.optimisticData : this.data,
                      config: this.config,
                      returnPartialData: r,
                    })
                  ).result || null
                );
              } catch (o) {
                if (o instanceof Uk) return null;
                throw o;
              }
            }),
            (t.prototype.write = function (e) {
              try {
                return (
                  ++this.txCount, this.storeWriter.writeToStore(this.data, e)
                );
              } finally {
                !--this.txCount &&
                  !1 !== e.broadcast &&
                  this.broadcastWatches();
              }
            }),
            (t.prototype.modify = function (e) {
              if (Mt.call(e, "id") && !e.id) return !1;
              var n = e.optimistic ? this.optimisticData : this.data;
              try {
                return ++this.txCount, n.modify(e.id || "ROOT_QUERY", e.fields);
              } finally {
                !--this.txCount &&
                  !1 !== e.broadcast &&
                  this.broadcastWatches();
              }
            }),
            (t.prototype.diff = function (e) {
              return this.storeReader.diffQueryAgainstStore(
                C(C({}, e), {
                  store: e.optimistic ? this.optimisticData : this.data,
                  rootId: e.id || "ROOT_QUERY",
                  config: this.config,
                })
              );
            }),
            (t.prototype.watch = function (e) {
              var n = this;
              return (
                this.watches.size ||
                  (function DW(i) {
                    El(i).vars.forEach(function (t) {
                      return t.attachCache(i);
                    });
                  })(this),
                this.watches.add(e),
                e.immediate && this.maybeBroadcastWatch(e),
                function () {
                  n.watches.delete(e) && !n.watches.size && Ok(n),
                    n.maybeBroadcastWatch.forget(e);
                }
              );
            }),
            (t.prototype.gc = function (e) {
              co.reset();
              var n = this.optimisticData.gc();
              return (
                e &&
                  !this.txCount &&
                  (e.resetResultCache
                    ? this.resetResultCache(e.resetResultIdentities)
                    : e.resetResultIdentities && this.storeReader.resetCanon()),
                n
              );
            }),
            (t.prototype.retain = function (e, n) {
              return (n ? this.optimisticData : this.data).retain(e);
            }),
            (t.prototype.release = function (e, n) {
              return (n ? this.optimisticData : this.data).release(e);
            }),
            (t.prototype.identify = function (e) {
              if (Fe(e)) return e.__ref;
              try {
                return this.policies.identify(e)[0];
              } catch (n) {
                __DEV__ && O.warn(n);
              }
            }),
            (t.prototype.evict = function (e) {
              if (!e.id) {
                if (Mt.call(e, "id")) return !1;
                e = C(C({}, e), { id: "ROOT_QUERY" });
              }
              try {
                return ++this.txCount, this.optimisticData.evict(e, this.data);
              } finally {
                !--this.txCount &&
                  !1 !== e.broadcast &&
                  this.broadcastWatches();
              }
            }),
            (t.prototype.reset = function (e) {
              var n = this;
              return (
                this.init(),
                co.reset(),
                e && e.discardWatches
                  ? (this.watches.forEach(function (r) {
                      return n.maybeBroadcastWatch.forget(r);
                    }),
                    this.watches.clear(),
                    Ok(this))
                  : this.broadcastWatches(),
                Promise.resolve()
              );
            }),
            (t.prototype.removeOptimistic = function (e) {
              var n = this.optimisticData.removeLayer(e);
              n !== this.optimisticData &&
                ((this.optimisticData = n), this.broadcastWatches());
            }),
            (t.prototype.batch = function (e) {
              var c,
                n = this,
                r = e.update,
                o = e.optimistic,
                s = void 0 === o || o,
                a = e.removeOptimistic,
                l = e.onWatchUpdated,
                d = function (h) {
                  var m = n.data,
                    p = n.optimisticData;
                  ++n.txCount, h && (n.data = n.optimisticData = h);
                  try {
                    return (c = r(n));
                  } finally {
                    --n.txCount, (n.data = m), (n.optimisticData = p);
                  }
                },
                u = new Set();
              return (
                l &&
                  !this.txCount &&
                  this.broadcastWatches(
                    C(C({}, e), {
                      onWatchUpdated: function (h) {
                        return u.add(h), !1;
                      },
                    })
                  ),
                "string" == typeof s
                  ? (this.optimisticData = this.optimisticData.addLayer(s, d))
                  : !1 === s
                  ? d(this.data)
                  : d(),
                "string" == typeof a &&
                  (this.optimisticData = this.optimisticData.removeLayer(a)),
                l && u.size
                  ? (this.broadcastWatches(
                      C(C({}, e), {
                        onWatchUpdated: function (h, f) {
                          var m = l.call(this, h, f);
                          return !1 !== m && u.delete(h), m;
                        },
                      })
                    ),
                    u.size &&
                      u.forEach(function (h) {
                        return n.maybeBroadcastWatch.dirty(h);
                      }))
                  : this.broadcastWatches(e),
                c
              );
            }),
            (t.prototype.performTransaction = function (e, n) {
              return this.batch({ update: e, optimistic: n || null !== n });
            }),
            (t.prototype.transformDocument = function (e) {
              if (this.addTypename) {
                var n = this.typenameDocumentCache.get(e);
                return (
                  n ||
                    ((n = U_(e)),
                    this.typenameDocumentCache.set(e, n),
                    this.typenameDocumentCache.set(n, n)),
                  n
                );
              }
              return e;
            }),
            (t.prototype.transformForLink = function (e) {
              var n = this.config.fragments;
              return n ? n.transform(e) : e;
            }),
            (t.prototype.broadcastWatches = function (e) {
              var n = this;
              this.txCount ||
                this.watches.forEach(function (r) {
                  return n.maybeBroadcastWatch(r, e);
                });
            }),
            (t.prototype.broadcastWatch = function (e, n) {
              var r = e.lastDiff,
                o = this.diff(e);
              (n &&
                (e.optimistic &&
                  "string" == typeof n.optimistic &&
                  (o.fromOptimisticTransaction = !0),
                n.onWatchUpdated &&
                  !1 === n.onWatchUpdated.call(this, e, o, r))) ||
                ((!r || !Ct(r.result, o.result)) &&
                  e.callback((e.lastDiff = o), r));
            }),
            t
          );
        })(VW);
      class tQ extends yn {
        constructor(t, e) {
          super(),
            (this.httpClient = t),
            (this.options = e),
            (this.print = UT),
            this.options.operationPrinter &&
              (this.print = this.options.operationPrinter),
            (this.requester = (n) =>
              new Be((r) => {
                const o = n.getContext(),
                  s = (y, _) =>
                    (function uo(...i) {
                      const t = i.find((e) => typeof e < "u");
                      return typeof t > "u" ? i[i.length - 1] : t;
                    })(o[y], this.options[y], _);
                let a = s("method", "POST");
                const l = s("includeQuery", !0),
                  c = s("includeExtensions", !1),
                  d = s("uri", "graphql"),
                  u = s("withCredentials"),
                  h = s("useMultipart"),
                  f = !0 === this.options.useGETForQueries,
                  m = n.query.definitions.some(
                    (y) =>
                      "OperationDefinition" === y.kind &&
                      "query" === y.operation
                  );
                f && m && (a = "GET");
                const p = {
                  method: a,
                  url: "function" == typeof d ? d(n) : d,
                  body: {
                    operationName: n.operationName,
                    variables: n.variables,
                  },
                  options: {
                    withCredentials: u,
                    useMultipart: h,
                    headers: this.options.headers,
                  },
                };
                c && (p.body.extensions = n.extensions),
                  l && (p.body.query = this.print(n.query));
                const g = (function _I(i) {
                  let t =
                    i.headers && i.headers instanceof Xi
                      ? i.headers
                      : new Xi(i.headers);
                  if (i.clientAwareness) {
                    const { name: e, version: n } = i.clientAwareness;
                    e &&
                      !t.has("apollographql-client-name") &&
                      (t = t.set("apollographql-client-name", e)),
                      n &&
                        !t.has("apollographql-client-version") &&
                        (t = t.set("apollographql-client-version", n));
                  }
                  return t;
                })(o);
                p.options.headers = ((i, t) =>
                  i && t
                    ? t.keys().reduce((n, r) => n.set(r, t.getAll(r)), i)
                    : t || i)(p.options.headers, g);
                const b = ((i, t, e) => {
                  const n =
                      -1 !==
                      ["POST", "PUT", "PATCH"].indexOf(i.method.toUpperCase()),
                    o = i.body.length;
                  let a,
                    s = i.options && i.options.useMultipart;
                  if (s) {
                    if (o)
                      return new be((c) =>
                        c.error(
                          new Error(
                            "File upload is not available when combined with Batching"
                          )
                        )
                      );
                    if (!n)
                      return new be((c) =>
                        c.error(
                          new Error(
                            "File upload is not available when GET is used"
                          )
                        )
                      );
                    if (!e)
                      return new be((c) =>
                        c.error(
                          new Error(
                            'To use File upload you need to pass "extractFiles" function from "extract-files" library to HttpLink\'s options'
                          )
                        )
                      );
                    (a = e(i.body)), (s = !!a.files.size);
                  }
                  let l = {};
                  if (o) {
                    if (!n)
                      return new be((c) =>
                        c.error(
                          new Error(
                            "Batching is not available for GET requests"
                          )
                        )
                      );
                    l = { body: i.body };
                  } else
                    l = n
                      ? { body: s ? a.clone : i.body }
                      : {
                          params: Object.keys(i.body).reduce((u, h) => {
                            const f = i.body[h];
                            return (
                              (u[h] =
                                -1 !==
                                ["variables", "extensions"].indexOf(
                                  h.toLowerCase()
                                )
                                  ? JSON.stringify(f)
                                  : f),
                              u
                            );
                          }, {}),
                        };
                  if (s && n) {
                    const c = new FormData();
                    c.append("operations", JSON.stringify(l.body));
                    const d = {},
                      u = a.files;
                    let h = 0;
                    u.forEach((f) => {
                      d[++h] = f;
                    }),
                      c.append("map", JSON.stringify(d)),
                      (h = 0),
                      u.forEach((f, m) => {
                        c.append(++h + "", m, m.name);
                      }),
                      (l.body = c);
                  }
                  return t.request(i.method, i.url, {
                    observe: "response",
                    responseType: "json",
                    reportProgress: !1,
                    ...l,
                    ...i.options,
                  });
                })(p, this.httpClient, this.options.extractFiles).subscribe({
                  next: (y) => {
                    n.setContext({ response: y }), r.next(y.body);
                  },
                  error: (y) => r.error(y),
                  complete: () => r.complete(),
                });
                return () => {
                  b.closed || b.unsubscribe();
                };
              }));
        }
        request(t) {
          return this.requester(t);
        }
      }
      let bI = (() => {
        class i {
          constructor(e) {
            this.httpClient = e;
          }
          create(e) {
            return new tQ(this.httpClient, e);
          }
        }
        return (
          (i.ɵfac = function (e) {
            return new (e || i)(w(Su));
          }),
          (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
          i
        );
      })();
      class Os {}
      (Os.ɵfac = function (t) {
        return new (t || Os)();
      }),
        (Os.ɵmod = K({ type: Os })),
        (Os.ɵinj = Q({
          providers: [
            {
              provide: rb,
              useFactory: function nQ(i) {
                return {
                  link: i.create({ uri: "http://localhost:4000/graphql" }),
                  cache: new mI(),
                };
              },
              deps: [bI],
            },
          ],
        }));
      const Ps = new E("CallSetDisabledState", {
          providedIn: "root",
          factory: () => nh,
        }),
        nh = "always";
      let oA = (() => {
        class i {}
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵmod = K({ type: i })),
          (i.ɵinj = Q({})),
          i
        );
      })();
      const Ab = new E("NgModelWithFormControlWarning");
      let o7 = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [oA] })),
            i
          );
        })(),
        a7 = (() => {
          class i {
            static withConfig(e) {
              return {
                ngModule: i,
                providers: [
                  {
                    provide: Ab,
                    useValue: e.warnOnNgModelWithFormControl ?? "always",
                  },
                  { provide: Ps, useValue: e.callSetDisabledState ?? nh },
                ],
              };
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [o7] })),
            i
          );
        })();
      class Ol {
        constructor() {
          this.title = "app";
        }
      }
      (Ol.ɵfac = function (t) {
        return new (t || Ol)();
      }),
        (Ol.ɵcmp = Te({
          type: Ol,
          selectors: [["app-root"]],
          decls: 3,
          vars: 0,
          consts: [
            [1, "content"],
            [1, "content__main"],
          ],
          template: function (t, e) {
            1 & t &&
              (ne(0, "div", 0)(1, "div", 1), Ze(2, "router-outlet"), me()());
          },
          dependencies: [Kd],
        }));
      const Vb_production = !0,
        Vb_googleAuthClientId =
          "1068443878218-kk375e4311cc3r2rk3b0hn9ukm900tjo.apps.googleusercontent.com",
        Vb_serviceEndpoint = "/graphql";
      function wA(i) {
        return new yn(function (t, e) {
          return new Be(function (n) {
            var r, o, s;
            try {
              r = e(t).subscribe({
                next: function (a) {
                  a.errors &&
                  (s = i({
                    graphQLErrors: a.errors,
                    response: a,
                    operation: t,
                    forward: e,
                  }))
                    ? (o = s.subscribe({
                        next: n.next.bind(n),
                        error: n.error.bind(n),
                        complete: n.complete.bind(n),
                      }))
                    : n.next(a);
                },
                error: function (a) {
                  (s = i({
                    operation: t,
                    networkError: a,
                    graphQLErrors: a && a.result && a.result.errors,
                    forward: e,
                  }))
                    ? (o = s.subscribe({
                        next: n.next.bind(n),
                        error: n.error.bind(n),
                        complete: n.complete.bind(n),
                      }))
                    : n.error(a);
                },
                complete: function () {
                  s || n.complete.bind(n)();
                },
              });
            } catch (a) {
              i({ networkError: a, operation: t, forward: e }), n.error(a);
            }
            return function () {
              r && r.unsubscribe(), o && r.unsubscribe();
            };
          });
        });
      }
      !(function (i) {
        function t(e) {
          var n = i.call(this) || this;
          return (n.link = wA(e)), n;
        }
        xi(t, i),
          (t.prototype.request = function (e, n) {
            return this.link.request(e, n);
          });
      })(yn);
      let TA = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fu, gi, fe, ys, TS, W$] })),
            i
          );
        })(),
        B7 = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({})),
            i
          );
        })(),
        kA = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fe, ll, ll, B7, fe] })),
            i
          );
        })(),
        FA = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fe, ys, fe] })),
            i
          );
        })(),
        NA = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [xS, fe, xS, fe] })),
            i
          );
        })(),
        LA = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fe] })),
            i
          );
        })(),
        BA = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [gi, fe] })),
            i
          );
        })();
      const e9 = {
        provide: new E("mat-select-scroll-strategy"),
        deps: [ws],
        useFactory: function J7(i) {
          return () => i.scrollStrategies.reposition();
        },
      };
      let t9 = (() => {
        class i {}
        return (
          (i.ɵfac = function (e) {
            return new (e || i)();
          }),
          (i.ɵmod = K({ type: i })),
          (i.ɵinj = Q({
            providers: [e9],
            imports: [gi, t_, kS, fe, xu, ll, kS, fe],
          })),
          i
        );
      })();
      const o9 = {
        provide: new E("mat-tooltip-scroll-strategy"),
        deps: [ws],
        useFactory: function r9(i) {
          return () => i.scrollStrategies.reposition({ scrollThrottle: 20 });
        },
      };
      let a9 = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({
              providers: [o9],
              imports: [bS, gi, t_, fe, fe, xu],
            })),
            i
          );
        })(),
        Ub = (() => {
          class i {
            constructor() {
              (this.changes = new se()),
                (this.itemsPerPageLabel = "Items per page:"),
                (this.nextPageLabel = "Next page"),
                (this.previousPageLabel = "Previous page"),
                (this.firstPageLabel = "First page"),
                (this.lastPageLabel = "Last page"),
                (this.getRangeLabel = (e, n, r) => {
                  if (0 == r || 0 == n) return `0 of ${r}`;
                  const o = e * n;
                  return `${o + 1} \u2013 ${
                    o < (r = Math.max(r, 0)) ? Math.min(o + n, r) : o + n
                  } of ${r}`;
                });
            }
          }
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵprov = k({ token: i, factory: i.ɵfac, providedIn: "root" })),
            i
          );
        })();
      const h9 = {
        provide: Ub,
        deps: [[new rn(), new Ir(), Ub]],
        useFactory: function u9(i) {
          return i || new Ub();
        },
      };
      let VA = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ providers: [h9], imports: [gi, gu, t9, a9] })),
            i
          );
        })(),
        HA = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({})),
            i
          );
        })(),
        zA = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [HA, fe, ys, gi, HA, fe] })),
            i
          );
        })(),
        N9 = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [Jg] })),
            i
          );
        })(),
        JA = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [fe, N9, fe] })),
            i
          );
        })(),
        tR = (() => {
          class i {}
          return (
            (i.ɵfac = function (e) {
              return new (e || i)();
            }),
            (i.ɵmod = K({ type: i })),
            (i.ɵinj = Q({ imports: [gi, fe, Kg, ys, fu, bS, fe] })),
            i
          );
        })();
      const rY = wA(({ graphQLErrors: i, networkError: t }) => {
          i &&
            i.length > 0 &&
            (i[0]?.statusCode >= 400 && i[0]?.statusCode < 500
              ? console.error(`[Client side error]: ${i[0].message}`)
              : console.error(`[Server side error]: ${i[0].message}`)),
            t && console.error(`[Network error]: ${t.message}`);
        }),
        oY = (function l7(i) {
          return new yn(function (t, e) {
            var n = Cr(t, []);
            return new Be(function (r) {
              var o,
                s = !1;
              return (
                Promise.resolve(n)
                  .then(function (a) {
                    return i(a, t.getContext());
                  })
                  .then(t.setContext)
                  .then(function () {
                    s ||
                      (o = e(t).subscribe({
                        next: r.next.bind(r),
                        error: r.error.bind(r),
                        complete: r.complete.bind(r),
                      }));
                  })
                  .catch(r.error.bind(r)),
                function () {
                  (s = !0), o && o.unsubscribe();
                }
              );
            });
          });
        })((i, { headers: t }) => ({
          headers: {
            ...t,
            Accept: "charset=utf-8",
            authorization: "Bearer random token",
            "Content-Type": "application/json",
          },
        }));
      class Vs {}
      (Vs.ɵfac = function (t) {
        return new (t || Vs)();
      }),
        (Vs.ɵmod = K({ type: Vs, bootstrap: [Ol] })),
        (Vs.ɵinj = Q({
          providers: [
            {
              provide: "SocialAuthServiceConfig",
              useValue: {
                autoLogin: !0,
                providers: [
                  {
                    id: ps.PROVIDER_ID,
                    provider: new ps(Vb_googleAuthClientId),
                  },
                ],
              },
            },
            {
              provide: rb,
              useFactory: function sY(i) {
                const t = new mI({}),
                  e = i.create({
                    uri: `${location.protocol}//${location.host}${Vb_serviceEndpoint}`,
                  });
                return {
                  connectToDevTools: !Vb_production,
                  assumeImmutableResults: !0,
                  cache: t,
                  link: yn.from([oY, rY, e]),
                  defaultOptions: { watchQuery: { errorPolicy: "all" } },
                };
              },
              deps: [bI],
            },
            ro,
          ],
          imports: [
            WD,
            Cs,
            OU,
            Os,
            HG,
            a7,
            w5,
            TA,
            XS,
            ll,
            kA,
            gu,
            n_,
            NA,
            LA,
            BA,
            VA,
            zA,
            JA,
            FA,
            tR,
            vT,
            TA,
            XS,
            ll,
            kA,
            vT,
            gu,
            n_,
            NA,
            LA,
            BA,
            VA,
            zA,
            JA,
            FA,
            tR,
          ],
        })),
        xH()
          .bootstrapModule(Vs)
          .catch((i) => console.error(i));
    },
  },
  (_e) => {
    _e((_e.s = 715));
  },
]);
